{
  "version": 3,
  "sources": ["../../fast-diff/diff.js", "../../lodash.clonedeep/index.js", "../../lodash.isequal/index.js", "../../quill-delta/src/AttributeMap.ts", "../../quill-delta/src/Op.ts", "../../quill-delta/src/OpIterator.ts", "../../quill-delta/src/Delta.ts", "../../eventemitter3/index.js", "../../parchment/src/scope.ts", "../../parchment/src/attributor/attributor.ts", "../../parchment/src/error.ts", "../../parchment/src/registry.ts", "../../parchment/src/attributor/class.ts", "../../parchment/src/attributor/style.ts", "../../parchment/src/attributor/store.ts", "../../parchment/src/blot/abstract/shadow.ts", "../../parchment/src/blot/abstract/leaf.ts", "../../parchment/src/collection/linked-list.ts", "../../parchment/src/blot/abstract/parent.ts", "../../parchment/src/blot/inline.ts", "../../parchment/src/blot/block.ts", "../../parchment/src/blot/abstract/container.ts", "../../parchment/src/blot/embed.ts", "../../parchment/src/blot/scroll.ts", "../../parchment/src/blot/text.ts", "../../src/core/quill.ts", "../../src/core/editor.ts", "../../src/blots/block.ts", "../../src/blots/break.ts", "../../src/blots/text.ts", "../../src/blots/inline.ts", "../../src/blots/cursor.ts", "../../eventemitter3/index.mjs", "../../src/core/instances.ts", "../../src/core/logger.ts", "../../src/core/emitter.ts", "../../src/core/selection.ts", "../../src/core/module.ts", "../../src/blots/embed.ts", "../../src/core/composition.ts", "../../src/core/theme.ts", "../../src/core/utils/scrollRectIntoView.ts", "../../src/core/utils/createRegistryWithFormats.ts", "../../src/blots/container.ts", "../../src/blots/scroll.ts", "../../src/modules/clipboard.ts", "../../src/formats/align.ts", "../../src/formats/color.ts", "../../src/formats/background.ts", "../../src/formats/code.ts", "../../src/formats/direction.ts", "../../src/formats/font.ts", "../../src/formats/size.ts", "../../src/modules/keyboard.ts", "../../src/modules/normalizeExternalHTML/normalizers/googleDocs.ts", "../../src/modules/normalizeExternalHTML/normalizers/msWord.ts", "../../src/modules/normalizeExternalHTML/index.ts", "../../src/modules/history.ts", "../../src/modules/uploader.ts", "../../src/core.ts", "../../src/modules/input.ts", "../../src/modules/uiNode.ts", "../../src/formats/indent.ts", "../../src/formats/blockquote.ts", "../../src/formats/header.ts", "../../src/formats/list.ts", "../../src/formats/bold.ts", "../../src/formats/italic.ts", "../../src/formats/link.ts", "../../src/formats/script.ts", "../../src/formats/strike.ts", "../../src/formats/underline.ts", "../../src/formats/formula.ts", "../../src/formats/image.ts", "../../src/formats/video.ts", "../../src/modules/syntax.ts", "../../src/modules/table.ts", "../../src/formats/table.ts", "../../src/modules/toolbar.ts", "../../src/ui/icons.ts", "../../src/ui/picker.ts", "../../src/ui/color-picker.ts", "../../src/ui/icon-picker.ts", "../../src/ui/tooltip.ts", "../../src/themes/base.ts", "../../src/themes/bubble.ts", "../../src/themes/snow.ts", "../../src/quill.ts"],
  "sourcesContent": ["/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\n * @param {boolean} [cleanup] Apply semantic cleanup before returning.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos, cleanup, _fix_unicode) {\n  // Check for equality\n  if (text1 === text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (cursor_pos != null) {\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n    if (editdiff) {\n      return editdiff;\n    }\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs, _fix_unicode);\n  if (cleanup) {\n    diff_cleanupSemantic(diffs);\n  }\n  return diffs;\n}\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)],\n    ];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [\n      [DIFF_DELETE, text1],\n      [DIFF_INSERT, text2],\n    ];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n}\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = delta % 2 !== 0;\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (\n        x1 < text1_length &&\n        y1 < text2_length &&\n        text1.charAt(x1) === text2.charAt(y1)\n      ) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (\n        x2 < text1_length &&\n        y2 < text2_length &&\n        text1.charAt(text1_length - x2 - 1) ===\n          text2.charAt(text2_length - y2 - 1)\n      ) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [\n    [DIFF_DELETE, text1],\n    [DIFF_INSERT, text2],\n  ];\n}\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n}\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(pointerstart, pointermid) ==\n      text2.substring(pointerstart, pointermid)\n    ) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n    pointermid--;\n  }\n\n  return pointermid;\n}\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\nfunction diff_commonOverlap_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (\n      found == 0 ||\n      text1.substring(text_length - length) == text2.substring(0, length)\n    ) {\n      best = length;\n      length++;\n    }\n  }\n}\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\n    ) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n    pointermid--;\n  }\n\n  return pointermid;\n}\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null; // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = \"\";\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n      var prefixLength = diff_commonPrefix(\n        longtext.substring(i),\n        shorttext.substring(j)\n      );\n      var suffixLength = diff_commonSuffix(\n        longtext.substring(0, i),\n        shorttext.substring(0, j)\n      );\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common =\n          shorttext.substring(j - suffixLength, j) +\n          shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [\n        best_longtext_a,\n        best_longtext_b,\n        best_shorttext_a,\n        best_shorttext_b,\n        best_common,\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(\n    longtext,\n    shorttext,\n    Math.ceil(longtext.length / 4)\n  );\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(\n    longtext,\n    shorttext,\n    Math.ceil(longtext.length / 2)\n  );\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n}\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\nfunction diff_cleanupSemantic(diffs) {\n  var changes = false;\n  var equalities = []; // Stack of indices where equalities are found.\n  var equalitiesLength = 0; // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0; // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {\n      // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastequality = diffs[pointer][1];\n    } else {\n      // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (\n        lastequality &&\n        lastequality.length <=\n          Math.max(length_insertions1, length_deletions1) &&\n        lastequality.length <= Math.max(length_insertions2, length_deletions2)\n      ) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0, [\n          DIFF_DELETE,\n          lastequality,\n        ]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0; // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastequality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    diff_cleanupMerge(diffs);\n  }\n  diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (\n      diffs[pointer - 1][0] == DIFF_DELETE &&\n      diffs[pointer][0] == DIFF_INSERT\n    ) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (\n          overlap_length1 >= deletion.length / 2 ||\n          overlap_length1 >= insertion.length / 2\n        ) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0, [\n            DIFF_EQUAL,\n            insertion.substring(0, overlap_length1),\n          ]);\n          diffs[pointer - 1][1] = deletion.substring(\n            0,\n            deletion.length - overlap_length1\n          );\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (\n          overlap_length2 >= deletion.length / 2 ||\n          overlap_length2 >= insertion.length / 2\n        ) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0, [\n            DIFF_EQUAL,\n            deletion.substring(0, overlap_length2),\n          ]);\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] = insertion.substring(\n            0,\n            insertion.length - overlap_length2\n          );\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] = deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n}\n\nvar nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\nvar whitespaceRegex_ = /\\s/;\nvar linebreakRegex_ = /[\\r\\n]/;\nvar blanklineEndRegex_ = /\\n\\r?\\n$/;\nvar blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\nfunction diff_cleanupSemanticLossless(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 && char1.match(whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 && char2.match(whitespaceRegex_);\n    var lineBreak1 = whitespace1 && char1.match(linebreakRegex_);\n    var lineBreak2 = whitespace2 && char2.match(linebreakRegex_);\n    var blankLine1 = lineBreak1 && one.match(blanklineEndRegex_);\n    var blankLine2 = lineBreak2 && two.match(blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (\n      diffs[pointer - 1][0] == DIFF_EQUAL &&\n      diffs[pointer + 1][0] == DIFF_EQUAL\n    ) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore =\n        diff_cleanupSemanticScore_(equality1, edit) +\n        diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score =\n          diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n}\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\n */\nfunction diff_cleanupMerge(diffs, fix_unicode) {\n  diffs.push([DIFF_EQUAL, \"\"]); // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = \"\";\n  var text_insert = \"\";\n  var commonlength;\n  while (pointer < diffs.length) {\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n      diffs.splice(pointer, 1);\n      continue;\n    }\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        var previous_equality = pointer - count_insert - count_delete - 1;\n        if (fix_unicode) {\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\n          // we assume that the old and new text in the diff are complete and correct\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\n          // of the previous equality and the beginning of this equality.  this may create\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\n          // particular case, both equalities go away, we absorb any previous inequalities,\n          // and we keep scanning for the next equality before rewriting the tuples.\n          if (\n            previous_equality >= 0 &&\n            ends_with_pair_start(diffs[previous_equality][1])\n          ) {\n            var stray = diffs[previous_equality][1].slice(-1);\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(\n              0,\n              -1\n            );\n            text_delete = stray + text_delete;\n            text_insert = stray + text_insert;\n            if (!diffs[previous_equality][1]) {\n              // emptied out previous equality, so delete it and include previous delete/insert\n              diffs.splice(previous_equality, 1);\n              pointer--;\n              var k = previous_equality - 1;\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                count_insert++;\n                text_insert = diffs[k][1] + text_insert;\n                k--;\n              }\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                count_delete++;\n                text_delete = diffs[k][1] + text_delete;\n                k--;\n              }\n              previous_equality = k;\n            }\n          }\n          if (starts_with_pair_end(diffs[pointer][1])) {\n            var stray = diffs[pointer][1].charAt(0);\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\n            text_delete += stray;\n            text_insert += stray;\n          }\n        }\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          // for empty equality not at end, wait for next equality\n          diffs.splice(pointer, 1);\n          break;\n        }\n        if (text_delete.length > 0 || text_insert.length > 0) {\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\n          if (text_delete.length > 0 && text_insert.length > 0) {\n            // Factor out any common prefixes.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (previous_equality >= 0) {\n                diffs[previous_equality][1] += text_insert.substring(\n                  0,\n                  commonlength\n                );\n              } else {\n                diffs.splice(0, 0, [\n                  DIFF_EQUAL,\n                  text_insert.substring(0, commonlength),\n                ]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixes.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                text_insert.substring(text_insert.length - commonlength) +\n                diffs[pointer][1];\n              text_insert = text_insert.substring(\n                0,\n                text_insert.length - commonlength\n              );\n              text_delete = text_delete.substring(\n                0,\n                text_delete.length - commonlength\n              );\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          var n = count_insert + count_delete;\n          if (text_delete.length === 0 && text_insert.length === 0) {\n            diffs.splice(pointer - n, n);\n            pointer = pointer - n;\n          } else if (text_delete.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 1;\n          } else if (text_insert.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n            pointer = pointer - n + 1;\n          } else {\n            diffs.splice(\n              pointer - n,\n              n,\n              [DIFF_DELETE, text_delete],\n              [DIFF_INSERT, text_insert]\n            );\n            pointer = pointer - n + 2;\n          }\n        }\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = \"\";\n        text_insert = \"\";\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === \"\") {\n    diffs.pop(); // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (\n      diffs[pointer - 1][0] === DIFF_EQUAL &&\n      diffs[pointer + 1][0] === DIFF_EQUAL\n    ) {\n      // This is a single edit surrounded by equalities.\n      if (\n        diffs[pointer][1].substring(\n          diffs[pointer][1].length - diffs[pointer - 1][1].length\n        ) === diffs[pointer - 1][1]\n      ) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] =\n          diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(\n            0,\n            diffs[pointer][1].length - diffs[pointer - 1][1].length\n          );\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (\n        diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n        diffs[pointer + 1][1]\n      ) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n          diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs, fix_unicode);\n  }\n}\n\nfunction is_surrogate_pair_start(charCode) {\n  return charCode >= 0xd800 && charCode <= 0xdbff;\n}\n\nfunction is_surrogate_pair_end(charCode) {\n  return charCode >= 0xdc00 && charCode <= 0xdfff;\n}\n\nfunction starts_with_pair_end(str) {\n  return is_surrogate_pair_end(str.charCodeAt(0));\n}\n\nfunction ends_with_pair_start(str) {\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n}\n\nfunction remove_empty_tuples(tuples) {\n  var ret = [];\n  for (var i = 0; i < tuples.length; i++) {\n    if (tuples[i][1].length > 0) {\n      ret.push(tuples[i]);\n    }\n  }\n  return ret;\n}\n\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n    return null;\n  }\n  return remove_empty_tuples([\n    [DIFF_EQUAL, before],\n    [DIFF_DELETE, oldMiddle],\n    [DIFF_INSERT, newMiddle],\n    [DIFF_EQUAL, after],\n  ]);\n}\n\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\n  // note: this runs after equality check has ruled out exact equality\n  var oldRange =\n    typeof cursor_pos === \"number\"\n      ? { index: cursor_pos, length: 0 }\n      : cursor_pos.oldRange;\n  var newRange = typeof cursor_pos === \"number\" ? null : cursor_pos.newRange;\n  // take into account the old and new selection to generate the best diff\n  // possible for a text edit.  for example, a text change from \"xxx\" to \"xx\"\n  // could be a delete or forwards-delete of any one of the x's, or the\n  // result of selecting two of the x's and typing \"x\".\n  var oldLength = oldText.length;\n  var newLength = newText.length;\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n    // see if we have an insert or delete before or after cursor\n    var oldCursor = oldRange.index;\n    var oldBefore = oldText.slice(0, oldCursor);\n    var oldAfter = oldText.slice(oldCursor);\n    var maybeNewCursor = newRange ? newRange.index : null;\n    editBefore: {\n      // is this an insert or delete right before oldCursor?\n      var newCursor = oldCursor + newLength - oldLength;\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n        break editBefore;\n      }\n      if (newCursor < 0 || newCursor > newLength) {\n        break editBefore;\n      }\n      var newBefore = newText.slice(0, newCursor);\n      var newAfter = newText.slice(newCursor);\n      if (newAfter !== oldAfter) {\n        break editBefore;\n      }\n      var prefixLength = Math.min(oldCursor, newCursor);\n      var oldPrefix = oldBefore.slice(0, prefixLength);\n      var newPrefix = newBefore.slice(0, prefixLength);\n      if (oldPrefix !== newPrefix) {\n        break editBefore;\n      }\n      var oldMiddle = oldBefore.slice(prefixLength);\n      var newMiddle = newBefore.slice(prefixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n    }\n    editAfter: {\n      // is this an insert or delete right after oldCursor?\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n        break editAfter;\n      }\n      var cursor = oldCursor;\n      var newBefore = newText.slice(0, cursor);\n      var newAfter = newText.slice(cursor);\n      if (newBefore !== oldBefore) {\n        break editAfter;\n      }\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n      if (oldSuffix !== newSuffix) {\n        break editAfter;\n      }\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\n    replaceRange: {\n      // see if diff could be a splice of the old selection range\n      var oldPrefix = oldText.slice(0, oldRange.index);\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n      var prefixLength = oldPrefix.length;\n      var suffixLength = oldSuffix.length;\n      if (newLength < prefixLength + suffixLength) {\n        break replaceRange;\n      }\n      var newPrefix = newText.slice(0, prefixLength);\n      var newSuffix = newText.slice(newLength - suffixLength);\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n        break replaceRange;\n      }\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n\n  return null;\n}\n\nfunction diff(text1, text2, cursor_pos, cleanup) {\n  // only pass fix_unicode=true at the top level, not when diff_main is\n  // recursively invoked\n  return diff_main(text1, text2, cursor_pos, cleanup, true);\n}\n\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n", "/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n", "import cloneDeep = require('lodash.clonedeep');\nimport isEqual = require('lodash.isequal');\n\ninterface AttributeMap {\n  [key: string]: unknown;\n}\n\nnamespace AttributeMap {\n  export function compose(\n    a: AttributeMap = {},\n    b: AttributeMap = {},\n    keepNull = false,\n  ): AttributeMap | undefined {\n    if (typeof a !== 'object') {\n      a = {};\n    }\n    if (typeof b !== 'object') {\n      b = {};\n    }\n    let attributes = cloneDeep(b);\n    if (!keepNull) {\n      attributes = Object.keys(attributes).reduce<AttributeMap>((copy, key) => {\n        if (attributes[key] != null) {\n          copy[key] = attributes[key];\n        }\n        return copy;\n      }, {});\n    }\n    for (const key in a) {\n      if (a[key] !== undefined && b[key] === undefined) {\n        attributes[key] = a[key];\n      }\n    }\n    return Object.keys(attributes).length > 0 ? attributes : undefined;\n  }\n\n  export function diff(\n    a: AttributeMap = {},\n    b: AttributeMap = {},\n  ): AttributeMap | undefined {\n    if (typeof a !== 'object') {\n      a = {};\n    }\n    if (typeof b !== 'object') {\n      b = {};\n    }\n    const attributes = Object.keys(a)\n      .concat(Object.keys(b))\n      .reduce<AttributeMap>((attrs, key) => {\n        if (!isEqual(a[key], b[key])) {\n          attrs[key] = b[key] === undefined ? null : b[key];\n        }\n        return attrs;\n      }, {});\n    return Object.keys(attributes).length > 0 ? attributes : undefined;\n  }\n\n  export function invert(\n    attr: AttributeMap = {},\n    base: AttributeMap = {},\n  ): AttributeMap {\n    attr = attr || {};\n    const baseInverted = Object.keys(base).reduce<AttributeMap>((memo, key) => {\n      if (base[key] !== attr[key] && attr[key] !== undefined) {\n        memo[key] = base[key];\n      }\n      return memo;\n    }, {});\n    return Object.keys(attr).reduce<AttributeMap>((memo, key) => {\n      if (attr[key] !== base[key] && base[key] === undefined) {\n        memo[key] = null;\n      }\n      return memo;\n    }, baseInverted);\n  }\n\n  export function transform(\n    a: AttributeMap | undefined,\n    b: AttributeMap | undefined,\n    priority = false,\n  ): AttributeMap | undefined {\n    if (typeof a !== 'object') {\n      return b;\n    }\n    if (typeof b !== 'object') {\n      return undefined;\n    }\n    if (!priority) {\n      return b; // b simply overwrites us without priority\n    }\n    const attributes = Object.keys(b).reduce<AttributeMap>((attrs, key) => {\n      if (a[key] === undefined) {\n        attrs[key] = b[key]; // null is a valid value\n      }\n      return attrs;\n    }, {});\n    return Object.keys(attributes).length > 0 ? attributes : undefined;\n  }\n}\n\nexport default AttributeMap;\n", "import AttributeMap from './AttributeMap';\n\ninterface Op {\n  // only one property out of {insert, delete, retain} will be present\n  insert?: string | Record<string, unknown>;\n  delete?: number;\n  retain?: number | Record<string, unknown>;\n\n  attributes?: AttributeMap;\n}\n\nnamespace Op {\n  export function length(op: Op): number {\n    if (typeof op.delete === 'number') {\n      return op.delete;\n    } else if (typeof op.retain === 'number') {\n      return op.retain;\n    } else if (typeof op.retain === 'object' && op.retain !== null) {\n      return 1;\n    } else {\n      return typeof op.insert === 'string' ? op.insert.length : 1;\n    }\n  }\n}\n\nexport default Op;\n", "import Op from './Op';\n\nexport default class Iterator {\n  ops: Op[];\n  index: number;\n  offset: number;\n\n  constructor(ops: Op[]) {\n    this.ops = ops;\n    this.index = 0;\n    this.offset = 0;\n  }\n\n  hasNext(): boolean {\n    return this.peekLength() < Infinity;\n  }\n\n  next(length?: number): Op {\n    if (!length) {\n      length = Infinity;\n    }\n    const nextOp = this.ops[this.index];\n    if (nextOp) {\n      const offset = this.offset;\n      const opLength = Op.length(nextOp);\n      if (length >= opLength - offset) {\n        length = opLength - offset;\n        this.index += 1;\n        this.offset = 0;\n      } else {\n        this.offset += length;\n      }\n      if (typeof nextOp.delete === 'number') {\n        return { delete: length };\n      } else {\n        const retOp: Op = {};\n        if (nextOp.attributes) {\n          retOp.attributes = nextOp.attributes;\n        }\n        if (typeof nextOp.retain === 'number') {\n          retOp.retain = length;\n        } else if (\n          typeof nextOp.retain === 'object' &&\n          nextOp.retain !== null\n        ) {\n          // offset should === 0, length should === 1\n          retOp.retain = nextOp.retain;\n        } else if (typeof nextOp.insert === 'string') {\n          retOp.insert = nextOp.insert.substr(offset, length);\n        } else {\n          // offset should === 0, length should === 1\n          retOp.insert = nextOp.insert;\n        }\n        return retOp;\n      }\n    } else {\n      return { retain: Infinity };\n    }\n  }\n\n  peek(): Op {\n    return this.ops[this.index];\n  }\n\n  peekLength(): number {\n    if (this.ops[this.index]) {\n      // Should never return 0 if our index is being managed correctly\n      return Op.length(this.ops[this.index]) - this.offset;\n    } else {\n      return Infinity;\n    }\n  }\n\n  peekType(): string {\n    const op = this.ops[this.index];\n    if (op) {\n      if (typeof op.delete === 'number') {\n        return 'delete';\n      } else if (\n        typeof op.retain === 'number' ||\n        (typeof op.retain === 'object' && op.retain !== null)\n      ) {\n        return 'retain';\n      } else {\n        return 'insert';\n      }\n    }\n    return 'retain';\n  }\n\n  rest(): Op[] {\n    if (!this.hasNext()) {\n      return [];\n    } else if (this.offset === 0) {\n      return this.ops.slice(this.index);\n    } else {\n      const offset = this.offset;\n      const index = this.index;\n      const next = this.next();\n      const rest = this.ops.slice(this.index);\n      this.offset = offset;\n      this.index = index;\n      return [next].concat(rest);\n    }\n  }\n}\n", "import * as diff from 'fast-diff';\nimport cloneDeep = require('lodash.clonedeep');\nimport isEqual = require('lodash.isequal');\nimport AttributeMap from './AttributeMap';\nimport Op from './Op';\nimport OpIterator from './OpIterator';\n\nconst NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()\n\ninterface EmbedHandler<T> {\n  compose(a: T, b: T, keepNull: boolean): T;\n  invert(a: T, b: T): T;\n  transform(a: T, b: T, priority: boolean): T;\n}\n\nconst getEmbedTypeAndData = (\n  a: Op['insert'] | Op['retain'],\n  b: Op['insert'],\n): [string, unknown, unknown] => {\n  if (typeof a !== 'object' || a === null) {\n    throw new Error(`cannot retain a ${typeof a}`);\n  }\n  if (typeof b !== 'object' || b === null) {\n    throw new Error(`cannot retain a ${typeof b}`);\n  }\n  const embedType = Object.keys(a)[0];\n  if (!embedType || embedType !== Object.keys(b)[0]) {\n    throw new Error(\n      `embed types not matched: ${embedType} != ${Object.keys(b)[0]}`,\n    );\n  }\n  return [embedType, a[embedType], b[embedType]];\n};\n\nclass Delta {\n  static Op = Op;\n  static OpIterator = OpIterator;\n  static AttributeMap = AttributeMap;\n  private static handlers: { [embedType: string]: EmbedHandler<unknown> } = {};\n\n  static registerEmbed<T>(embedType: string, handler: EmbedHandler<T>): void {\n    this.handlers[embedType] = handler;\n  }\n\n  static unregisterEmbed(embedType: string): void {\n    delete this.handlers[embedType];\n  }\n\n  private static getHandler(embedType: string): EmbedHandler<unknown> {\n    const handler = this.handlers[embedType];\n    if (!handler) {\n      throw new Error(`no handlers for embed type \"${embedType}\"`);\n    }\n    return handler;\n  }\n\n  ops: Op[];\n  constructor(ops?: Op[] | { ops: Op[] }) {\n    // Assume we are given a well formed ops\n    if (Array.isArray(ops)) {\n      this.ops = ops;\n    } else if (ops != null && Array.isArray(ops.ops)) {\n      this.ops = ops.ops;\n    } else {\n      this.ops = [];\n    }\n  }\n\n  insert(\n    arg: string | Record<string, unknown>,\n    attributes?: AttributeMap | null,\n  ): this {\n    const newOp: Op = {};\n    if (typeof arg === 'string' && arg.length === 0) {\n      return this;\n    }\n    newOp.insert = arg;\n    if (\n      attributes != null &&\n      typeof attributes === 'object' &&\n      Object.keys(attributes).length > 0\n    ) {\n      newOp.attributes = attributes;\n    }\n    return this.push(newOp);\n  }\n\n  delete(length: number): this {\n    if (length <= 0) {\n      return this;\n    }\n    return this.push({ delete: length });\n  }\n\n  retain(\n    length: number | Record<string, unknown>,\n    attributes?: AttributeMap | null,\n  ): this {\n    if (typeof length === 'number' && length <= 0) {\n      return this;\n    }\n    const newOp: Op = { retain: length };\n    if (\n      attributes != null &&\n      typeof attributes === 'object' &&\n      Object.keys(attributes).length > 0\n    ) {\n      newOp.attributes = attributes;\n    }\n    return this.push(newOp);\n  }\n\n  push(newOp: Op): this {\n    let index = this.ops.length;\n    let lastOp = this.ops[index - 1];\n    newOp = cloneDeep(newOp);\n    if (typeof lastOp === 'object') {\n      if (\n        typeof newOp.delete === 'number' &&\n        typeof lastOp.delete === 'number'\n      ) {\n        this.ops[index - 1] = { delete: lastOp.delete + newOp.delete };\n        return this;\n      }\n      // Since it does not matter if we insert before or after deleting at the same index,\n      // always prefer to insert first\n      if (typeof lastOp.delete === 'number' && newOp.insert != null) {\n        index -= 1;\n        lastOp = this.ops[index - 1];\n        if (typeof lastOp !== 'object') {\n          this.ops.unshift(newOp);\n          return this;\n        }\n      }\n      if (isEqual(newOp.attributes, lastOp.attributes)) {\n        if (\n          typeof newOp.insert === 'string' &&\n          typeof lastOp.insert === 'string'\n        ) {\n          this.ops[index - 1] = { insert: lastOp.insert + newOp.insert };\n          if (typeof newOp.attributes === 'object') {\n            this.ops[index - 1].attributes = newOp.attributes;\n          }\n          return this;\n        } else if (\n          typeof newOp.retain === 'number' &&\n          typeof lastOp.retain === 'number'\n        ) {\n          this.ops[index - 1] = { retain: lastOp.retain + newOp.retain };\n          if (typeof newOp.attributes === 'object') {\n            this.ops[index - 1].attributes = newOp.attributes;\n          }\n          return this;\n        }\n      }\n    }\n    if (index === this.ops.length) {\n      this.ops.push(newOp);\n    } else {\n      this.ops.splice(index, 0, newOp);\n    }\n    return this;\n  }\n\n  chop(): this {\n    const lastOp = this.ops[this.ops.length - 1];\n    if (lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes) {\n      this.ops.pop();\n    }\n    return this;\n  }\n\n  filter(predicate: (op: Op, index: number) => boolean): Op[] {\n    return this.ops.filter(predicate);\n  }\n\n  forEach(predicate: (op: Op, index: number) => void): void {\n    this.ops.forEach(predicate);\n  }\n\n  map<T>(predicate: (op: Op, index: number) => T): T[] {\n    return this.ops.map(predicate);\n  }\n\n  partition(predicate: (op: Op) => boolean): [Op[], Op[]] {\n    const passed: Op[] = [];\n    const failed: Op[] = [];\n    this.forEach((op) => {\n      const target = predicate(op) ? passed : failed;\n      target.push(op);\n    });\n    return [passed, failed];\n  }\n\n  reduce<T>(\n    predicate: (accum: T, curr: Op, index: number) => T,\n    initialValue: T,\n  ): T {\n    return this.ops.reduce(predicate, initialValue);\n  }\n\n  changeLength(): number {\n    return this.reduce((length, elem) => {\n      if (elem.insert) {\n        return length + Op.length(elem);\n      } else if (elem.delete) {\n        return length - elem.delete;\n      }\n      return length;\n    }, 0);\n  }\n\n  length(): number {\n    return this.reduce((length, elem) => {\n      return length + Op.length(elem);\n    }, 0);\n  }\n\n  slice(start = 0, end = Infinity): Delta {\n    const ops = [];\n    const iter = new OpIterator(this.ops);\n    let index = 0;\n    while (index < end && iter.hasNext()) {\n      let nextOp;\n      if (index < start) {\n        nextOp = iter.next(start - index);\n      } else {\n        nextOp = iter.next(end - index);\n        ops.push(nextOp);\n      }\n      index += Op.length(nextOp);\n    }\n    return new Delta(ops);\n  }\n\n  compose(other: Delta): Delta {\n    const thisIter = new OpIterator(this.ops);\n    const otherIter = new OpIterator(other.ops);\n    const ops = [];\n    const firstOther = otherIter.peek();\n    if (\n      firstOther != null &&\n      typeof firstOther.retain === 'number' &&\n      firstOther.attributes == null\n    ) {\n      let firstLeft = firstOther.retain;\n      while (\n        thisIter.peekType() === 'insert' &&\n        thisIter.peekLength() <= firstLeft\n      ) {\n        firstLeft -= thisIter.peekLength();\n        ops.push(thisIter.next());\n      }\n      if (firstOther.retain - firstLeft > 0) {\n        otherIter.next(firstOther.retain - firstLeft);\n      }\n    }\n    const delta = new Delta(ops);\n    while (thisIter.hasNext() || otherIter.hasNext()) {\n      if (otherIter.peekType() === 'insert') {\n        delta.push(otherIter.next());\n      } else if (thisIter.peekType() === 'delete') {\n        delta.push(thisIter.next());\n      } else {\n        const length = Math.min(thisIter.peekLength(), otherIter.peekLength());\n        const thisOp = thisIter.next(length);\n        const otherOp = otherIter.next(length);\n        if (otherOp.retain) {\n          const newOp: Op = {};\n          if (typeof thisOp.retain === 'number') {\n            newOp.retain =\n              typeof otherOp.retain === 'number' ? length : otherOp.retain;\n          } else {\n            if (typeof otherOp.retain === 'number') {\n              if (thisOp.retain == null) {\n                newOp.insert = thisOp.insert;\n              } else {\n                newOp.retain = thisOp.retain;\n              }\n            } else {\n              const action = thisOp.retain == null ? 'insert' : 'retain';\n              const [embedType, thisData, otherData] = getEmbedTypeAndData(\n                thisOp[action],\n                otherOp.retain,\n              );\n              const handler = Delta.getHandler(embedType);\n              newOp[action] = {\n                [embedType]: handler.compose(\n                  thisData,\n                  otherData,\n                  action === 'retain',\n                ),\n              };\n            }\n          }\n          // Preserve null when composing with a retain, otherwise remove it for inserts\n          const attributes = AttributeMap.compose(\n            thisOp.attributes,\n            otherOp.attributes,\n            typeof thisOp.retain === 'number',\n          );\n          if (attributes) {\n            newOp.attributes = attributes;\n          }\n          delta.push(newOp);\n\n          // Optimization if rest of other is just retain\n          if (\n            !otherIter.hasNext() &&\n            isEqual(delta.ops[delta.ops.length - 1], newOp)\n          ) {\n            const rest = new Delta(thisIter.rest());\n            return delta.concat(rest).chop();\n          }\n\n          // Other op should be delete, we could be an insert or retain\n          // Insert + delete cancels out\n        } else if (\n          typeof otherOp.delete === 'number' &&\n          (typeof thisOp.retain === 'number' ||\n            (typeof thisOp.retain === 'object' && thisOp.retain !== null))\n        ) {\n          delta.push(otherOp);\n        }\n      }\n    }\n    return delta.chop();\n  }\n\n  concat(other: Delta): Delta {\n    const delta = new Delta(this.ops.slice());\n    if (other.ops.length > 0) {\n      delta.push(other.ops[0]);\n      delta.ops = delta.ops.concat(other.ops.slice(1));\n    }\n    return delta;\n  }\n\n  diff(other: Delta, cursor?: number | diff.CursorInfo): Delta {\n    if (this.ops === other.ops) {\n      return new Delta();\n    }\n    const strings = [this, other].map((delta) => {\n      return delta\n        .map((op) => {\n          if (op.insert != null) {\n            return typeof op.insert === 'string' ? op.insert : NULL_CHARACTER;\n          }\n          const prep = delta === other ? 'on' : 'with';\n          throw new Error('diff() called ' + prep + ' non-document');\n        })\n        .join('');\n    });\n    const retDelta = new Delta();\n    const diffResult = diff(strings[0], strings[1], cursor, true);\n    const thisIter = new OpIterator(this.ops);\n    const otherIter = new OpIterator(other.ops);\n    diffResult.forEach((component: diff.Diff) => {\n      let length = component[1].length;\n      while (length > 0) {\n        let opLength = 0;\n        switch (component[0]) {\n          case diff.INSERT:\n            opLength = Math.min(otherIter.peekLength(), length);\n            retDelta.push(otherIter.next(opLength));\n            break;\n          case diff.DELETE:\n            opLength = Math.min(length, thisIter.peekLength());\n            thisIter.next(opLength);\n            retDelta.delete(opLength);\n            break;\n          case diff.EQUAL:\n            opLength = Math.min(\n              thisIter.peekLength(),\n              otherIter.peekLength(),\n              length,\n            );\n            const thisOp = thisIter.next(opLength);\n            const otherOp = otherIter.next(opLength);\n            if (isEqual(thisOp.insert, otherOp.insert)) {\n              retDelta.retain(\n                opLength,\n                AttributeMap.diff(thisOp.attributes, otherOp.attributes),\n              );\n            } else {\n              retDelta.push(otherOp).delete(opLength);\n            }\n            break;\n        }\n        length -= opLength;\n      }\n    });\n    return retDelta.chop();\n  }\n\n  eachLine(\n    predicate: (\n      line: Delta,\n      attributes: AttributeMap,\n      index: number,\n    ) => boolean | void,\n    newline = '\\n',\n  ): void {\n    const iter = new OpIterator(this.ops);\n    let line = new Delta();\n    let i = 0;\n    while (iter.hasNext()) {\n      if (iter.peekType() !== 'insert') {\n        return;\n      }\n      const thisOp = iter.peek();\n      const start = Op.length(thisOp) - iter.peekLength();\n      const index =\n        typeof thisOp.insert === 'string'\n          ? thisOp.insert.indexOf(newline, start) - start\n          : -1;\n      if (index < 0) {\n        line.push(iter.next());\n      } else if (index > 0) {\n        line.push(iter.next(index));\n      } else {\n        if (predicate(line, iter.next(1).attributes || {}, i) === false) {\n          return;\n        }\n        i += 1;\n        line = new Delta();\n      }\n    }\n    if (line.length() > 0) {\n      predicate(line, {}, i);\n    }\n  }\n\n  invert(base: Delta): Delta {\n    const inverted = new Delta();\n    this.reduce((baseIndex, op) => {\n      if (op.insert) {\n        inverted.delete(Op.length(op));\n      } else if (typeof op.retain === 'number' && op.attributes == null) {\n        inverted.retain(op.retain);\n        return baseIndex + op.retain;\n      } else if (op.delete || typeof op.retain === 'number') {\n        const length = (op.delete || op.retain) as number;\n        const slice = base.slice(baseIndex, baseIndex + length);\n        slice.forEach((baseOp) => {\n          if (op.delete) {\n            inverted.push(baseOp);\n          } else if (op.retain && op.attributes) {\n            inverted.retain(\n              Op.length(baseOp),\n              AttributeMap.invert(op.attributes, baseOp.attributes),\n            );\n          }\n        });\n        return baseIndex + length;\n      } else if (typeof op.retain === 'object' && op.retain !== null) {\n        const slice = base.slice(baseIndex, baseIndex + 1);\n        const baseOp = new OpIterator(slice.ops).next();\n        const [embedType, opData, baseOpData] = getEmbedTypeAndData(\n          op.retain,\n          baseOp.insert,\n        );\n        const handler = Delta.getHandler(embedType);\n        inverted.retain(\n          { [embedType]: handler.invert(opData, baseOpData) },\n          AttributeMap.invert(op.attributes, baseOp.attributes),\n        );\n        return baseIndex + 1;\n      }\n      return baseIndex;\n    }, 0);\n    return inverted.chop();\n  }\n\n  transform(index: number, priority?: boolean): number;\n  transform(other: Delta, priority?: boolean): Delta;\n  transform(arg: number | Delta, priority = false): typeof arg {\n    priority = !!priority;\n    if (typeof arg === 'number') {\n      return this.transformPosition(arg, priority);\n    }\n    const other: Delta = arg;\n    const thisIter = new OpIterator(this.ops);\n    const otherIter = new OpIterator(other.ops);\n    const delta = new Delta();\n    while (thisIter.hasNext() || otherIter.hasNext()) {\n      if (\n        thisIter.peekType() === 'insert' &&\n        (priority || otherIter.peekType() !== 'insert')\n      ) {\n        delta.retain(Op.length(thisIter.next()));\n      } else if (otherIter.peekType() === 'insert') {\n        delta.push(otherIter.next());\n      } else {\n        const length = Math.min(thisIter.peekLength(), otherIter.peekLength());\n        const thisOp = thisIter.next(length);\n        const otherOp = otherIter.next(length);\n        if (thisOp.delete) {\n          // Our delete either makes their delete redundant or removes their retain\n          continue;\n        } else if (otherOp.delete) {\n          delta.push(otherOp);\n        } else {\n          const thisData = thisOp.retain;\n          const otherData = otherOp.retain;\n          let transformedData: Op['retain'] =\n            typeof otherData === 'object' && otherData !== null\n              ? otherData\n              : length;\n          if (\n            typeof thisData === 'object' &&\n            thisData !== null &&\n            typeof otherData === 'object' &&\n            otherData !== null\n          ) {\n            const embedType = Object.keys(thisData)[0];\n            if (embedType === Object.keys(otherData)[0]) {\n              const handler = Delta.getHandler(embedType);\n              if (handler) {\n                transformedData = {\n                  [embedType]: handler.transform(\n                    thisData[embedType],\n                    otherData[embedType],\n                    priority,\n                  ),\n                };\n              }\n            }\n          }\n\n          // We retain either their retain or insert\n          delta.retain(\n            transformedData,\n            AttributeMap.transform(\n              thisOp.attributes,\n              otherOp.attributes,\n              priority,\n            ),\n          );\n        }\n      }\n    }\n    return delta.chop();\n  }\n\n  transformPosition(index: number, priority = false): number {\n    priority = !!priority;\n    const thisIter = new OpIterator(this.ops);\n    let offset = 0;\n    while (thisIter.hasNext() && offset <= index) {\n      const length = thisIter.peekLength();\n      const nextType = thisIter.peekType();\n      thisIter.next();\n      if (nextType === 'delete') {\n        index -= Math.min(length, index - offset);\n        continue;\n      } else if (nextType === 'insert' && (offset < index || !priority)) {\n        index += length;\n      }\n      offset += length;\n    }\n    return index;\n  }\n}\n\nexport default Delta;\n\nexport { Op, OpIterator, AttributeMap };\n\nif (typeof module === 'object') {\n  module.exports = Delta;\n  module.exports.default = Delta;\n}\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "enum Scope {\n  TYPE = (1 << 2) - 1, // 0011 Lower two bits\n  LEVEL = ((1 << 2) - 1) << 2, // 1100 Higher two bits\n\n  ATTRIBUTE = (1 << 0) | LEVEL, // 1101\n  BLOT = (1 << 1) | LEVEL, // 1110\n  INLINE = (1 << 2) | TYPE, // 0111\n  BLOCK = (1 << 3) | TYPE, // 1011\n\n  BLOCK_BLOT = BLOCK & BLOT, // 1010\n  INLINE_BLOT = INLINE & BLOT, // 0110\n  BLOCK_ATTRIBUTE = BLOCK & ATTRIBUTE, // 1001\n  INLINE_ATTRIBUTE = INLINE & ATTRIBUTE, // 0101\n\n  ANY = TYPE | LEVEL,\n}\n\nexport default Scope;\n", "import Scope from '../scope.js';\n\nexport interface AttributorOptions {\n  scope?: Scope;\n  whitelist?: string[];\n}\n\nexport default class Attributor {\n  public static keys(node: HTMLElement): string[] {\n    return Array.from(node.attributes).map((item: Attr) => item.name);\n  }\n\n  public scope: Scope;\n  public whitelist: string[] | undefined;\n\n  constructor(\n    public readonly attrName: string,\n    public readonly keyName: string,\n    options: AttributorOptions = {},\n  ) {\n    const attributeBit = Scope.TYPE & Scope.ATTRIBUTE;\n    this.scope =\n      options.scope != null\n        ? // Ignore type bits, force attribute bit\n          (options.scope & Scope.LEVEL) | attributeBit\n        : Scope.ATTRIBUTE;\n    if (options.whitelist != null) {\n      this.whitelist = options.whitelist;\n    }\n  }\n\n  public add(node: HTMLElement, value: any): boolean {\n    if (!this.canAdd(node, value)) {\n      return false;\n    }\n    node.setAttribute(this.keyName, value);\n    return true;\n  }\n\n  public canAdd(_node: HTMLElement, value: any): boolean {\n    if (this.whitelist == null) {\n      return true;\n    }\n    if (typeof value === 'string') {\n      return this.whitelist.indexOf(value.replace(/[\"']/g, '')) > -1;\n    } else {\n      return this.whitelist.indexOf(value) > -1;\n    }\n  }\n\n  public remove(node: HTMLElement): void {\n    node.removeAttribute(this.keyName);\n  }\n\n  public value(node: HTMLElement): any {\n    const value = node.getAttribute(this.keyName);\n    if (this.canAdd(node, value) && value) {\n      return value;\n    }\n    return '';\n  }\n}\n", "export default class ParchmentError extends Error {\n  public message: string;\n  public name: string;\n  public stack!: string;\n\n  constructor(message: string) {\n    message = '[Parchment] ' + message;\n    super(message);\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n}\n", "import Attributor from './attributor/attributor.js';\nimport {\n  type Blot,\n  type BlotConstructor,\n  type Root,\n} from './blot/abstract/blot.js';\nimport ParchmentError from './error.js';\nimport Scope from './scope.js';\n\nexport type RegistryDefinition = Attributor | BlotConstructor;\n\nexport interface RegistryInterface {\n  create(scroll: Root, input: Node | string | Scope, value?: any): Blot;\n  query(query: string | Node | Scope, scope: Scope): RegistryDefinition | null;\n  register(...definitions: any[]): any;\n}\n\nexport default class Registry implements RegistryInterface {\n  public static blots = new WeakMap<Node, Blot>();\n\n  public static find(node?: Node | null, bubble = false): Blot | null {\n    if (node == null) {\n      return null;\n    }\n    if (this.blots.has(node)) {\n      return this.blots.get(node) || null;\n    }\n    if (bubble) {\n      let parentNode: Node | null = null;\n      try {\n        parentNode = node.parentNode;\n      } catch (err) {\n        // Probably hit a permission denied error.\n        // A known case is in Firefox, event targets can be anonymous DIVs\n        // inside an input element.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n        return null;\n      }\n      return this.find(parentNode, bubble);\n    }\n    return null;\n  }\n\n  private attributes: { [key: string]: Attributor } = {};\n  private classes: { [key: string]: BlotConstructor } = {};\n  private tags: { [key: string]: BlotConstructor } = {};\n  private types: { [key: string]: RegistryDefinition } = {};\n\n  public create(scroll: Root, input: Node | string | Scope, value?: any): Blot {\n    const match = this.query(input);\n    if (match == null) {\n      throw new ParchmentError(`Unable to create ${input} blot`);\n    }\n    const blotClass = match as BlotConstructor;\n    const node =\n      // @ts-expect-error Fix me later\n      input instanceof Node || input.nodeType === Node.TEXT_NODE\n        ? input\n        : blotClass.create(value);\n\n    const blot = new blotClass(scroll, node as Node, value);\n    Registry.blots.set(blot.domNode, blot);\n    return blot;\n  }\n\n  public find(node: Node | null, bubble = false): Blot | null {\n    return Registry.find(node, bubble);\n  }\n\n  public query(\n    query: string | Node | Scope,\n    scope: Scope = Scope.ANY,\n  ): RegistryDefinition | null {\n    let match;\n    if (typeof query === 'string') {\n      match = this.types[query] || this.attributes[query];\n      // @ts-expect-error Fix me later\n    } else if (query instanceof Text || query.nodeType === Node.TEXT_NODE) {\n      match = this.types.text;\n    } else if (typeof query === 'number') {\n      if (query & Scope.LEVEL & Scope.BLOCK) {\n        match = this.types.block;\n      } else if (query & Scope.LEVEL & Scope.INLINE) {\n        match = this.types.inline;\n      }\n    } else if (query instanceof Element) {\n      const names = (query.getAttribute('class') || '').split(/\\s+/);\n      names.some((name) => {\n        match = this.classes[name];\n        if (match) {\n          return true;\n        }\n        return false;\n      });\n      match = match || this.tags[query.tagName];\n    }\n    if (match == null) {\n      return null;\n    }\n    if (\n      'scope' in match &&\n      scope & Scope.LEVEL & match.scope &&\n      scope & Scope.TYPE & match.scope\n    ) {\n      return match;\n    }\n    return null;\n  }\n\n  public register(...definitions: RegistryDefinition[]): RegistryDefinition[] {\n    return definitions.map((definition) => {\n      const isBlot = 'blotName' in definition;\n      const isAttr = 'attrName' in definition;\n      if (!isBlot && !isAttr) {\n        throw new ParchmentError('Invalid definition');\n      } else if (isBlot && definition.blotName === 'abstract') {\n        throw new ParchmentError('Cannot register abstract class');\n      }\n      const key = isBlot\n        ? definition.blotName\n        : isAttr\n          ? definition.attrName\n          : (undefined as never); // already handled by above checks\n      this.types[key] = definition;\n\n      if (isAttr) {\n        if (typeof definition.keyName === 'string') {\n          this.attributes[definition.keyName] = definition;\n        }\n      } else if (isBlot) {\n        if (definition.className) {\n          this.classes[definition.className] = definition;\n        }\n        if (definition.tagName) {\n          if (Array.isArray(definition.tagName)) {\n            definition.tagName = definition.tagName.map((tagName: string) => {\n              return tagName.toUpperCase();\n            });\n          } else {\n            definition.tagName = definition.tagName.toUpperCase();\n          }\n          const tagNames = Array.isArray(definition.tagName)\n            ? definition.tagName\n            : [definition.tagName];\n          tagNames.forEach((tag: string) => {\n            if (this.tags[tag] == null || definition.className == null) {\n              this.tags[tag] = definition;\n            }\n          });\n        }\n      }\n      return definition;\n    });\n  }\n}\n", "import Attributor from './attributor.js';\n\nfunction match(node: HTMLElement, prefix: string): string[] {\n  const className = node.getAttribute('class') || '';\n  return className\n    .split(/\\s+/)\n    .filter((name) => name.indexOf(`${prefix}-`) === 0);\n}\n\nclass ClassAttributor extends Attributor {\n  public static keys(node: HTMLElement): string[] {\n    return (node.getAttribute('class') || '')\n      .split(/\\s+/)\n      .map((name) => name.split('-').slice(0, -1).join('-'));\n  }\n\n  public add(node: HTMLElement, value: any): boolean {\n    if (!this.canAdd(node, value)) {\n      return false;\n    }\n    this.remove(node);\n    node.classList.add(`${this.keyName}-${value}`);\n    return true;\n  }\n\n  public remove(node: HTMLElement): void {\n    const matches = match(node, this.keyName);\n    matches.forEach((name) => {\n      node.classList.remove(name);\n    });\n    if (node.classList.length === 0) {\n      node.removeAttribute('class');\n    }\n  }\n\n  public value(node: HTMLElement): any {\n    const result = match(node, this.keyName)[0] || '';\n    const value = result.slice(this.keyName.length + 1); // +1 for hyphen\n    return this.canAdd(node, value) ? value : '';\n  }\n}\n\nexport default ClassAttributor;\n", "import Attributor from './attributor.js';\n\nfunction camelize(name: string): string {\n  const parts = name.split('-');\n  const rest = parts\n    .slice(1)\n    .map((part: string) => part[0].toUpperCase() + part.slice(1))\n    .join('');\n  return parts[0] + rest;\n}\n\nclass StyleAttributor extends Attributor {\n  public static keys(node: HTMLElement): string[] {\n    return (node.getAttribute('style') || '').split(';').map((value) => {\n      const arr = value.split(':');\n      return arr[0].trim();\n    });\n  }\n\n  public add(node: HTMLElement, value: any): boolean {\n    if (!this.canAdd(node, value)) {\n      return false;\n    }\n    // @ts-expect-error Fix me later\n    node.style[camelize(this.keyName)] = value;\n    return true;\n  }\n\n  public remove(node: HTMLElement): void {\n    // @ts-expect-error Fix me later\n    node.style[camelize(this.keyName)] = '';\n    if (!node.getAttribute('style')) {\n      node.removeAttribute('style');\n    }\n  }\n\n  public value(node: HTMLElement): any {\n    // @ts-expect-error Fix me later\n    const value = node.style[camelize(this.keyName)];\n    return this.canAdd(node, value) ? value : '';\n  }\n}\n\nexport default StyleAttributor;\n", "import type { Formattable } from '../blot/abstract/blot.js';\nimport Registry from '../registry.js';\nimport Scope from '../scope.js';\nimport Attributor from './attributor.js';\nimport ClassAttributor from './class.js';\nimport StyleAttributor from './style.js';\n\nclass AttributorStore {\n  private attributes: { [key: string]: Attributor } = {};\n  private domNode: HTMLElement;\n\n  constructor(domNode: HTMLElement) {\n    this.domNode = domNode;\n    this.build();\n  }\n\n  public attribute(attribute: Attributor, value: any): void {\n    // verb\n    if (value) {\n      if (attribute.add(this.domNode, value)) {\n        if (attribute.value(this.domNode) != null) {\n          this.attributes[attribute.attrName] = attribute;\n        } else {\n          delete this.attributes[attribute.attrName];\n        }\n      }\n    } else {\n      attribute.remove(this.domNode);\n      delete this.attributes[attribute.attrName];\n    }\n  }\n\n  public build(): void {\n    this.attributes = {};\n    const blot = Registry.find(this.domNode);\n    if (blot == null) {\n      return;\n    }\n    const attributes = Attributor.keys(this.domNode);\n    const classes = ClassAttributor.keys(this.domNode);\n    const styles = StyleAttributor.keys(this.domNode);\n    attributes\n      .concat(classes)\n      .concat(styles)\n      .forEach((name) => {\n        const attr = blot.scroll.query(name, Scope.ATTRIBUTE);\n        if (attr instanceof Attributor) {\n          this.attributes[attr.attrName] = attr;\n        }\n      });\n  }\n\n  public copy(target: Formattable): void {\n    Object.keys(this.attributes).forEach((key) => {\n      const value = this.attributes[key].value(this.domNode);\n      target.format(key, value);\n    });\n  }\n\n  public move(target: Formattable): void {\n    this.copy(target);\n    Object.keys(this.attributes).forEach((key) => {\n      this.attributes[key].remove(this.domNode);\n    });\n    this.attributes = {};\n  }\n\n  public values(): { [key: string]: any } {\n    return Object.keys(this.attributes).reduce(\n      (attributes: { [key: string]: any }, name: string) => {\n        attributes[name] = this.attributes[name].value(this.domNode);\n        return attributes;\n      },\n      {},\n    );\n  }\n}\n\nexport default AttributorStore;\n", "import ParchmentError from '../../error.js';\nimport Registry from '../../registry.js';\nimport Scope from '../../scope.js';\nimport type {\n  Blot,\n  BlotConstructor,\n  Formattable,\n  Parent,\n  Root,\n} from './blot.js';\n\nclass ShadowBlot implements Blot {\n  public static blotName = 'abstract';\n  public static className: string;\n  public static requiredContainer: BlotConstructor;\n  public static scope: Scope;\n  public static tagName: string | string[];\n\n  public static create(rawValue?: unknown): Node {\n    if (this.tagName == null) {\n      throw new ParchmentError('Blot definition missing tagName');\n    }\n    let node: HTMLElement;\n    let value: string | number | undefined;\n    if (Array.isArray(this.tagName)) {\n      if (typeof rawValue === 'string') {\n        value = rawValue.toUpperCase();\n        if (parseInt(value, 10).toString() === value) {\n          value = parseInt(value, 10);\n        }\n      } else if (typeof rawValue === 'number') {\n        value = rawValue;\n      }\n      if (typeof value === 'number') {\n        node = document.createElement(this.tagName[value - 1]);\n      } else if (value && this.tagName.indexOf(value) > -1) {\n        node = document.createElement(value);\n      } else {\n        node = document.createElement(this.tagName[0]);\n      }\n    } else {\n      node = document.createElement(this.tagName);\n    }\n    if (this.className) {\n      node.classList.add(this.className);\n    }\n    return node;\n  }\n\n  public prev: Blot | null;\n  public next: Blot | null;\n  // @ts-expect-error Fix me later\n  public parent: Parent;\n\n  // Hack for accessing inherited static methods\n  get statics(): any {\n    return this.constructor;\n  }\n  constructor(\n    public scroll: Root,\n    public domNode: Node,\n  ) {\n    Registry.blots.set(domNode, this);\n    this.prev = null;\n    this.next = null;\n  }\n\n  public attach(): void {\n    // Nothing to do\n  }\n\n  public clone(): Blot {\n    const domNode = this.domNode.cloneNode(false);\n    return this.scroll.create(domNode);\n  }\n\n  public detach(): void {\n    if (this.parent != null) {\n      this.parent.removeChild(this);\n    }\n    Registry.blots.delete(this.domNode);\n  }\n\n  public deleteAt(index: number, length: number): void {\n    const blot = this.isolate(index, length);\n    blot.remove();\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    const blot = this.isolate(index, length);\n    if (this.scroll.query(name, Scope.BLOT) != null && value) {\n      blot.wrap(name, value);\n    } else if (this.scroll.query(name, Scope.ATTRIBUTE) != null) {\n      const parent = this.scroll.create(this.statics.scope) as Parent &\n        Formattable;\n      blot.wrap(parent);\n      parent.format(name, value);\n    }\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    const blot =\n      def == null\n        ? this.scroll.create('text', value)\n        : this.scroll.create(value, def);\n    const ref = this.split(index);\n    this.parent.insertBefore(blot, ref || undefined);\n  }\n\n  public isolate(index: number, length: number): Blot {\n    const target = this.split(index);\n    if (target == null) {\n      throw new Error('Attempt to isolate at end');\n    }\n    target.split(length);\n    return target;\n  }\n\n  public length(): number {\n    return 1;\n  }\n\n  public offset(root: Blot = this.parent): number {\n    if (this.parent == null || this === root) {\n      return 0;\n    }\n    return this.parent.children.offset(this) + this.parent.offset(root);\n  }\n\n  public optimize(_context?: { [key: string]: any }): void {\n    if (\n      this.statics.requiredContainer &&\n      !(this.parent instanceof this.statics.requiredContainer)\n    ) {\n      this.wrap(this.statics.requiredContainer.blotName);\n    }\n  }\n\n  public remove(): void {\n    if (this.domNode.parentNode != null) {\n      this.domNode.parentNode.removeChild(this.domNode);\n    }\n    this.detach();\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement =\n      typeof name === 'string' ? this.scroll.create(name, value) : name;\n    if (this.parent != null) {\n      this.parent.insertBefore(replacement, this.next || undefined);\n      this.remove();\n    }\n    return replacement;\n  }\n\n  public split(index: number, _force?: boolean): Blot | null {\n    return index === 0 ? this : this.next;\n  }\n\n  public update(\n    _mutations: MutationRecord[],\n    _context: { [key: string]: any },\n  ): void {\n    // Nothing to do by default\n  }\n\n  public wrap(name: string | Parent, value?: any): Parent {\n    const wrapper =\n      typeof name === 'string'\n        ? (this.scroll.create(name, value) as Parent)\n        : name;\n    if (this.parent != null) {\n      this.parent.insertBefore(wrapper, this.next || undefined);\n    }\n    if (typeof wrapper.appendChild !== 'function') {\n      throw new ParchmentError(`Cannot wrap ${name}`);\n    }\n    wrapper.appendChild(this);\n    return wrapper;\n  }\n}\n\nexport default ShadowBlot;\n", "import Scope from '../../scope.js';\nimport type { Leaf } from './blot.js';\nimport ShadowBlot from './shadow.js';\n\nclass LeafBlot extends ShadowBlot implements Leaf {\n  public static scope = Scope.INLINE_BLOT;\n\n  /**\n   * Returns the value represented by domNode if it is this Blot's type\n   * No checking that domNode can represent this Blot type is required so\n   * applications needing it should check externally before calling.\n   */\n  public static value(_domNode: Node): any {\n    return true;\n  }\n\n  /**\n   * Given location represented by node and offset from DOM Selection Range,\n   * return index to that location.\n   */\n  public index(node: Node, offset: number): number {\n    if (\n      this.domNode === node ||\n      this.domNode.compareDocumentPosition(node) &\n        Node.DOCUMENT_POSITION_CONTAINED_BY\n    ) {\n      return Math.min(offset, 1);\n    }\n    return -1;\n  }\n\n  /**\n   * Given index to location within blot, return node and offset representing\n   * that location, consumable by DOM Selection Range\n   */\n  public position(index: number, _inclusive?: boolean): [Node, number] {\n    const childNodes: Node[] = Array.from(this.parent.domNode.childNodes);\n    let offset = childNodes.indexOf(this.domNode);\n    if (index > 0) {\n      offset += 1;\n    }\n    return [this.parent.domNode, offset];\n  }\n\n  /**\n   * Return value represented by this blot\n   * Should not change without interaction from API or\n   * user change detectable by update()\n   */\n  public value(): any {\n    return {\n      [this.statics.blotName]: this.statics.value(this.domNode) || true,\n    };\n  }\n}\n\nexport default LeafBlot;\n", "import type LinkedNode from './linked-node.js';\n\nclass LinkedList<T extends LinkedNode> {\n  public head: T | null;\n  public tail: T | null;\n  public length: number;\n\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  public append(...nodes: T[]): void {\n    this.insertBefore(nodes[0], null);\n    if (nodes.length > 1) {\n      const rest = nodes.slice(1);\n      this.append(...rest);\n    }\n  }\n\n  public at(index: number): T | null {\n    const next = this.iterator();\n    let cur = next();\n    while (cur && index > 0) {\n      index -= 1;\n      cur = next();\n    }\n    return cur;\n  }\n\n  public contains(node: T): boolean {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      if (cur === node) {\n        return true;\n      }\n      cur = next();\n    }\n    return false;\n  }\n\n  public indexOf(node: T): number {\n    const next = this.iterator();\n    let cur = next();\n    let index = 0;\n    while (cur) {\n      if (cur === node) {\n        return index;\n      }\n      index += 1;\n      cur = next();\n    }\n    return -1;\n  }\n\n  public insertBefore(node: T | null, refNode: T | null): void {\n    if (node == null) {\n      return;\n    }\n    this.remove(node);\n    node.next = refNode;\n    if (refNode != null) {\n      node.prev = refNode.prev;\n      if (refNode.prev != null) {\n        refNode.prev.next = node;\n      }\n      refNode.prev = node;\n      if (refNode === this.head) {\n        this.head = node;\n      }\n    } else if (this.tail != null) {\n      this.tail.next = node;\n      node.prev = this.tail;\n      this.tail = node;\n    } else {\n      node.prev = null;\n      this.head = this.tail = node;\n    }\n    this.length += 1;\n  }\n\n  public offset(target: T): number {\n    let index = 0;\n    let cur = this.head;\n    while (cur != null) {\n      if (cur === target) {\n        return index;\n      }\n      index += cur.length();\n      cur = cur.next as T;\n    }\n    return -1;\n  }\n\n  public remove(node: T): void {\n    if (!this.contains(node)) {\n      return;\n    }\n    if (node.prev != null) {\n      node.prev.next = node.next;\n    }\n    if (node.next != null) {\n      node.next.prev = node.prev;\n    }\n    if (node === this.head) {\n      this.head = node.next as T;\n    }\n    if (node === this.tail) {\n      this.tail = node.prev as T;\n    }\n    this.length -= 1;\n  }\n\n  public iterator(curNode: T | null = this.head): () => T | null {\n    // TODO use yield when we can\n    return (): T | null => {\n      const ret = curNode;\n      if (curNode != null) {\n        curNode = curNode.next as T;\n      }\n      return ret;\n    };\n  }\n\n  public find(index: number, inclusive = false): [T | null, number] {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      const length = cur.length();\n      if (\n        index < length ||\n        (inclusive &&\n          index === length &&\n          (cur.next == null || cur.next.length() !== 0))\n      ) {\n        return [cur, index];\n      }\n      index -= length;\n      cur = next();\n    }\n    return [null, 0];\n  }\n\n  public forEach(callback: (cur: T) => void): void {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      callback(cur);\n      cur = next();\n    }\n  }\n\n  public forEachAt(\n    index: number,\n    length: number,\n    callback: (cur: T, offset: number, length: number) => void,\n  ): void {\n    if (length <= 0) {\n      return;\n    }\n    const [startNode, offset] = this.find(index);\n    let curIndex = index - offset;\n    const next = this.iterator(startNode);\n    let cur = next();\n    while (cur && curIndex < index + length) {\n      const curLength = cur.length();\n      if (index > curIndex) {\n        callback(\n          cur,\n          index - curIndex,\n          Math.min(length, curIndex + curLength - index),\n        );\n      } else {\n        callback(cur, 0, Math.min(curLength, index + length - curIndex));\n      }\n      curIndex += curLength;\n      cur = next();\n    }\n  }\n\n  public map(callback: (cur: T) => any): any[] {\n    return this.reduce((memo: T[], cur: T) => {\n      memo.push(callback(cur));\n      return memo;\n    }, []);\n  }\n\n  public reduce<M>(callback: (memo: M, cur: T) => M, memo: M): M {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      memo = callback(memo, cur);\n      cur = next();\n    }\n    return memo;\n  }\n}\n\nexport default LinkedList;\n", "import LinkedList from '../../collection/linked-list.js';\nimport ParchmentError from '../../error.js';\nimport Scope from '../../scope.js';\nimport type { Blot, BlotConstructor, Parent, Root } from './blot.js';\nimport ShadowBlot from './shadow.js';\n\nfunction makeAttachedBlot(node: Node, scroll: Root): Blot {\n  const found = scroll.find(node);\n  if (found) return found;\n  try {\n    return scroll.create(node);\n  } catch (e) {\n    const blot = scroll.create(Scope.INLINE);\n    Array.from(node.childNodes).forEach((child: Node) => {\n      blot.domNode.appendChild(child);\n    });\n    if (node.parentNode) {\n      node.parentNode.replaceChild(blot.domNode, node);\n    }\n    blot.attach();\n    return blot;\n  }\n}\n\nclass ParentBlot extends ShadowBlot implements Parent {\n  /**\n   * Whitelist array of Blots that can be direct children.\n   */\n  public static allowedChildren?: BlotConstructor[];\n\n  /**\n   * Default child blot to be inserted if this blot becomes empty.\n   */\n  public static defaultChild?: BlotConstructor;\n  public static uiClass = '';\n\n  public children!: LinkedList<Blot>;\n  public domNode!: HTMLElement;\n  public uiNode: HTMLElement | null = null;\n\n  constructor(scroll: Root, domNode: Node) {\n    super(scroll, domNode);\n    this.build();\n  }\n\n  public appendChild(other: Blot): void {\n    this.insertBefore(other);\n  }\n\n  public attach(): void {\n    super.attach();\n    this.children.forEach((child) => {\n      child.attach();\n    });\n  }\n\n  public attachUI(node: HTMLElement): void {\n    if (this.uiNode != null) {\n      this.uiNode.remove();\n    }\n    this.uiNode = node;\n    if (ParentBlot.uiClass) {\n      this.uiNode.classList.add(ParentBlot.uiClass);\n    }\n    this.uiNode.setAttribute('contenteditable', 'false');\n    this.domNode.insertBefore(this.uiNode, this.domNode.firstChild);\n  }\n\n  /**\n   * Called during construction, should fill its own children LinkedList.\n   */\n  public build(): void {\n    this.children = new LinkedList<Blot>();\n    // Need to be reversed for if DOM nodes already in order\n    Array.from(this.domNode.childNodes)\n      .filter((node: Node) => node !== this.uiNode)\n      .reverse()\n      .forEach((node: Node) => {\n        try {\n          const child = makeAttachedBlot(node, this.scroll);\n          this.insertBefore(child, this.children.head || undefined);\n        } catch (err) {\n          if (err instanceof ParchmentError) {\n            return;\n          } else {\n            throw err;\n          }\n        }\n      });\n  }\n\n  public deleteAt(index: number, length: number): void {\n    if (index === 0 && length === this.length()) {\n      return this.remove();\n    }\n    this.children.forEachAt(index, length, (child, offset, childLength) => {\n      child.deleteAt(offset, childLength);\n    });\n  }\n\n  public descendant<T extends Blot>(\n    criteria: new (...args: any[]) => T,\n    index: number,\n  ): [T | null, number];\n  public descendant(\n    criteria: (blot: Blot) => boolean,\n    index: number,\n  ): [Blot | null, number];\n  public descendant(criteria: any, index = 0): [Blot | null, number] {\n    const [child, offset] = this.children.find(index);\n    if (\n      (criteria.blotName == null && criteria(child)) ||\n      (criteria.blotName != null && child instanceof criteria)\n    ) {\n      return [child as any, offset];\n    } else if (child instanceof ParentBlot) {\n      return child.descendant(criteria, offset);\n    } else {\n      return [null, -1];\n    }\n  }\n\n  public descendants<T extends Blot>(\n    criteria: new (...args: any[]) => T,\n    index?: number,\n    length?: number,\n  ): T[];\n  public descendants(\n    criteria: (blot: Blot) => boolean,\n    index?: number,\n    length?: number,\n  ): Blot[];\n  public descendants(\n    criteria: any,\n    index = 0,\n    length: number = Number.MAX_VALUE,\n  ): Blot[] {\n    let descendants: Blot[] = [];\n    let lengthLeft = length;\n    this.children.forEachAt(\n      index,\n      length,\n      (child: Blot, childIndex: number, childLength: number) => {\n        if (\n          (criteria.blotName == null && criteria(child)) ||\n          (criteria.blotName != null && child instanceof criteria)\n        ) {\n          descendants.push(child);\n        }\n        if (child instanceof ParentBlot) {\n          descendants = descendants.concat(\n            child.descendants(criteria, childIndex, lengthLeft),\n          );\n        }\n        lengthLeft -= childLength;\n      },\n    );\n    return descendants;\n  }\n\n  public detach(): void {\n    this.children.forEach((child) => {\n      child.detach();\n    });\n    super.detach();\n  }\n\n  public enforceAllowedChildren(): void {\n    let done = false;\n    this.children.forEach((child: Blot) => {\n      if (done) {\n        return;\n      }\n      const allowed = this.statics.allowedChildren.some(\n        (def: BlotConstructor) => child instanceof def,\n      );\n      if (allowed) {\n        return;\n      }\n      if (child.statics.scope === Scope.BLOCK_BLOT) {\n        if (child.next != null) {\n          this.splitAfter(child);\n        }\n        if (child.prev != null) {\n          this.splitAfter(child.prev);\n        }\n        child.parent.unwrap();\n        done = true;\n      } else if (child instanceof ParentBlot) {\n        child.unwrap();\n      } else {\n        child.remove();\n      }\n    });\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    this.children.forEachAt(index, length, (child, offset, childLength) => {\n      child.formatAt(offset, childLength, name, value);\n    });\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    const [child, offset] = this.children.find(index);\n    if (child) {\n      child.insertAt(offset, value, def);\n    } else {\n      const blot =\n        def == null\n          ? this.scroll.create('text', value)\n          : this.scroll.create(value, def);\n      this.appendChild(blot);\n    }\n  }\n\n  public insertBefore(childBlot: Blot, refBlot?: Blot | null): void {\n    if (childBlot.parent != null) {\n      childBlot.parent.children.remove(childBlot);\n    }\n    let refDomNode: Node | null = null;\n    this.children.insertBefore(childBlot, refBlot || null);\n    childBlot.parent = this;\n    if (refBlot != null) {\n      refDomNode = refBlot.domNode;\n    }\n    if (\n      this.domNode.parentNode !== childBlot.domNode ||\n      this.domNode.nextSibling !== refDomNode\n    ) {\n      this.domNode.insertBefore(childBlot.domNode, refDomNode);\n    }\n    childBlot.attach();\n  }\n\n  public length(): number {\n    return this.children.reduce((memo, child) => {\n      return memo + child.length();\n    }, 0);\n  }\n\n  public moveChildren(targetParent: Parent, refNode?: Blot | null): void {\n    this.children.forEach((child) => {\n      targetParent.insertBefore(child, refNode);\n    });\n  }\n\n  public optimize(context?: { [key: string]: any }): void {\n    super.optimize(context);\n    this.enforceAllowedChildren();\n    if (this.uiNode != null && this.uiNode !== this.domNode.firstChild) {\n      this.domNode.insertBefore(this.uiNode, this.domNode.firstChild);\n    }\n    if (this.children.length === 0) {\n      if (this.statics.defaultChild != null) {\n        const child = this.scroll.create(this.statics.defaultChild.blotName);\n        this.appendChild(child);\n        // TODO double check if necessary\n        // child.optimize(context);\n      } else {\n        this.remove();\n      }\n    }\n  }\n\n  public path(index: number, inclusive = false): [Blot, number][] {\n    const [child, offset] = this.children.find(index, inclusive);\n    const position: [Blot, number][] = [[this, index]];\n    if (child instanceof ParentBlot) {\n      return position.concat(child.path(offset, inclusive));\n    } else if (child != null) {\n      position.push([child, offset]);\n    }\n    return position;\n  }\n\n  public removeChild(child: Blot): void {\n    this.children.remove(child);\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement =\n      typeof name === 'string' ? this.scroll.create(name, value) : name;\n    if (replacement instanceof ParentBlot) {\n      this.moveChildren(replacement);\n    }\n    return super.replaceWith(replacement);\n  }\n\n  public split(index: number, force = false): Blot | null {\n    if (!force) {\n      if (index === 0) {\n        return this;\n      }\n      if (index === this.length()) {\n        return this.next;\n      }\n    }\n    const after = this.clone() as ParentBlot;\n    if (this.parent) {\n      this.parent.insertBefore(after, this.next || undefined);\n    }\n    this.children.forEachAt(index, this.length(), (child, offset, _length) => {\n      const split = child.split(offset, force);\n      if (split != null) {\n        after.appendChild(split);\n      }\n    });\n    return after;\n  }\n\n  public splitAfter(child: Blot): Parent {\n    const after = this.clone() as ParentBlot;\n    while (child.next != null) {\n      after.appendChild(child.next);\n    }\n    if (this.parent) {\n      this.parent.insertBefore(after, this.next || undefined);\n    }\n    return after;\n  }\n\n  public unwrap(): void {\n    if (this.parent) {\n      this.moveChildren(this.parent, this.next || undefined);\n    }\n    this.remove();\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    _context: { [key: string]: any },\n  ): void {\n    const addedNodes: Node[] = [];\n    const removedNodes: Node[] = [];\n    mutations.forEach((mutation) => {\n      if (mutation.target === this.domNode && mutation.type === 'childList') {\n        addedNodes.push(...mutation.addedNodes);\n        removedNodes.push(...mutation.removedNodes);\n      }\n    });\n    removedNodes.forEach((node: Node) => {\n      // Check node has actually been removed\n      // One exception is Chrome does not immediately remove IFRAMEs\n      // from DOM but MutationRecord is correct in its reported removal\n      if (\n        node.parentNode != null &&\n        // @ts-expect-error Fix me later\n        node.tagName !== 'IFRAME' &&\n        document.body.compareDocumentPosition(node) &\n          Node.DOCUMENT_POSITION_CONTAINED_BY\n      ) {\n        return;\n      }\n      const blot = this.scroll.find(node);\n      if (blot == null) {\n        return;\n      }\n      if (\n        blot.domNode.parentNode == null ||\n        blot.domNode.parentNode === this.domNode\n      ) {\n        blot.detach();\n      }\n    });\n    addedNodes\n      .filter((node) => {\n        return node.parentNode === this.domNode && node !== this.uiNode;\n      })\n      .sort((a, b) => {\n        if (a === b) {\n          return 0;\n        }\n        if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_FOLLOWING) {\n          return 1;\n        }\n        return -1;\n      })\n      .forEach((node) => {\n        let refBlot: Blot | null = null;\n        if (node.nextSibling != null) {\n          refBlot = this.scroll.find(node.nextSibling);\n        }\n        const blot = makeAttachedBlot(node, this.scroll);\n        if (blot.next !== refBlot || blot.next == null) {\n          if (blot.parent != null) {\n            blot.parent.removeChild(this);\n          }\n          this.insertBefore(blot, refBlot || undefined);\n        }\n      });\n    this.enforceAllowedChildren();\n  }\n}\n\nexport default ParentBlot;\n", "import Attributor from '../attributor/attributor.js';\nimport AttributorStore from '../attributor/store.js';\nimport Scope from '../scope.js';\nimport type {\n  Blot,\n  BlotConstructor,\n  Formattable,\n  Parent,\n  Root,\n} from './abstract/blot.js';\nimport LeafBlot from './abstract/leaf.js';\nimport ParentBlot from './abstract/parent.js';\n\n// Shallow object comparison\nfunction isEqual(\n  obj1: Record<string, unknown>,\n  obj2: Record<string, unknown>,\n): boolean {\n  if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  for (const prop in obj1) {\n    if (obj1[prop] !== obj2[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass InlineBlot extends ParentBlot implements Formattable {\n  public static allowedChildren: BlotConstructor[] = [InlineBlot, LeafBlot];\n  public static blotName = 'inline';\n  public static scope = Scope.INLINE_BLOT;\n  public static tagName: string | string[] = 'SPAN';\n\n  static create(value?: unknown) {\n    return super.create(value) as HTMLElement;\n  }\n\n  public static formats(domNode: HTMLElement, scroll: Root): any {\n    const match = scroll.query(InlineBlot.blotName);\n    if (\n      match != null &&\n      domNode.tagName === (match as BlotConstructor).tagName\n    ) {\n      return undefined;\n    } else if (typeof this.tagName === 'string') {\n      return true;\n    } else if (Array.isArray(this.tagName)) {\n      return domNode.tagName.toLowerCase();\n    }\n    return undefined;\n  }\n\n  protected attributes: AttributorStore;\n\n  constructor(scroll: Root, domNode: Node) {\n    super(scroll, domNode);\n    this.attributes = new AttributorStore(this.domNode);\n  }\n\n  public format(name: string, value: any): void {\n    if (name === this.statics.blotName && !value) {\n      this.children.forEach((child) => {\n        if (!(child instanceof InlineBlot)) {\n          child = child.wrap(InlineBlot.blotName, true);\n        }\n        this.attributes.copy(child as InlineBlot);\n      });\n      this.unwrap();\n    } else {\n      const format = this.scroll.query(name, Scope.INLINE);\n      if (format == null) {\n        return;\n      }\n      if (format instanceof Attributor) {\n        this.attributes.attribute(format, value);\n      } else if (\n        value &&\n        (name !== this.statics.blotName || this.formats()[name] !== value)\n      ) {\n        this.replaceWith(name, value);\n      }\n    }\n  }\n\n  public formats(): { [index: string]: any } {\n    const formats = this.attributes.values();\n    const format = this.statics.formats(this.domNode, this.scroll);\n    if (format != null) {\n      formats[this.statics.blotName] = format;\n    }\n    return formats;\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    if (\n      this.formats()[name] != null ||\n      this.scroll.query(name, Scope.ATTRIBUTE)\n    ) {\n      const blot = this.isolate(index, length) as InlineBlot;\n      blot.format(name, value);\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  public optimize(context: { [key: string]: any }): void {\n    super.optimize(context);\n    const formats = this.formats();\n    if (Object.keys(formats).length === 0) {\n      return this.unwrap(); // unformatted span\n    }\n    const next = this.next;\n    if (\n      next instanceof InlineBlot &&\n      next.prev === this &&\n      isEqual(formats, next.formats())\n    ) {\n      next.moveChildren(this);\n      next.remove();\n    }\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement = super.replaceWith(name, value) as InlineBlot;\n    this.attributes.copy(replacement);\n    return replacement;\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    context: { [key: string]: any },\n  ): void {\n    super.update(mutations, context);\n    const attributeChanged = mutations.some(\n      (mutation) =>\n        mutation.target === this.domNode && mutation.type === 'attributes',\n    );\n    if (attributeChanged) {\n      this.attributes.build();\n    }\n  }\n\n  public wrap(name: string | Parent, value?: any): Parent {\n    const wrapper = super.wrap(name, value);\n    if (wrapper instanceof InlineBlot) {\n      this.attributes.move(wrapper);\n    }\n    return wrapper;\n  }\n}\n\nexport default InlineBlot;\n", "import Attributor from '../attributor/attributor.js';\nimport AttributorStore from '../attributor/store.js';\nimport Scope from '../scope.js';\nimport type {\n  Blot,\n  BlotConstructor,\n  Formattable,\n  Root,\n} from './abstract/blot.js';\nimport LeafBlot from './abstract/leaf.js';\nimport ParentBlot from './abstract/parent.js';\nimport InlineBlot from './inline.js';\n\nclass BlockBlot extends ParentBlot implements Formattable {\n  public static blotName = 'block';\n  public static scope = Scope.BLOCK_BLOT;\n  public static tagName: string | string[] = 'P';\n  public static allowedChildren: BlotConstructor[] = [\n    InlineBlot,\n    BlockBlot,\n    LeafBlot,\n  ];\n\n  static create(value?: unknown) {\n    return super.create(value) as HTMLElement;\n  }\n\n  public static formats(domNode: HTMLElement, scroll: Root): any {\n    const match = scroll.query(BlockBlot.blotName);\n    if (\n      match != null &&\n      domNode.tagName === (match as BlotConstructor).tagName\n    ) {\n      return undefined;\n    } else if (typeof this.tagName === 'string') {\n      return true;\n    } else if (Array.isArray(this.tagName)) {\n      return domNode.tagName.toLowerCase();\n    }\n  }\n\n  protected attributes: AttributorStore;\n\n  constructor(scroll: Root, domNode: Node) {\n    super(scroll, domNode);\n    this.attributes = new AttributorStore(this.domNode);\n  }\n\n  public format(name: string, value: any): void {\n    const format = this.scroll.query(name, Scope.BLOCK);\n    if (format == null) {\n      return;\n    } else if (format instanceof Attributor) {\n      this.attributes.attribute(format, value);\n    } else if (name === this.statics.blotName && !value) {\n      this.replaceWith(BlockBlot.blotName);\n    } else if (\n      value &&\n      (name !== this.statics.blotName || this.formats()[name] !== value)\n    ) {\n      this.replaceWith(name, value);\n    }\n  }\n\n  public formats(): { [index: string]: any } {\n    const formats = this.attributes.values();\n    const format = this.statics.formats(this.domNode, this.scroll);\n    if (format != null) {\n      formats[this.statics.blotName] = format;\n    }\n    return formats;\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    if (this.scroll.query(name, Scope.BLOCK) != null) {\n      this.format(name, value);\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    if (def == null || this.scroll.query(value, Scope.INLINE) != null) {\n      // Insert text or inline\n      super.insertAt(index, value, def);\n    } else {\n      const after = this.split(index);\n      if (after != null) {\n        const blot = this.scroll.create(value, def);\n        after.parent.insertBefore(blot, after);\n      } else {\n        throw new Error('Attempt to insertAt after block boundaries');\n      }\n    }\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement = super.replaceWith(name, value) as BlockBlot;\n    this.attributes.copy(replacement);\n    return replacement;\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    context: { [key: string]: any },\n  ): void {\n    super.update(mutations, context);\n    const attributeChanged = mutations.some(\n      (mutation) =>\n        mutation.target === this.domNode && mutation.type === 'attributes',\n    );\n    if (attributeChanged) {\n      this.attributes.build();\n    }\n  }\n}\n\nexport default BlockBlot;\n", "import Scope from '../../scope.js';\nimport BlockBlot from '../block.js';\nimport ParentBlot from './parent.js';\n\nclass ContainerBlot extends ParentBlot {\n  public static blotName = 'container';\n  public static scope = Scope.BLOCK_BLOT;\n  public static tagName: string | string[];\n\n  public prev!: BlockBlot | ContainerBlot | null;\n  public next!: BlockBlot | ContainerBlot | null;\n\n  public checkMerge(): boolean {\n    return (\n      this.next !== null && this.next.statics.blotName === this.statics.blotName\n    );\n  }\n\n  public deleteAt(index: number, length: number): void {\n    super.deleteAt(index, length);\n    this.enforceAllowedChildren();\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    super.formatAt(index, length, name, value);\n    this.enforceAllowedChildren();\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    super.insertAt(index, value, def);\n    this.enforceAllowedChildren();\n  }\n\n  public optimize(context: { [key: string]: any }): void {\n    super.optimize(context);\n    if (this.children.length > 0 && this.next != null && this.checkMerge()) {\n      this.next.moveChildren(this);\n      this.next.remove();\n    }\n  }\n}\n\nexport default ContainerBlot;\n", "import type { Formattable, Root } from './abstract/blot.js';\nimport LeafBlot from './abstract/leaf.js';\n\nclass EmbedBlot extends LeafBlot implements Formattable {\n  public static formats(_domNode: HTMLElement, _scroll: Root): any {\n    return undefined;\n  }\n\n  public format(name: string, value: any): void {\n    // super.formatAt wraps, which is what we want in general,\n    // but this allows subclasses to overwrite for formats\n    // that just apply to particular embeds\n    super.formatAt(0, this.length(), name, value);\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    if (index === 0 && length === this.length()) {\n      this.format(name, value);\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  public formats(): { [index: string]: any } {\n    return this.statics.formats(this.domNode, this.scroll);\n  }\n}\n\nexport default EmbedBlot;\n", "import Registry, { type RegistryDefinition } from '../registry.js';\nimport Scope from '../scope.js';\nimport type { Blot, BlotConstructor, Root } from './abstract/blot.js';\nimport ContainerBlot from './abstract/container.js';\nimport ParentBlot from './abstract/parent.js';\nimport BlockBlot from './block.js';\n\nconst OBSERVER_CONFIG = {\n  attributes: true,\n  characterData: true,\n  characterDataOldValue: true,\n  childList: true,\n  subtree: true,\n};\n\nconst MAX_OPTIMIZE_ITERATIONS = 100;\n\nclass ScrollBlot extends ParentBlot implements Root {\n  public static blotName = 'scroll';\n  public static defaultChild = BlockBlot;\n  public static allowedChildren: BlotConstructor[] = [BlockBlot, ContainerBlot];\n  public static scope = Scope.BLOCK_BLOT;\n  public static tagName = 'DIV';\n\n  public observer: MutationObserver;\n\n  constructor(\n    public registry: Registry,\n    node: HTMLDivElement,\n  ) {\n    // @ts-expect-error scroll is the root with no parent\n    super(null, node);\n    this.scroll = this;\n    this.build();\n    this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n      this.update(mutations);\n    });\n    this.observer.observe(this.domNode, OBSERVER_CONFIG);\n    this.attach();\n  }\n\n  public create(input: Node | string | Scope, value?: any): Blot {\n    return this.registry.create(this, input, value);\n  }\n\n  public find(node: Node | null, bubble = false): Blot | null {\n    const blot = this.registry.find(node, bubble);\n    if (!blot) {\n      return null;\n    }\n    if (blot.scroll === this) {\n      return blot;\n    }\n    return bubble ? this.find(blot.scroll.domNode.parentNode, true) : null;\n  }\n\n  public query(\n    query: string | Node | Scope,\n    scope: Scope = Scope.ANY,\n  ): RegistryDefinition | null {\n    return this.registry.query(query, scope);\n  }\n\n  public register(...definitions: RegistryDefinition[]) {\n    return this.registry.register(...definitions);\n  }\n\n  public build(): void {\n    if (this.scroll == null) {\n      return;\n    }\n    super.build();\n  }\n\n  public detach(): void {\n    super.detach();\n    this.observer.disconnect();\n  }\n\n  public deleteAt(index: number, length: number): void {\n    this.update();\n    if (index === 0 && length === this.length()) {\n      this.children.forEach((child) => {\n        child.remove();\n      });\n    } else {\n      super.deleteAt(index, length);\n    }\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    this.update();\n    super.formatAt(index, length, name, value);\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    this.update();\n    super.insertAt(index, value, def);\n  }\n\n  public optimize(context?: { [key: string]: any }): void;\n  public optimize(\n    mutations: MutationRecord[],\n    context: { [key: string]: any },\n  ): void;\n  public optimize(mutations: any = [], context: any = {}): void {\n    super.optimize(context);\n    const mutationsMap = context.mutationsMap || new WeakMap();\n    // We must modify mutations directly, cannot make copy and then modify\n    let records = Array.from(this.observer.takeRecords());\n    // Array.push currently seems to be implemented by a non-tail recursive function\n    // so we cannot just mutations.push.apply(mutations, this.observer.takeRecords());\n    while (records.length > 0) {\n      mutations.push(records.pop());\n    }\n    const mark = (blot: Blot | null, markParent = true): void => {\n      if (blot == null || blot === this) {\n        return;\n      }\n      if (blot.domNode.parentNode == null) {\n        return;\n      }\n      if (!mutationsMap.has(blot.domNode)) {\n        mutationsMap.set(blot.domNode, []);\n      }\n      if (markParent) {\n        mark(blot.parent);\n      }\n    };\n    const optimize = (blot: Blot): void => {\n      // Post-order traversal\n      if (!mutationsMap.has(blot.domNode)) {\n        return;\n      }\n      if (blot instanceof ParentBlot) {\n        blot.children.forEach(optimize);\n      }\n      mutationsMap.delete(blot.domNode);\n      blot.optimize(context);\n    };\n    let remaining = mutations;\n    for (let i = 0; remaining.length > 0; i += 1) {\n      if (i >= MAX_OPTIMIZE_ITERATIONS) {\n        throw new Error('[Parchment] Maximum optimize iterations reached');\n      }\n      remaining.forEach((mutation: MutationRecord) => {\n        const blot = this.find(mutation.target, true);\n        if (blot == null) {\n          return;\n        }\n        if (blot.domNode === mutation.target) {\n          if (mutation.type === 'childList') {\n            mark(this.find(mutation.previousSibling, false));\n            Array.from(mutation.addedNodes).forEach((node: Node) => {\n              const child = this.find(node, false);\n              mark(child, false);\n              if (child instanceof ParentBlot) {\n                child.children.forEach((grandChild: Blot) => {\n                  mark(grandChild, false);\n                });\n              }\n            });\n          } else if (mutation.type === 'attributes') {\n            mark(blot.prev);\n          }\n        }\n        mark(blot);\n      });\n      this.children.forEach(optimize);\n      remaining = Array.from(this.observer.takeRecords());\n      records = remaining.slice();\n      while (records.length > 0) {\n        mutations.push(records.pop());\n      }\n    }\n  }\n\n  public update(\n    mutations?: MutationRecord[],\n    context: { [key: string]: any } = {},\n  ): void {\n    mutations = mutations || this.observer.takeRecords();\n    const mutationsMap = new WeakMap();\n    mutations\n      .map((mutation: MutationRecord) => {\n        const blot = this.find(mutation.target, true);\n        if (blot == null) {\n          return null;\n        }\n        if (mutationsMap.has(blot.domNode)) {\n          mutationsMap.get(blot.domNode).push(mutation);\n          return null;\n        } else {\n          mutationsMap.set(blot.domNode, [mutation]);\n          return blot;\n        }\n      })\n      .forEach((blot: Blot | null) => {\n        if (blot != null && blot !== this && mutationsMap.has(blot.domNode)) {\n          blot.update(mutationsMap.get(blot.domNode) || [], context);\n        }\n      });\n    context.mutationsMap = mutationsMap;\n    if (mutationsMap.has(this.domNode)) {\n      super.update(mutationsMap.get(this.domNode), context);\n    }\n    this.optimize(mutations, context);\n  }\n}\n\nexport default ScrollBlot;\n", "import Scope from '../scope.js';\nimport type { Blot, Leaf, Root } from './abstract/blot.js';\nimport LeafBlot from './abstract/leaf.js';\n\nclass TextBlot extends LeafBlot implements Leaf {\n  public static readonly blotName = 'text';\n  public static scope = Scope.INLINE_BLOT;\n\n  public static create(value: string): Text {\n    return document.createTextNode(value);\n  }\n\n  public static value(domNode: Text): string {\n    return domNode.data;\n  }\n\n  public domNode!: Text;\n  protected text: string;\n\n  constructor(scroll: Root, node: Node) {\n    super(scroll, node);\n    this.text = this.statics.value(this.domNode);\n  }\n\n  public deleteAt(index: number, length: number): void {\n    this.domNode.data = this.text =\n      this.text.slice(0, index) + this.text.slice(index + length);\n  }\n\n  public index(node: Node, offset: number): number {\n    if (this.domNode === node) {\n      return offset;\n    }\n    return -1;\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    if (def == null) {\n      this.text = this.text.slice(0, index) + value + this.text.slice(index);\n      this.domNode.data = this.text;\n    } else {\n      super.insertAt(index, value, def);\n    }\n  }\n\n  public length(): number {\n    return this.text.length;\n  }\n\n  public optimize(context: { [key: string]: any }): void {\n    super.optimize(context);\n    this.text = this.statics.value(this.domNode);\n    if (this.text.length === 0) {\n      this.remove();\n    } else if (this.next instanceof TextBlot && this.next.prev === this) {\n      this.insertAt(this.length(), (this.next as TextBlot).value());\n      this.next.remove();\n    }\n  }\n\n  public position(index: number, _inclusive = false): [Node, number] {\n    return [this.domNode, index];\n  }\n\n  public split(index: number, force = false): Blot | null {\n    if (!force) {\n      if (index === 0) {\n        return this;\n      }\n      if (index === this.length()) {\n        return this.next;\n      }\n    }\n    const after = this.scroll.create(this.domNode.splitText(index));\n    this.parent.insertBefore(after, this.next || undefined);\n    this.text = this.statics.value(this.domNode);\n    return after;\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    _context: { [key: string]: any },\n  ): void {\n    if (\n      mutations.some((mutation) => {\n        return (\n          mutation.type === 'characterData' && mutation.target === this.domNode\n        );\n      })\n    ) {\n      this.text = this.statics.value(this.domNode);\n    }\n  }\n\n  public value(): string {\n    return this.text;\n  }\n}\n\nexport default TextBlot;\n", "import { merge } from 'lodash-es';\nimport * as Parchment from 'parchment';\nimport type { Op } from 'quill-delta';\nimport Delta from 'quill-delta';\nimport type { BlockEmbed } from '../blots/block.js';\nimport type Block from '../blots/block.js';\nimport type Scroll from '../blots/scroll.js';\nimport type Clipboard from '../modules/clipboard.js';\nimport type History from '../modules/history.js';\nimport type Keyboard from '../modules/keyboard.js';\nimport type Uploader from '../modules/uploader.js';\nimport Editor from './editor.js';\nimport Emitter from './emitter.js';\nimport type { EmitterSource } from './emitter.js';\nimport instances from './instances.js';\nimport logger from './logger.js';\nimport type { DebugLevel } from './logger.js';\nimport Module from './module.js';\nimport Selection, { Range } from './selection.js';\nimport type { Bounds } from './selection.js';\nimport Composition from './composition.js';\nimport Theme from './theme.js';\nimport type { ThemeConstructor } from './theme.js';\nimport scrollRectIntoView from './utils/scrollRectIntoView.js';\nimport type { Rect } from './utils/scrollRectIntoView.js';\nimport createRegistryWithFormats from './utils/createRegistryWithFormats.js';\n\nconst debug = logger('quill');\n\nconst globalRegistry = new Parchment.Registry();\nParchment.ParentBlot.uiClass = 'ql-ui';\n\n/**\n * Options for initializing a Quill instance\n */\nexport interface QuillOptions {\n  theme?: string;\n  debug?: DebugLevel | boolean;\n  registry?: Parchment.Registry;\n  /**\n   * Whether to disable the editing\n   * @default false\n   */\n  readOnly?: boolean;\n\n  /**\n   * Placeholder text to display when the editor is empty\n   * @default \"\"\n   */\n  placeholder?: string;\n  bounds?: HTMLElement | string | null;\n  modules?: Record<string, unknown>;\n\n  /**\n   * A list of formats that are recognized and can exist within the editor contents.\n   * `null` means all formats are allowed.\n   * @default null\n   */\n  formats?: string[] | null;\n}\n\n/**\n * Similar to QuillOptions, but with all properties expanded to their default values,\n * and all selectors resolved to HTMLElements.\n */\nexport interface ExpandedQuillOptions\n  extends Omit<QuillOptions, 'theme' | 'formats'> {\n  theme: ThemeConstructor;\n  registry: Parchment.Registry;\n  container: HTMLElement;\n  modules: Record<string, unknown>;\n  bounds?: HTMLElement | null;\n  readOnly: boolean;\n}\n\nclass Quill {\n  static DEFAULTS = {\n    bounds: null,\n    modules: {\n      clipboard: true,\n      keyboard: true,\n      history: true,\n      uploader: true,\n    },\n    placeholder: '',\n    readOnly: false,\n    registry: globalRegistry,\n    theme: 'default',\n  } satisfies Partial<QuillOptions>;\n  static events = Emitter.events;\n  static sources = Emitter.sources;\n  static version = typeof QUILL_VERSION === 'undefined' ? 'dev' : QUILL_VERSION;\n\n  static imports: Record<string, unknown> = {\n    delta: Delta,\n    parchment: Parchment,\n    'core/module': Module,\n    'core/theme': Theme,\n  };\n\n  static debug(limit: DebugLevel | boolean) {\n    if (limit === true) {\n      limit = 'log';\n    }\n    logger.level(limit);\n  }\n\n  static find(node: Node, bubble = false) {\n    return instances.get(node) || globalRegistry.find(node, bubble);\n  }\n\n  static import(name: 'core/module'): typeof Module;\n  static import(name: `themes/${string}`): typeof Theme;\n  static import(name: 'parchment'): typeof Parchment;\n  static import(name: 'delta'): typeof Delta;\n  static import(name: string): unknown;\n  static import(name: string) {\n    if (this.imports[name] == null) {\n      debug.error(`Cannot import ${name}. Are you sure it was registered?`);\n    }\n    return this.imports[name];\n  }\n\n  static register(\n    targets: Record<\n      string,\n      | Parchment.RegistryDefinition\n      | Record<string, unknown> // any objects\n      | Theme\n      | Module\n      | Function // ES5 constructors\n    >,\n    overwrite?: boolean,\n  ): void;\n  static register(\n    target: Parchment.RegistryDefinition,\n    overwrite?: boolean,\n  ): void;\n  static register(path: string, target: any, overwrite?: boolean): void;\n  static register(...args: any[]): void {\n    if (typeof args[0] !== 'string') {\n      const target = args[0];\n      const overwrite = !!args[1];\n\n      const name = 'attrName' in target ? target.attrName : target.blotName;\n      if (typeof name === 'string') {\n        // Shortcut for formats:\n        // register(Blot | Attributor, overwrite)\n        this.register(`formats/${name}`, target, overwrite);\n      } else {\n        Object.keys(target).forEach((key) => {\n          this.register(key, target[key], overwrite);\n        });\n      }\n    } else {\n      const path = args[0];\n      const target = args[1];\n      const overwrite = !!args[2];\n\n      if (this.imports[path] != null && !overwrite) {\n        debug.warn(`Overwriting ${path} with`, target);\n      }\n      this.imports[path] = target;\n      if (\n        (path.startsWith('blots/') || path.startsWith('formats/')) &&\n        target &&\n        typeof target !== 'boolean' &&\n        target.blotName !== 'abstract'\n      ) {\n        globalRegistry.register(target);\n      }\n      if (typeof target.register === 'function') {\n        target.register(globalRegistry);\n      }\n    }\n  }\n\n  container: HTMLElement;\n  root: HTMLDivElement;\n  scroll: Scroll;\n  emitter: Emitter;\n  protected allowReadOnlyEdits: boolean;\n  editor: Editor;\n  composition: Composition;\n  selection: Selection;\n\n  theme: Theme;\n  keyboard: Keyboard;\n  clipboard: Clipboard;\n  history: History;\n  uploader: Uploader;\n\n  options: ExpandedQuillOptions;\n\n  constructor(container: HTMLElement | string, options: QuillOptions = {}) {\n    this.options = expandConfig(container, options);\n    this.container = this.options.container;\n    if (this.container == null) {\n      debug.error('Invalid Quill container', container);\n      return;\n    }\n    if (this.options.debug) {\n      Quill.debug(this.options.debug);\n    }\n    const html = this.container.innerHTML.trim();\n    this.container.classList.add('ql-container');\n    this.container.innerHTML = '';\n    instances.set(this.container, this);\n    this.root = this.addContainer('ql-editor');\n    this.root.classList.add('ql-blank');\n    this.emitter = new Emitter();\n    const scrollBlotName = Parchment.ScrollBlot.blotName;\n    const ScrollBlot = this.options.registry.query(scrollBlotName);\n    if (!ScrollBlot || !('blotName' in ScrollBlot)) {\n      throw new Error(\n        `Cannot initialize Quill without \"${scrollBlotName}\" blot`,\n      );\n    }\n    this.scroll = new ScrollBlot(this.options.registry, this.root, {\n      emitter: this.emitter,\n    }) as Scroll;\n    this.editor = new Editor(this.scroll);\n    this.selection = new Selection(this.scroll, this.emitter);\n    this.composition = new Composition(this.scroll, this.emitter);\n    this.theme = new this.options.theme(this, this.options); // eslint-disable-line new-cap\n    this.keyboard = this.theme.addModule('keyboard');\n    this.clipboard = this.theme.addModule('clipboard');\n    this.history = this.theme.addModule('history');\n    this.uploader = this.theme.addModule('uploader');\n    this.theme.addModule('input');\n    this.theme.addModule('uiNode');\n    this.theme.init();\n    this.emitter.on(Emitter.events.EDITOR_CHANGE, (type) => {\n      if (type === Emitter.events.TEXT_CHANGE) {\n        this.root.classList.toggle('ql-blank', this.editor.isBlank());\n      }\n    });\n    this.emitter.on(Emitter.events.SCROLL_UPDATE, (source, mutations) => {\n      const oldRange = this.selection.lastRange;\n      const [newRange] = this.selection.getRange();\n      const selectionInfo =\n        oldRange && newRange ? { oldRange, newRange } : undefined;\n      modify.call(\n        this,\n        () => this.editor.update(null, mutations, selectionInfo),\n        source,\n      );\n    });\n    this.emitter.on(Emitter.events.SCROLL_EMBED_UPDATE, (blot, delta) => {\n      const oldRange = this.selection.lastRange;\n      const [newRange] = this.selection.getRange();\n      const selectionInfo =\n        oldRange && newRange ? { oldRange, newRange } : undefined;\n      modify.call(\n        this,\n        () => {\n          const change = new Delta()\n            .retain(blot.offset(this))\n            .retain({ [blot.statics.blotName]: delta });\n          return this.editor.update(change, [], selectionInfo);\n        },\n        Quill.sources.USER,\n      );\n    });\n    if (html) {\n      const contents = this.clipboard.convert({\n        html: `${html}<p><br></p>`,\n        text: '\\n',\n      });\n      this.setContents(contents);\n    }\n    this.history.clear();\n    if (this.options.placeholder) {\n      this.root.setAttribute('data-placeholder', this.options.placeholder);\n    }\n    if (this.options.readOnly) {\n      this.disable();\n    }\n    this.allowReadOnlyEdits = false;\n  }\n\n  addContainer(container: string, refNode?: Node | null): HTMLDivElement;\n  addContainer(container: HTMLElement, refNode?: Node | null): HTMLElement;\n  addContainer(\n    container: string | HTMLElement,\n    refNode: Node | null = null,\n  ): HTMLDivElement | HTMLElement {\n    if (typeof container === 'string') {\n      const className = container;\n      container = document.createElement('div');\n      container.classList.add(className);\n    }\n    this.container.insertBefore(container, refNode);\n    return container;\n  }\n\n  blur() {\n    this.selection.setRange(null);\n  }\n\n  deleteText(range: Range, source?: EmitterSource): Delta;\n  deleteText(index: number, length: number, source?: EmitterSource): Delta;\n  deleteText(\n    index: number | Range,\n    length?: number | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    // @ts-expect-error\n    [index, length, , source] = overload(index, length, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.deleteText(index, length);\n      },\n      source,\n      index,\n      -1 * length,\n    );\n  }\n\n  disable() {\n    this.enable(false);\n  }\n\n  editReadOnly<T>(modifier: () => T): T {\n    this.allowReadOnlyEdits = true;\n    const value = modifier();\n    this.allowReadOnlyEdits = false;\n    return value;\n  }\n\n  enable(enabled = true) {\n    this.scroll.enable(enabled);\n    this.container.classList.toggle('ql-disabled', !enabled);\n  }\n\n  focus(options: { preventScroll?: boolean } = {}) {\n    this.selection.focus();\n    if (!options.preventScroll) {\n      this.scrollSelectionIntoView();\n    }\n  }\n\n  format(\n    name: string,\n    value: unknown,\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        const range = this.getSelection(true);\n        let change = new Delta();\n        if (range == null) return change;\n        if (this.scroll.query(name, Parchment.Scope.BLOCK)) {\n          change = this.editor.formatLine(range.index, range.length, {\n            [name]: value,\n          });\n        } else if (range.length === 0) {\n          this.selection.format(name, value);\n          return change;\n        } else {\n          change = this.editor.formatText(range.index, range.length, {\n            [name]: value,\n          });\n        }\n        this.setSelection(range, Emitter.sources.SILENT);\n        return change;\n      },\n      source,\n    );\n  }\n\n  formatLine(\n    index: number,\n    length: number,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  formatLine(\n    index: number,\n    length: number,\n    name: string,\n    value?: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatLine(\n    index: number,\n    length: number,\n    name: string | Record<string, unknown>,\n    value?: unknown | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    [index, length, formats, source] = overload(\n      index,\n      length,\n      // @ts-expect-error\n      name,\n      value,\n      source,\n    );\n    return modify.call(\n      this,\n      () => {\n        return this.editor.formatLine(index, length, formats);\n      },\n      source,\n      index,\n      0,\n    );\n  }\n\n  formatText(\n    range: Range,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number,\n    length: number,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number,\n    length: number,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number | Range,\n    length: number | string,\n    name: string | unknown,\n    value?: unknown | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    [index, length, formats, source] = overload(\n      // @ts-expect-error\n      index,\n      length,\n      name,\n      value,\n      source,\n    );\n    return modify.call(\n      this,\n      () => {\n        return this.editor.formatText(index, length, formats);\n      },\n      source,\n      index,\n      0,\n    );\n  }\n\n  getBounds(index: number | Range, length = 0): Bounds | null {\n    let bounds: Bounds | null = null;\n    if (typeof index === 'number') {\n      bounds = this.selection.getBounds(index, length);\n    } else {\n      bounds = this.selection.getBounds(index.index, index.length);\n    }\n    if (!bounds) return null;\n    const containerBounds = this.container.getBoundingClientRect();\n    return {\n      bottom: bounds.bottom - containerBounds.top,\n      height: bounds.height,\n      left: bounds.left - containerBounds.left,\n      right: bounds.right - containerBounds.left,\n      top: bounds.top - containerBounds.top,\n      width: bounds.width,\n    };\n  }\n\n  getContents(index = 0, length = this.getLength() - index) {\n    [index, length] = overload(index, length);\n    return this.editor.getContents(index, length);\n  }\n\n  getFormat(index?: number, length?: number): { [format: string]: unknown };\n  getFormat(range?: Range): {\n    [format: string]: unknown;\n  };\n  getFormat(\n    index: Range | number = this.getSelection(true),\n    length = 0,\n  ): { [format: string]: unknown } {\n    if (typeof index === 'number') {\n      return this.editor.getFormat(index, length);\n    }\n    return this.editor.getFormat(index.index, index.length);\n  }\n\n  getIndex(blot: Parchment.Blot) {\n    return blot.offset(this.scroll);\n  }\n\n  getLength() {\n    return this.scroll.length();\n  }\n\n  getLeaf(index: number) {\n    return this.scroll.leaf(index);\n  }\n\n  getLine(index: number) {\n    return this.scroll.line(index);\n  }\n\n  getLines(range: Range): (Block | BlockEmbed)[];\n  getLines(index?: number, length?: number): (Block | BlockEmbed)[];\n  getLines(\n    index: Range | number = 0,\n    length = Number.MAX_VALUE,\n  ): (Block | BlockEmbed)[] {\n    if (typeof index !== 'number') {\n      return this.scroll.lines(index.index, index.length);\n    }\n    return this.scroll.lines(index, length);\n  }\n\n  getModule(name: string) {\n    return this.theme.modules[name];\n  }\n\n  getSelection(focus: true): Range;\n  getSelection(focus?: boolean): Range | null;\n  getSelection(focus = false): Range | null {\n    if (focus) this.focus();\n    this.update(); // Make sure we access getRange with editor in consistent state\n    return this.selection.getRange()[0];\n  }\n\n  getSemanticHTML(range: Range): string;\n  getSemanticHTML(index?: number, length?: number): string;\n  getSemanticHTML(index: Range | number = 0, length?: number) {\n    if (typeof index === 'number') {\n      length = length ?? this.getLength() - index;\n    }\n    // @ts-expect-error\n    [index, length] = overload(index, length);\n    return this.editor.getHTML(index, length);\n  }\n\n  getText(range?: Range): string;\n  getText(index?: number, length?: number): string;\n  getText(index: Range | number = 0, length?: number): string {\n    if (typeof index === 'number') {\n      length = length ?? this.getLength() - index;\n    }\n    // @ts-expect-error\n    [index, length] = overload(index, length);\n    return this.editor.getText(index, length);\n  }\n\n  hasFocus() {\n    return this.selection.hasFocus();\n  }\n\n  insertEmbed(\n    index: number,\n    embed: string,\n    value: unknown,\n    source: EmitterSource = Quill.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        return this.editor.insertEmbed(index, embed, value);\n      },\n      source,\n      index,\n    );\n  }\n\n  insertText(index: number, text: string, source?: EmitterSource): Delta;\n  insertText(\n    index: number,\n    text: string,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  insertText(\n    index: number,\n    text: string,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  insertText(\n    index: number,\n    text: string,\n    name?: string | Record<string, unknown> | EmitterSource,\n    value?: unknown,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    // @ts-expect-error\n    [index, , formats, source] = overload(index, 0, name, value, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.insertText(index, text, formats);\n      },\n      source,\n      index,\n      text.length,\n    );\n  }\n\n  isEnabled() {\n    return this.scroll.isEnabled();\n  }\n\n  off(...args: Parameters<(typeof Emitter)['prototype']['off']>) {\n    return this.emitter.off(...args);\n  }\n\n  on(\n    event: (typeof Emitter)['events']['TEXT_CHANGE'],\n    handler: (delta: Delta, oldContent: Delta, source: EmitterSource) => void,\n  ): Emitter;\n  on(\n    event: (typeof Emitter)['events']['SELECTION_CHANGE'],\n    handler: (range: Range, oldRange: Range, source: EmitterSource) => void,\n  ): Emitter;\n  on(\n    event: (typeof Emitter)['events']['EDITOR_CHANGE'],\n    handler: (\n      ...args:\n        | [\n            (typeof Emitter)['events']['TEXT_CHANGE'],\n            Delta,\n            Delta,\n            EmitterSource,\n          ]\n        | [\n            (typeof Emitter)['events']['SELECTION_CHANGE'],\n            Range,\n            Range,\n            EmitterSource,\n          ]\n    ) => void,\n  ): Emitter;\n  on(event: string, ...args: unknown[]): Emitter;\n  on(...args: Parameters<(typeof Emitter)['prototype']['on']>): Emitter {\n    return this.emitter.on(...args);\n  }\n\n  once(...args: Parameters<(typeof Emitter)['prototype']['once']>) {\n    return this.emitter.once(...args);\n  }\n\n  removeFormat(index: number, length: number, source?: EmitterSource): Delta {\n    [index, length, , source] = overload(index, length, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.removeFormat(index, length);\n      },\n      source,\n      index,\n    );\n  }\n\n  scrollRectIntoView(rect: Rect) {\n    scrollRectIntoView(this.root, rect);\n  }\n\n  /**\n   * @deprecated Use Quill#scrollSelectionIntoView() instead.\n   */\n  scrollIntoView() {\n    console.warn(\n      'Quill#scrollIntoView() has been deprecated and will be removed in the near future. Please use Quill#scrollSelectionIntoView() instead.',\n    );\n    this.scrollSelectionIntoView();\n  }\n\n  /**\n   * Scroll the current selection into the visible area.\n   * If the selection is already visible, no scrolling will occur.\n   */\n  scrollSelectionIntoView() {\n    const range = this.selection.lastRange;\n    const bounds = range && this.selection.getBounds(range.index, range.length);\n    if (bounds) {\n      this.scrollRectIntoView(bounds);\n    }\n  }\n\n  setContents(\n    delta: Delta | Op[],\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        delta = new Delta(delta);\n        const length = this.getLength();\n        // Quill will set empty editor to \\n\n        const delete1 = this.editor.deleteText(0, length);\n        const applied = this.editor.insertContents(0, delta);\n        // Remove extra \\n from empty editor initialization\n        const delete2 = this.editor.deleteText(this.getLength() - 1, 1);\n        return delete1.compose(applied).compose(delete2);\n      },\n      source,\n    );\n  }\n  setSelection(range: Range | null, source?: EmitterSource): void;\n  setSelection(index: number, source?: EmitterSource): void;\n  setSelection(index: number, length?: number, source?: EmitterSource): void;\n  setSelection(index: number, source?: EmitterSource): void;\n  setSelection(\n    index: Range | null | number,\n    length?: EmitterSource | number,\n    source?: EmitterSource,\n  ): void {\n    if (index == null) {\n      // @ts-expect-error https://github.com/microsoft/TypeScript/issues/22609\n      this.selection.setRange(null, length || Quill.sources.API);\n    } else {\n      // @ts-expect-error\n      [index, length, , source] = overload(index, length, source);\n      this.selection.setRange(new Range(Math.max(0, index), length), source);\n      if (source !== Emitter.sources.SILENT) {\n        this.scrollSelectionIntoView();\n      }\n    }\n  }\n\n  setText(text: string, source: EmitterSource = Emitter.sources.API) {\n    const delta = new Delta().insert(text);\n    return this.setContents(delta, source);\n  }\n\n  update(source: EmitterSource = Emitter.sources.USER) {\n    const change = this.scroll.update(source); // Will update selection before selection.update() does if text changes\n    this.selection.update(source);\n    // TODO this is usually undefined\n    return change;\n  }\n\n  updateContents(\n    delta: Delta | Op[],\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        delta = new Delta(delta);\n        return this.editor.applyDelta(delta);\n      },\n      source,\n      true,\n    );\n  }\n}\n\nfunction resolveSelector(selector: string | HTMLElement | null | undefined) {\n  return typeof selector === 'string'\n    ? document.querySelector<HTMLElement>(selector)\n    : selector;\n}\n\nfunction expandModuleConfig(config: Record<string, unknown> | undefined) {\n  return Object.entries(config ?? {}).reduce(\n    (expanded, [key, value]) => ({\n      ...expanded,\n      [key]: value === true ? {} : value,\n    }),\n    {} as Record<string, unknown>,\n  );\n}\n\nfunction omitUndefinedValuesFromOptions(obj: QuillOptions) {\n  return Object.fromEntries(\n    Object.entries(obj).filter((entry) => entry[1] !== undefined),\n  );\n}\n\nfunction expandConfig(\n  containerOrSelector: HTMLElement | string,\n  options: QuillOptions,\n): ExpandedQuillOptions {\n  const container = resolveSelector(containerOrSelector);\n  if (!container) {\n    throw new Error('Invalid Quill container');\n  }\n\n  const shouldUseDefaultTheme =\n    !options.theme || options.theme === Quill.DEFAULTS.theme;\n  const theme = shouldUseDefaultTheme\n    ? Theme\n    : Quill.import(`themes/${options.theme}`);\n  if (!theme) {\n    throw new Error(`Invalid theme ${options.theme}. Did you register it?`);\n  }\n\n  const { modules: quillModuleDefaults, ...quillDefaults } = Quill.DEFAULTS;\n  const { modules: themeModuleDefaults, ...themeDefaults } = theme.DEFAULTS;\n\n  let userModuleOptions = expandModuleConfig(options.modules);\n  // Special case toolbar shorthand\n  if (\n    userModuleOptions != null &&\n    userModuleOptions.toolbar &&\n    userModuleOptions.toolbar.constructor !== Object\n  ) {\n    userModuleOptions = {\n      ...userModuleOptions,\n      toolbar: { container: userModuleOptions.toolbar },\n    };\n  }\n\n  const modules: ExpandedQuillOptions['modules'] = merge(\n    {},\n    expandModuleConfig(quillModuleDefaults),\n    expandModuleConfig(themeModuleDefaults),\n    userModuleOptions,\n  );\n\n  const config = {\n    ...quillDefaults,\n    ...omitUndefinedValuesFromOptions(themeDefaults),\n    ...omitUndefinedValuesFromOptions(options),\n  };\n\n  let registry = options.registry;\n  if (registry) {\n    if (options.formats) {\n      debug.warn('Ignoring \"formats\" option because \"registry\" is specified');\n    }\n  } else {\n    registry = options.formats\n      ? createRegistryWithFormats(options.formats, config.registry, debug)\n      : config.registry;\n  }\n\n  return {\n    ...config,\n    registry,\n    container,\n    theme,\n    modules: Object.entries(modules).reduce(\n      (modulesWithDefaults, [name, value]) => {\n        if (!value) return modulesWithDefaults;\n\n        const moduleClass = Quill.import(`modules/${name}`);\n        if (moduleClass == null) {\n          debug.error(\n            `Cannot load ${name} module. Are you sure you registered it?`,\n          );\n          return modulesWithDefaults;\n        }\n        return {\n          ...modulesWithDefaults,\n          // @ts-expect-error\n          [name]: merge({}, moduleClass.DEFAULTS || {}, value),\n        };\n      },\n      {},\n    ),\n    bounds: resolveSelector(config.bounds),\n  };\n}\n\n// Handle selection preservation and TEXT_CHANGE emission\n// common to modification APIs\nfunction modify(\n  modifier: () => Delta,\n  source: EmitterSource,\n  index: number | boolean,\n  shift: number | null,\n) {\n  if (\n    !this.isEnabled() &&\n    source === Emitter.sources.USER &&\n    !this.allowReadOnlyEdits\n  ) {\n    return new Delta();\n  }\n  let range = index == null ? null : this.getSelection();\n  const oldDelta = this.editor.delta;\n  const change = modifier();\n  if (range != null) {\n    if (index === true) {\n      index = range.index; // eslint-disable-line prefer-destructuring\n    }\n    if (shift == null) {\n      range = shiftRange(range, change, source);\n    } else if (shift !== 0) {\n      // @ts-expect-error index should always be number\n      range = shiftRange(range, index, shift, source);\n    }\n    this.setSelection(range, Emitter.sources.SILENT);\n  }\n  if (change.length() > 0) {\n    const args = [Emitter.events.TEXT_CHANGE, change, oldDelta, source];\n    this.emitter.emit(Emitter.events.EDITOR_CHANGE, ...args);\n    if (source !== Emitter.sources.SILENT) {\n      this.emitter.emit(...args);\n    }\n  }\n  return change;\n}\n\ntype NormalizedIndexLength = [\n  number,\n  number,\n  Record<string, unknown>,\n  EmitterSource,\n];\nfunction overload(index: number, source?: EmitterSource): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  format: string,\n  value: unknown,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  format: Record<string, unknown>,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(range: Range, source?: EmitterSource): NormalizedIndexLength;\nfunction overload(\n  range: Range,\n  format: string,\n  value: unknown,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  range: Range,\n  format: Record<string, unknown>,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: Range | number,\n  length?: number | string | Record<string, unknown> | EmitterSource,\n  name?: string | unknown | Record<string, unknown> | EmitterSource,\n  value?: unknown | EmitterSource,\n  source?: EmitterSource,\n): NormalizedIndexLength {\n  let formats: Record<string, unknown> = {};\n  // @ts-expect-error\n  if (typeof index.index === 'number' && typeof index.length === 'number') {\n    // Allow for throwaway end (used by insertText/insertEmbed)\n    if (typeof length !== 'number') {\n      // @ts-expect-error\n      source = value;\n      value = name;\n      name = length;\n      // @ts-expect-error\n      length = index.length; // eslint-disable-line prefer-destructuring\n      // @ts-expect-error\n      index = index.index; // eslint-disable-line prefer-destructuring\n    } else {\n      // @ts-expect-error\n      length = index.length; // eslint-disable-line prefer-destructuring\n      // @ts-expect-error\n      index = index.index; // eslint-disable-line prefer-destructuring\n    }\n  } else if (typeof length !== 'number') {\n    // @ts-expect-error\n    source = value;\n    value = name;\n    name = length;\n    length = 0;\n  }\n  // Handle format being object, two format name/value strings or excluded\n  if (typeof name === 'object') {\n    // @ts-expect-error Fix me later\n    formats = name;\n    // @ts-expect-error\n    source = value;\n  } else if (typeof name === 'string') {\n    if (value != null) {\n      formats[name] = value;\n    } else {\n      // @ts-expect-error\n      source = name;\n    }\n  }\n  // Handle optional source\n  source = source || Emitter.sources.API;\n  // @ts-expect-error\n  return [index, length, formats, source];\n}\n\nfunction shiftRange(range: Range, change: Delta, source?: EmitterSource): Range;\nfunction shiftRange(\n  range: Range,\n  index: number,\n  length?: number,\n  source?: EmitterSource,\n): Range;\nfunction shiftRange(\n  range: Range,\n  index: number | Delta,\n  lengthOrSource?: number | EmitterSource,\n  source?: EmitterSource,\n) {\n  const length = typeof lengthOrSource === 'number' ? lengthOrSource : 0;\n  if (range == null) return null;\n  let start;\n  let end;\n  // @ts-expect-error -- TODO: add a better type guard around `index`\n  if (index && typeof index.transformPosition === 'function') {\n    [start, end] = [range.index, range.index + range.length].map((pos) =>\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      index.transformPosition(pos, source !== Emitter.sources.USER),\n    );\n  } else {\n    [start, end] = [range.index, range.index + range.length].map((pos) => {\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      if (pos < index || (pos === index && source === Emitter.sources.USER))\n        return pos;\n      if (length >= 0) {\n        return pos + length;\n      }\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      return Math.max(index, pos + length);\n    });\n  }\n  return new Range(start, end - start);\n}\n\nexport type { Bounds, DebugLevel, EmitterSource };\nexport { Parchment, Range };\n\nexport { globalRegistry, expandConfig, overload, Quill as default };\n", "import { cloneDeep, isEqual, merge } from 'lodash-es';\nimport { LeafBlot, EmbedBlot, Scope, ParentBlot } from 'parchment';\nimport type { Blot } from 'parchment';\nimport Delta, { AttributeMap, Op } from 'quill-delta';\nimport Block, { BlockEmbed, bubbleFormats } from '../blots/block.js';\nimport Break from '../blots/break.js';\nimport CursorBlot from '../blots/cursor.js';\nimport type Scroll from '../blots/scroll.js';\nimport TextBlot, { escapeText } from '../blots/text.js';\nimport { Range } from './selection.js';\n\nconst ASCII = /^[ -~]*$/;\n\ntype SelectionInfo = {\n  newRange: Range;\n  oldRange: Range;\n};\n\nclass Editor {\n  scroll: Scroll;\n  delta: Delta;\n\n  constructor(scroll: Scroll) {\n    this.scroll = scroll;\n    this.delta = this.getDelta();\n  }\n\n  applyDelta(delta: Delta): Delta {\n    this.scroll.update();\n    let scrollLength = this.scroll.length();\n    this.scroll.batchStart();\n    const normalizedDelta = normalizeDelta(delta);\n    const deleteDelta = new Delta();\n    const normalizedOps = splitOpLines(normalizedDelta.ops.slice());\n    normalizedOps.reduce((index, op) => {\n      const length = Op.length(op);\n      let attributes = op.attributes || {};\n      let isImplicitNewlinePrepended = false;\n      let isImplicitNewlineAppended = false;\n      if (op.insert != null) {\n        deleteDelta.retain(length);\n        if (typeof op.insert === 'string') {\n          const text = op.insert;\n          isImplicitNewlineAppended =\n            !text.endsWith('\\n') &&\n            (scrollLength <= index ||\n              !!this.scroll.descendant(BlockEmbed, index)[0]);\n          this.scroll.insertAt(index, text);\n          const [line, offset] = this.scroll.line(index);\n          let formats = merge({}, bubbleFormats(line));\n          if (line instanceof Block) {\n            const [leaf] = line.descendant(LeafBlot, offset);\n            if (leaf) {\n              formats = merge(formats, bubbleFormats(leaf));\n            }\n          }\n          attributes = AttributeMap.diff(formats, attributes) || {};\n        } else if (typeof op.insert === 'object') {\n          const key = Object.keys(op.insert)[0]; // There should only be one key\n          if (key == null) return index;\n          const isInlineEmbed = this.scroll.query(key, Scope.INLINE) != null;\n          if (isInlineEmbed) {\n            if (\n              scrollLength <= index ||\n              !!this.scroll.descendant(BlockEmbed, index)[0]\n            ) {\n              isImplicitNewlineAppended = true;\n            }\n          } else if (index > 0) {\n            const [leaf, offset] = this.scroll.descendant(LeafBlot, index - 1);\n            if (leaf instanceof TextBlot) {\n              const text = leaf.value();\n              if (text[offset] !== '\\n') {\n                isImplicitNewlinePrepended = true;\n              }\n            } else if (\n              leaf instanceof EmbedBlot &&\n              leaf.statics.scope === Scope.INLINE_BLOT\n            ) {\n              isImplicitNewlinePrepended = true;\n            }\n          }\n          this.scroll.insertAt(index, key, op.insert[key]);\n\n          if (isInlineEmbed) {\n            const [leaf] = this.scroll.descendant(LeafBlot, index);\n            if (leaf) {\n              const formats = merge({}, bubbleFormats(leaf));\n              attributes = AttributeMap.diff(formats, attributes) || {};\n            }\n          }\n        }\n        scrollLength += length;\n      } else {\n        deleteDelta.push(op);\n\n        if (op.retain !== null && typeof op.retain === 'object') {\n          const key = Object.keys(op.retain)[0];\n          if (key == null) return index;\n          this.scroll.updateEmbedAt(index, key, op.retain[key]);\n        }\n      }\n      Object.keys(attributes).forEach((name) => {\n        this.scroll.formatAt(index, length, name, attributes[name]);\n      });\n      const prependedLength = isImplicitNewlinePrepended ? 1 : 0;\n      const addedLength = isImplicitNewlineAppended ? 1 : 0;\n      scrollLength += prependedLength + addedLength;\n      deleteDelta.retain(prependedLength);\n      deleteDelta.delete(addedLength);\n      return index + length + prependedLength + addedLength;\n    }, 0);\n    deleteDelta.reduce((index, op) => {\n      if (typeof op.delete === 'number') {\n        this.scroll.deleteAt(index, op.delete);\n        return index;\n      }\n      return index + Op.length(op);\n    }, 0);\n    this.scroll.batchEnd();\n    this.scroll.optimize();\n    return this.update(normalizedDelta);\n  }\n\n  deleteText(index: number, length: number): Delta {\n    this.scroll.deleteAt(index, length);\n    return this.update(new Delta().retain(index).delete(length));\n  }\n\n  formatLine(\n    index: number,\n    length: number,\n    formats: Record<string, unknown> = {},\n  ): Delta {\n    this.scroll.update();\n    Object.keys(formats).forEach((format) => {\n      this.scroll.lines(index, Math.max(length, 1)).forEach((line) => {\n        line.format(format, formats[format]);\n      });\n    });\n    this.scroll.optimize();\n    const delta = new Delta().retain(index).retain(length, cloneDeep(formats));\n    return this.update(delta);\n  }\n\n  formatText(\n    index: number,\n    length: number,\n    formats: Record<string, unknown> = {},\n  ): Delta {\n    Object.keys(formats).forEach((format) => {\n      this.scroll.formatAt(index, length, format, formats[format]);\n    });\n    const delta = new Delta().retain(index).retain(length, cloneDeep(formats));\n    return this.update(delta);\n  }\n\n  getContents(index: number, length: number): Delta {\n    return this.delta.slice(index, index + length);\n  }\n\n  getDelta(): Delta {\n    return this.scroll.lines().reduce((delta, line) => {\n      return delta.concat(line.delta());\n    }, new Delta());\n  }\n\n  getFormat(index: number, length = 0): Record<string, unknown> {\n    let lines: (Block | BlockEmbed)[] = [];\n    let leaves: LeafBlot[] = [];\n    if (length === 0) {\n      this.scroll.path(index).forEach((path) => {\n        const [blot] = path;\n        if (blot instanceof Block) {\n          lines.push(blot);\n        } else if (blot instanceof LeafBlot) {\n          leaves.push(blot);\n        }\n      });\n    } else {\n      lines = this.scroll.lines(index, length);\n      leaves = this.scroll.descendants(LeafBlot, index, length);\n    }\n    const [lineFormats, leafFormats] = [lines, leaves].map((blots) => {\n      const blot = blots.shift();\n      if (blot == null) return {};\n      let formats = bubbleFormats(blot);\n      while (Object.keys(formats).length > 0) {\n        const blot = blots.shift();\n        if (blot == null) return formats;\n        formats = combineFormats(bubbleFormats(blot), formats);\n      }\n      return formats;\n    });\n    return { ...lineFormats, ...leafFormats };\n  }\n\n  getHTML(index: number, length: number): string {\n    const [line, lineOffset] = this.scroll.line(index);\n    if (line) {\n      const lineLength = line.length();\n      const isWithinLine = line.length() >= lineOffset + length;\n      if (isWithinLine && !(lineOffset === 0 && length === lineLength)) {\n        return convertHTML(line, lineOffset, length, true);\n      }\n      return convertHTML(this.scroll, index, length, true);\n    }\n    return '';\n  }\n\n  getText(index: number, length: number): string {\n    return this.getContents(index, length)\n      .filter((op) => typeof op.insert === 'string')\n      .map((op) => op.insert)\n      .join('');\n  }\n\n  insertContents(index: number, contents: Delta): Delta {\n    const normalizedDelta = normalizeDelta(contents);\n    const change = new Delta().retain(index).concat(normalizedDelta);\n    this.scroll.insertContents(index, normalizedDelta);\n    return this.update(change);\n  }\n\n  insertEmbed(index: number, embed: string, value: unknown): Delta {\n    this.scroll.insertAt(index, embed, value);\n    return this.update(new Delta().retain(index).insert({ [embed]: value }));\n  }\n\n  insertText(\n    index: number,\n    text: string,\n    formats: Record<string, unknown> = {},\n  ): Delta {\n    text = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n    this.scroll.insertAt(index, text);\n    Object.keys(formats).forEach((format) => {\n      this.scroll.formatAt(index, text.length, format, formats[format]);\n    });\n    return this.update(\n      new Delta().retain(index).insert(text, cloneDeep(formats)),\n    );\n  }\n\n  isBlank(): boolean {\n    if (this.scroll.children.length === 0) return true;\n    if (this.scroll.children.length > 1) return false;\n    const blot = this.scroll.children.head;\n    if (blot?.statics.blotName !== Block.blotName) return false;\n    const block = blot as Block;\n    if (block.children.length > 1) return false;\n    return block.children.head instanceof Break;\n  }\n\n  removeFormat(index: number, length: number): Delta {\n    const text = this.getText(index, length);\n    const [line, offset] = this.scroll.line(index + length);\n    let suffixLength = 0;\n    let suffix = new Delta();\n    if (line != null) {\n      suffixLength = line.length() - offset;\n      suffix = line\n        .delta()\n        .slice(offset, offset + suffixLength - 1)\n        .insert('\\n');\n    }\n    const contents = this.getContents(index, length + suffixLength);\n    const diff = contents.diff(new Delta().insert(text).concat(suffix));\n    const delta = new Delta().retain(index).concat(diff);\n    return this.applyDelta(delta);\n  }\n\n  update(\n    change: Delta | null,\n    mutations: MutationRecord[] = [],\n    selectionInfo: SelectionInfo | undefined = undefined,\n  ): Delta {\n    const oldDelta = this.delta;\n    if (\n      mutations.length === 1 &&\n      mutations[0].type === 'characterData' &&\n      // @ts-expect-error Fix me later\n      mutations[0].target.data.match(ASCII) &&\n      this.scroll.find(mutations[0].target)\n    ) {\n      // Optimization for character changes\n      const textBlot = this.scroll.find(mutations[0].target) as Blot;\n      const formats = bubbleFormats(textBlot);\n      const index = textBlot.offset(this.scroll);\n      // @ts-expect-error Fix me later\n      const oldValue = mutations[0].oldValue.replace(CursorBlot.CONTENTS, '');\n      const oldText = new Delta().insert(oldValue);\n      // @ts-expect-error\n      const newText = new Delta().insert(textBlot.value());\n      const relativeSelectionInfo = selectionInfo && {\n        oldRange: shiftRange(selectionInfo.oldRange, -index),\n        newRange: shiftRange(selectionInfo.newRange, -index),\n      };\n      const diffDelta = new Delta()\n        .retain(index)\n        .concat(oldText.diff(newText, relativeSelectionInfo));\n      change = diffDelta.reduce((delta, op) => {\n        if (op.insert) {\n          return delta.insert(op.insert, formats);\n        }\n        return delta.push(op);\n      }, new Delta());\n      this.delta = oldDelta.compose(change);\n    } else {\n      this.delta = this.getDelta();\n      if (!change || !isEqual(oldDelta.compose(change), this.delta)) {\n        change = oldDelta.diff(this.delta, selectionInfo);\n      }\n    }\n    return change;\n  }\n}\n\ninterface ListItem {\n  child: Blot;\n  offset: number;\n  length: number;\n  indent: number;\n  type: string;\n}\nfunction convertListHTML(\n  items: ListItem[],\n  lastIndent: number,\n  types: string[],\n): string {\n  if (items.length === 0) {\n    const [endTag] = getListType(types.pop());\n    if (lastIndent <= 0) {\n      return `</li></${endTag}>`;\n    }\n    return `</li></${endTag}>${convertListHTML([], lastIndent - 1, types)}`;\n  }\n  const [{ child, offset, length, indent, type }, ...rest] = items;\n  const [tag, attribute] = getListType(type);\n  if (indent > lastIndent) {\n    types.push(type);\n    if (indent === lastIndent + 1) {\n      return `<${tag}><li${attribute}>${convertHTML(\n        child,\n        offset,\n        length,\n      )}${convertListHTML(rest, indent, types)}`;\n    }\n    return `<${tag}><li>${convertListHTML(items, lastIndent + 1, types)}`;\n  }\n  const previousType = types[types.length - 1];\n  if (indent === lastIndent && type === previousType) {\n    return `</li><li${attribute}>${convertHTML(\n      child,\n      offset,\n      length,\n    )}${convertListHTML(rest, indent, types)}`;\n  }\n  const [endTag] = getListType(types.pop());\n  return `</li></${endTag}>${convertListHTML(items, lastIndent - 1, types)}`;\n}\n\nfunction convertHTML(\n  blot: Blot,\n  index: number,\n  length: number,\n  isRoot = false,\n): string {\n  if ('html' in blot && typeof blot.html === 'function') {\n    return blot.html(index, length);\n  }\n  if (blot instanceof TextBlot) {\n    return escapeText(blot.value().slice(index, index + length));\n  }\n  if (blot instanceof ParentBlot) {\n    // TODO fix API\n    if (blot.statics.blotName === 'list-container') {\n      const items: any[] = [];\n      blot.children.forEachAt(index, length, (child, offset, childLength) => {\n        const formats =\n          'formats' in child && typeof child.formats === 'function'\n            ? child.formats()\n            : {};\n        items.push({\n          child,\n          offset,\n          length: childLength,\n          indent: formats.indent || 0,\n          type: formats.list,\n        });\n      });\n      return convertListHTML(items, -1, []);\n    }\n    const parts: string[] = [];\n    blot.children.forEachAt(index, length, (child, offset, childLength) => {\n      parts.push(convertHTML(child, offset, childLength));\n    });\n    if (isRoot || blot.statics.blotName === 'list') {\n      return parts.join('');\n    }\n    const { outerHTML, innerHTML } = blot.domNode as Element;\n    const [start, end] = outerHTML.split(`>${innerHTML}<`);\n    // TODO cleanup\n    if (start === '<table') {\n      return `<table style=\"border: 1px solid #000;\">${parts.join('')}<${end}`;\n    }\n    return `${start}>${parts.join('')}<${end}`;\n  }\n  return blot.domNode instanceof Element ? blot.domNode.outerHTML : '';\n}\n\nfunction combineFormats(\n  formats: Record<string, unknown>,\n  combined: Record<string, unknown>,\n): Record<string, unknown> {\n  return Object.keys(combined).reduce(\n    (merged, name) => {\n      if (formats[name] == null) return merged;\n      const combinedValue = combined[name];\n      if (combinedValue === formats[name]) {\n        merged[name] = combinedValue;\n      } else if (Array.isArray(combinedValue)) {\n        if (combinedValue.indexOf(formats[name]) < 0) {\n          merged[name] = combinedValue.concat([formats[name]]);\n        } else {\n          // If style already exists, don't add to an array, but don't lose other styles\n          merged[name] = combinedValue;\n        }\n      } else {\n        merged[name] = [combinedValue, formats[name]];\n      }\n      return merged;\n    },\n    {} as Record<string, unknown>,\n  );\n}\n\nfunction getListType(type: string | undefined) {\n  const tag = type === 'ordered' ? 'ol' : 'ul';\n  switch (type) {\n    case 'checked':\n      return [tag, ' data-list=\"checked\"'];\n    case 'unchecked':\n      return [tag, ' data-list=\"unchecked\"'];\n    default:\n      return [tag, ''];\n  }\n}\n\nfunction normalizeDelta(delta: Delta) {\n  return delta.reduce((normalizedDelta, op) => {\n    if (typeof op.insert === 'string') {\n      const text = op.insert.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n      return normalizedDelta.insert(text, op.attributes);\n    }\n    return normalizedDelta.push(op);\n  }, new Delta());\n}\n\nfunction shiftRange({ index, length }: Range, amount: number) {\n  return new Range(index + amount, length);\n}\n\nfunction splitOpLines(ops: Op[]) {\n  const split: Op[] = [];\n  ops.forEach((op) => {\n    if (typeof op.insert === 'string') {\n      const lines = op.insert.split('\\n');\n      lines.forEach((line, index) => {\n        if (index) split.push({ insert: '\\n', attributes: op.attributes });\n        if (line) split.push({ insert: line, attributes: op.attributes });\n      });\n    } else {\n      split.push(op);\n    }\n  });\n\n  return split;\n}\n\nexport default Editor;\n", "import {\n  AttributorStore,\n  BlockBlot,\n  EmbedBlot,\n  LeafBlot,\n  Scope,\n} from 'parchment';\nimport type { Blot, Parent } from 'parchment';\nimport Delta from 'quill-delta';\nimport Break from './break.js';\nimport Inline from './inline.js';\nimport TextBlot from './text.js';\n\nconst NEWLINE_LENGTH = 1;\n\nclass Block extends BlockBlot {\n  cache: { delta?: Delta | null; length?: number } = {};\n\n  delta(): Delta {\n    if (this.cache.delta == null) {\n      this.cache.delta = blockDelta(this);\n    }\n    return this.cache.delta;\n  }\n\n  deleteAt(index: number, length: number) {\n    super.deleteAt(index, length);\n    this.cache = {};\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    if (length <= 0) return;\n    if (this.scroll.query(name, Scope.BLOCK)) {\n      if (index + length === this.length()) {\n        this.format(name, value);\n      }\n    } else {\n      super.formatAt(\n        index,\n        Math.min(length, this.length() - index - 1),\n        name,\n        value,\n      );\n    }\n    this.cache = {};\n  }\n\n  insertAt(index: number, value: string, def?: unknown) {\n    if (def != null) {\n      super.insertAt(index, value, def);\n      this.cache = {};\n      return;\n    }\n    if (value.length === 0) return;\n    const lines = value.split('\\n');\n    const text = lines.shift() as string;\n    if (text.length > 0) {\n      if (index < this.length() - 1 || this.children.tail == null) {\n        super.insertAt(Math.min(index, this.length() - 1), text);\n      } else {\n        this.children.tail.insertAt(this.children.tail.length(), text);\n      }\n      this.cache = {};\n    }\n    // TODO: Fix this next time the file is edited.\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let block: Blot | this = this;\n    lines.reduce((lineIndex, line) => {\n      // @ts-expect-error Fix me later\n      block = block.split(lineIndex, true);\n      block.insertAt(0, line);\n      return line.length;\n    }, index + text.length);\n  }\n\n  insertBefore(blot: Blot, ref?: Blot | null) {\n    const { head } = this.children;\n    super.insertBefore(blot, ref);\n    if (head instanceof Break) {\n      head.remove();\n    }\n    this.cache = {};\n  }\n\n  length() {\n    if (this.cache.length == null) {\n      this.cache.length = super.length() + NEWLINE_LENGTH;\n    }\n    return this.cache.length;\n  }\n\n  moveChildren(target: Parent, ref?: Blot | null) {\n    super.moveChildren(target, ref);\n    this.cache = {};\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    this.cache = {};\n  }\n\n  path(index: number) {\n    return super.path(index, true);\n  }\n\n  removeChild(child: Blot) {\n    super.removeChild(child);\n    this.cache = {};\n  }\n\n  split(index: number, force: boolean | undefined = false): Blot | null {\n    if (force && (index === 0 || index >= this.length() - NEWLINE_LENGTH)) {\n      const clone = this.clone();\n      if (index === 0) {\n        this.parent.insertBefore(clone, this);\n        return this;\n      }\n      this.parent.insertBefore(clone, this.next);\n      return clone;\n    }\n    const next = super.split(index, force);\n    this.cache = {};\n    return next;\n  }\n}\nBlock.blotName = 'block';\nBlock.tagName = 'P';\nBlock.defaultChild = Break;\nBlock.allowedChildren = [Break, Inline, EmbedBlot, TextBlot];\n\nclass BlockEmbed extends EmbedBlot {\n  attributes: AttributorStore;\n  domNode: HTMLElement;\n\n  attach() {\n    super.attach();\n    this.attributes = new AttributorStore(this.domNode);\n  }\n\n  delta() {\n    return new Delta().insert(this.value(), {\n      ...this.formats(),\n      ...this.attributes.values(),\n    });\n  }\n\n  format(name: string, value: unknown) {\n    const attribute = this.scroll.query(name, Scope.BLOCK_ATTRIBUTE);\n    if (attribute != null) {\n      // @ts-expect-error TODO: Scroll#query() should return Attributor when scope is attribute\n      this.attributes.attribute(attribute, value);\n    }\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    this.format(name, value);\n  }\n\n  insertAt(index: number, value: string, def?: unknown) {\n    if (def != null) {\n      super.insertAt(index, value, def);\n      return;\n    }\n    const lines = value.split('\\n');\n    const text = lines.pop();\n    const blocks = lines.map((line) => {\n      const block = this.scroll.create(Block.blotName);\n      block.insertAt(0, line);\n      return block;\n    });\n    const ref = this.split(index);\n    blocks.forEach((block) => {\n      this.parent.insertBefore(block, ref);\n    });\n    if (text) {\n      this.parent.insertBefore(this.scroll.create('text', text), ref);\n    }\n  }\n}\nBlockEmbed.scope = Scope.BLOCK_BLOT;\n// It is important for cursor behavior BlockEmbeds use tags that are block level elements\n\nfunction blockDelta(blot: BlockBlot, filter = true) {\n  return blot\n    .descendants(LeafBlot)\n    .reduce((delta, leaf) => {\n      if (leaf.length() === 0) {\n        return delta;\n      }\n      return delta.insert(leaf.value(), bubbleFormats(leaf, {}, filter));\n    }, new Delta())\n    .insert('\\n', bubbleFormats(blot));\n}\n\nfunction bubbleFormats(\n  blot: Blot | null,\n  formats: Record<string, unknown> = {},\n  filter = true,\n): Record<string, unknown> {\n  if (blot == null) return formats;\n  if ('formats' in blot && typeof blot.formats === 'function') {\n    formats = {\n      ...formats,\n      ...blot.formats(),\n    };\n    if (filter) {\n      // exclude syntax highlighting from deltas and getFormat()\n      delete formats['code-token'];\n    }\n  }\n  if (\n    blot.parent == null ||\n    blot.parent.statics.blotName === 'scroll' ||\n    blot.parent.statics.scope !== blot.statics.scope\n  ) {\n    return formats;\n  }\n  return bubbleFormats(blot.parent, formats, filter);\n}\n\nexport { blockDelta, bubbleFormats, BlockEmbed, Block as default };\n", "import { EmbedBlot } from 'parchment';\n\nclass Break extends EmbedBlot {\n  static value() {\n    return undefined;\n  }\n\n  optimize() {\n    if (this.prev || this.next) {\n      this.remove();\n    }\n  }\n\n  length() {\n    return 0;\n  }\n\n  value() {\n    return '';\n  }\n}\nBreak.blotName = 'break';\nBreak.tagName = 'BR';\n\nexport default Break;\n", "import { TextBlot } from 'parchment';\n\nclass Text extends TextBlot {}\n\nfunction escapeText(text: string) {\n  return text.replace(/[&<>\"']/g, (s) => {\n    // https://lodash.com/docs#escape\n    const entityMap: Record<string, string> = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#39;',\n    };\n    return entityMap[s];\n  });\n}\n\nexport { Text as default, escapeText };\n", "import { EmbedBlot, InlineBlot, Scope } from 'parchment';\nimport type { BlotConstructor } from 'parchment';\nimport Break from './break.js';\nimport Text from './text.js';\n\nclass Inline extends InlineBlot {\n  static allowedChildren: BlotConstructor[] = [Inline, Break, EmbedBlot, Text];\n  // Lower index means deeper in the DOM tree, since not found (-1) is for embeds\n  static order = [\n    'cursor',\n    'inline', // Must be lower\n    'link', // Chrome wants <a> to be lower\n    'underline',\n    'strike',\n    'italic',\n    'bold',\n    'script',\n    'code', // Must be higher\n  ];\n\n  static compare(self: string, other: string) {\n    const selfIndex = Inline.order.indexOf(self);\n    const otherIndex = Inline.order.indexOf(other);\n    if (selfIndex >= 0 || otherIndex >= 0) {\n      return selfIndex - otherIndex;\n    }\n    if (self === other) {\n      return 0;\n    }\n    if (self < other) {\n      return -1;\n    }\n    return 1;\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    if (\n      Inline.compare(this.statics.blotName, name) < 0 &&\n      this.scroll.query(name, Scope.BLOT)\n    ) {\n      const blot = this.isolate(index, length);\n      if (value) {\n        blot.wrap(name, value);\n      }\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    if (\n      this.parent instanceof Inline &&\n      Inline.compare(this.statics.blotName, this.parent.statics.blotName) > 0\n    ) {\n      const parent = this.parent.isolate(this.offset(), this.length());\n      // @ts-expect-error TODO: make isolate generic\n      this.moveChildren(parent);\n      parent.wrap(this);\n    }\n  }\n}\n\nexport default Inline;\n", "import { EmbedBlot, Scope } from 'parchment';\nimport type { Parent, ScrollBlot } from 'parchment';\nimport type Selection from '../core/selection.js';\nimport TextBlot from './text.js';\nimport type { EmbedContextRange } from './embed.js';\n\nclass Cursor extends EmbedBlot {\n  static blotName = 'cursor';\n  static className = 'ql-cursor';\n  static tagName = 'span';\n  static CONTENTS = '\\uFEFF'; // Zero width no break space\n\n  static value() {\n    return undefined;\n  }\n\n  selection: Selection;\n  textNode: Text;\n  savedLength: number;\n\n  constructor(scroll: ScrollBlot, domNode: HTMLElement, selection: Selection) {\n    super(scroll, domNode);\n    this.selection = selection;\n    this.textNode = document.createTextNode(Cursor.CONTENTS);\n    this.domNode.appendChild(this.textNode);\n    this.savedLength = 0;\n  }\n\n  detach() {\n    // super.detach() will also clear domNode.__blot\n    if (this.parent != null) this.parent.removeChild(this);\n  }\n\n  format(name: string, value: unknown) {\n    if (this.savedLength !== 0) {\n      super.format(name, value);\n      return;\n    }\n    // TODO: Fix this next time the file is edited.\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let target: Parent | this = this;\n    let index = 0;\n    while (target != null && target.statics.scope !== Scope.BLOCK_BLOT) {\n      index += target.offset(target.parent);\n      target = target.parent;\n    }\n    if (target != null) {\n      this.savedLength = Cursor.CONTENTS.length;\n      // @ts-expect-error TODO: allow empty context in Parchment\n      target.optimize();\n      target.formatAt(index, Cursor.CONTENTS.length, name, value);\n      this.savedLength = 0;\n    }\n  }\n\n  index(node: Node, offset: number) {\n    if (node === this.textNode) return 0;\n    return super.index(node, offset);\n  }\n\n  length() {\n    return this.savedLength;\n  }\n\n  position(): [Text, number] {\n    return [this.textNode, this.textNode.data.length];\n  }\n\n  remove() {\n    super.remove();\n    // @ts-expect-error Fix me later\n    this.parent = null;\n  }\n\n  restore(): EmbedContextRange | null {\n    if (this.selection.composing || this.parent == null) return null;\n    const range = this.selection.getNativeRange();\n    // Browser may push down styles/nodes inside the cursor blot.\n    // https://dvcs.w3.org/hg/editing/raw-file/tip/editing.html#push-down-values\n    while (\n      this.domNode.lastChild != null &&\n      this.domNode.lastChild !== this.textNode\n    ) {\n      // @ts-expect-error Fix me later\n      this.domNode.parentNode.insertBefore(\n        this.domNode.lastChild,\n        this.domNode,\n      );\n    }\n\n    const prevTextBlot = this.prev instanceof TextBlot ? this.prev : null;\n    const prevTextLength = prevTextBlot ? prevTextBlot.length() : 0;\n    const nextTextBlot = this.next instanceof TextBlot ? this.next : null;\n    // @ts-expect-error TODO: make TextBlot.text public\n    const nextText = nextTextBlot ? nextTextBlot.text : '';\n    const { textNode } = this;\n    // take text from inside this blot and reset it\n    const newText = textNode.data.split(Cursor.CONTENTS).join('');\n    textNode.data = Cursor.CONTENTS;\n\n    // proactively merge TextBlots around cursor so that optimization\n    // doesn't lose the cursor.  the reason we are here in cursor.restore\n    // could be that the user clicked in prevTextBlot or nextTextBlot, or\n    // the user typed something.\n    let mergedTextBlot;\n    if (prevTextBlot) {\n      mergedTextBlot = prevTextBlot;\n      if (newText || nextTextBlot) {\n        prevTextBlot.insertAt(prevTextBlot.length(), newText + nextText);\n        if (nextTextBlot) {\n          nextTextBlot.remove();\n        }\n      }\n    } else if (nextTextBlot) {\n      mergedTextBlot = nextTextBlot;\n      nextTextBlot.insertAt(0, newText);\n    } else {\n      const newTextNode = document.createTextNode(newText);\n      mergedTextBlot = this.scroll.create(newTextNode);\n      this.parent.insertBefore(mergedTextBlot, this);\n    }\n\n    this.remove();\n    if (range) {\n      // calculate selection to restore\n      const remapOffset = (node: Node, offset: number) => {\n        if (prevTextBlot && node === prevTextBlot.domNode) {\n          return offset;\n        }\n        if (node === textNode) {\n          return prevTextLength + offset - 1;\n        }\n        if (nextTextBlot && node === nextTextBlot.domNode) {\n          return prevTextLength + newText.length + offset;\n        }\n        return null;\n      };\n\n      const start = remapOffset(range.start.node, range.start.offset);\n      const end = remapOffset(range.end.node, range.end.offset);\n      if (start !== null && end !== null) {\n        return {\n          startNode: mergedTextBlot.domNode,\n          startOffset: start,\n          endNode: mergedTextBlot.domNode,\n          endOffset: end,\n        };\n      }\n    }\n    return null;\n  }\n\n  update(mutations: MutationRecord[], context: Record<string, unknown>) {\n    if (\n      mutations.some((mutation) => {\n        return (\n          mutation.type === 'characterData' && mutation.target === this.textNode\n        );\n      })\n    ) {\n      const range = this.restore();\n      if (range) context.range = range;\n    }\n  }\n\n  // Avoid .ql-cursor being a descendant of `<a/>`.\n  // The reason is Safari pushes down `<a/>` on text insertion.\n  // That will cause DOM nodes not sync with the model.\n  //\n  // For example ({I} is the caret), given the markup:\n  //    <a><span class=\"ql-cursor\">\\uFEFF{I}</span></a>\n  // When typing a char \"x\", `<a/>` will be pushed down inside the `<span>` first:\n  //    <span class=\"ql-cursor\"><a>\\uFEFF{I}</a></span>\n  // And then \"x\" will be inserted after `<a/>`:\n  //    <span class=\"ql-cursor\"><a>\\uFEFF</a>d{I}</span>\n  optimize(context?: unknown) {\n    // @ts-expect-error Fix me later\n    super.optimize(context);\n\n    let { parent } = this;\n    while (parent) {\n      if (parent.domNode.tagName === 'A') {\n        this.savedLength = Cursor.CONTENTS.length;\n        // @ts-expect-error TODO: make isolate generic\n        parent.isolate(this.offset(parent), this.length()).unwrap();\n        this.savedLength = 0;\n        break;\n      }\n      parent = parent.parent;\n    }\n  }\n\n  value() {\n    return '';\n  }\n}\n\nexport default Cursor;\n", "import EventEmitter from './index.js'\n\nexport { EventEmitter }\nexport default EventEmitter\n", "import type Quill from '../core.js';\n\nexport default new WeakMap<Node, Quill>();\n", "const levels = ['error', 'warn', 'log', 'info'] as const;\nexport type DebugLevel = (typeof levels)[number];\nlet level: DebugLevel | false = 'warn';\n\nfunction debug(method: DebugLevel, ...args: unknown[]) {\n  if (level) {\n    if (levels.indexOf(method) <= levels.indexOf(level)) {\n      console[method](...args); // eslint-disable-line no-console\n    }\n  }\n}\n\nfunction namespace(\n  ns: string,\n): Record<DebugLevel, (...args: unknown[]) => void> {\n  return levels.reduce(\n    (logger, method) => {\n      logger[method] = debug.bind(console, method, ns);\n      return logger;\n    },\n    {} as Record<DebugLevel, (...args: unknown[]) => void>,\n  );\n}\n\nnamespace.level = (newLevel: DebugLevel | false) => {\n  level = newLevel;\n};\ndebug.level = namespace.level;\n\nexport default namespace;\n", "import { EventEmitter } from 'eventemitter3';\nimport instances from './instances.js';\nimport logger from './logger.js';\n\nconst debug = logger('quill:events');\nconst EVENTS = ['selectionchange', 'mousedown', 'mouseup', 'click'];\n\nEVENTS.forEach((eventName) => {\n  document.addEventListener(eventName, (...args) => {\n    Array.from(document.querySelectorAll('.ql-container')).forEach((node) => {\n      const quill = instances.get(node);\n      if (quill && quill.emitter) {\n        quill.emitter.handleDOM(...args);\n      }\n    });\n  });\n});\n\nclass Emitter extends EventEmitter<string> {\n  static events = {\n    EDITOR_CHANGE: 'editor-change',\n    SCROLL_BEFORE_UPDATE: 'scroll-before-update',\n    SCROLL_BLOT_MOUNT: 'scroll-blot-mount',\n    SCROLL_BLOT_UNMOUNT: 'scroll-blot-unmount',\n    SCROLL_OPTIMIZE: 'scroll-optimize',\n    SCROLL_UPDATE: 'scroll-update',\n    SCROLL_EMBED_UPDATE: 'scroll-embed-update',\n    SELECTION_CHANGE: 'selection-change',\n    TEXT_CHANGE: 'text-change',\n    COMPOSITION_BEFORE_START: 'composition-before-start',\n    COMPOSITION_START: 'composition-start',\n    COMPOSITION_BEFORE_END: 'composition-before-end',\n    COMPOSITION_END: 'composition-end',\n  } as const;\n\n  static sources = {\n    API: 'api',\n    SILENT: 'silent',\n    USER: 'user',\n  } as const;\n\n  protected domListeners: Record<string, { node: Node; handler: Function }[]>;\n\n  constructor() {\n    super();\n    this.domListeners = {};\n    this.on('error', debug.error);\n  }\n\n  emit(...args: unknown[]): boolean {\n    debug.log.call(debug, ...args);\n    // @ts-expect-error\n    return super.emit(...args);\n  }\n\n  handleDOM(event: Event, ...args: unknown[]) {\n    (this.domListeners[event.type] || []).forEach(({ node, handler }) => {\n      if (event.target === node || node.contains(event.target as Node)) {\n        handler(event, ...args);\n      }\n    });\n  }\n\n  listenDOM(eventName: string, node: Node, handler: EventListener) {\n    if (!this.domListeners[eventName]) {\n      this.domListeners[eventName] = [];\n    }\n    this.domListeners[eventName].push({ node, handler });\n  }\n}\n\nexport type EmitterSource =\n  (typeof Emitter.sources)[keyof typeof Emitter.sources];\n\nexport default Emitter;\n", "import { LeafBlot, Scope } from 'parchment';\nimport { cloneDeep, isEqual } from 'lodash-es';\nimport Emitter from './emitter.js';\nimport type { EmitterSource } from './emitter.js';\nimport logger from './logger.js';\nimport type Cursor from '../blots/cursor.js';\nimport type Scroll from '../blots/scroll.js';\n\nconst debug = logger('quill:selection');\n\ntype NativeRange = AbstractRange;\n\ninterface NormalizedRange {\n  start: {\n    node: NativeRange['startContainer'];\n    offset: NativeRange['startOffset'];\n  };\n  end: { node: NativeRange['endContainer']; offset: NativeRange['endOffset'] };\n  native: NativeRange;\n}\n\nexport interface Bounds {\n  bottom: number;\n  height: number;\n  left: number;\n  right: number;\n  top: number;\n  width: number;\n}\n\nexport class Range {\n  constructor(\n    public index: number,\n    public length = 0,\n  ) {}\n}\n\nclass Selection {\n  scroll: Scroll;\n  emitter: Emitter;\n  composing: boolean;\n  mouseDown: boolean;\n\n  root: HTMLElement;\n  cursor: Cursor;\n  savedRange: Range;\n  lastRange: Range | null;\n  lastNative: NormalizedRange | null;\n\n  constructor(scroll: Scroll, emitter: Emitter) {\n    this.emitter = emitter;\n    this.scroll = scroll;\n    this.composing = false;\n    this.mouseDown = false;\n    this.root = this.scroll.domNode;\n    // @ts-expect-error\n    this.cursor = this.scroll.create('cursor', this);\n    // savedRange is last non-null range\n    this.savedRange = new Range(0, 0);\n    this.lastRange = this.savedRange;\n    this.lastNative = null;\n    this.handleComposition();\n    this.handleDragging();\n    this.emitter.listenDOM('selectionchange', document, () => {\n      if (!this.mouseDown && !this.composing) {\n        setTimeout(this.update.bind(this, Emitter.sources.USER), 1);\n      }\n    });\n    this.emitter.on(Emitter.events.SCROLL_BEFORE_UPDATE, () => {\n      if (!this.hasFocus()) return;\n      const native = this.getNativeRange();\n      if (native == null) return;\n      if (native.start.node === this.cursor.textNode) return; // cursor.restore() will handle\n      this.emitter.once(\n        Emitter.events.SCROLL_UPDATE,\n        (source, mutations: MutationRecord[]) => {\n          try {\n            if (\n              this.root.contains(native.start.node) &&\n              this.root.contains(native.end.node)\n            ) {\n              this.setNativeRange(\n                native.start.node,\n                native.start.offset,\n                native.end.node,\n                native.end.offset,\n              );\n            }\n            const triggeredByTyping = mutations.some(\n              (mutation) =>\n                mutation.type === 'characterData' ||\n                mutation.type === 'childList' ||\n                (mutation.type === 'attributes' &&\n                  mutation.target === this.root),\n            );\n            this.update(triggeredByTyping ? Emitter.sources.SILENT : source);\n          } catch (ignored) {\n            // ignore\n          }\n        },\n      );\n    });\n    this.emitter.on(Emitter.events.SCROLL_OPTIMIZE, (mutations, context) => {\n      if (context.range) {\n        const { startNode, startOffset, endNode, endOffset } = context.range;\n        this.setNativeRange(startNode, startOffset, endNode, endOffset);\n        this.update(Emitter.sources.SILENT);\n      }\n    });\n    this.update(Emitter.sources.SILENT);\n  }\n\n  handleComposition() {\n    this.emitter.on(Emitter.events.COMPOSITION_BEFORE_START, () => {\n      this.composing = true;\n    });\n    this.emitter.on(Emitter.events.COMPOSITION_END, () => {\n      this.composing = false;\n      if (this.cursor.parent) {\n        const range = this.cursor.restore();\n        if (!range) return;\n        setTimeout(() => {\n          this.setNativeRange(\n            range.startNode,\n            range.startOffset,\n            range.endNode,\n            range.endOffset,\n          );\n        }, 1);\n      }\n    });\n  }\n\n  handleDragging() {\n    this.emitter.listenDOM('mousedown', document.body, () => {\n      this.mouseDown = true;\n    });\n    this.emitter.listenDOM('mouseup', document.body, () => {\n      this.mouseDown = false;\n      this.update(Emitter.sources.USER);\n    });\n  }\n\n  focus() {\n    if (this.hasFocus()) return;\n    this.root.focus({ preventScroll: true });\n    this.setRange(this.savedRange);\n  }\n\n  format(format: string, value: unknown) {\n    this.scroll.update();\n    const nativeRange = this.getNativeRange();\n    if (\n      nativeRange == null ||\n      !nativeRange.native.collapsed ||\n      this.scroll.query(format, Scope.BLOCK)\n    )\n      return;\n    if (nativeRange.start.node !== this.cursor.textNode) {\n      const blot = this.scroll.find(nativeRange.start.node, false);\n      if (blot == null) return;\n      // TODO Give blot ability to not split\n      if (blot instanceof LeafBlot) {\n        const after = blot.split(nativeRange.start.offset);\n        blot.parent.insertBefore(this.cursor, after);\n      } else {\n        // @ts-expect-error TODO: nativeRange.start.node doesn't seem to match function signature\n        blot.insertBefore(this.cursor, nativeRange.start.node); // Should never happen\n      }\n      this.cursor.attach();\n    }\n    this.cursor.format(format, value);\n    this.scroll.optimize();\n    this.setNativeRange(this.cursor.textNode, this.cursor.textNode.data.length);\n    this.update();\n  }\n\n  getBounds(index: number, length = 0) {\n    const scrollLength = this.scroll.length();\n    index = Math.min(index, scrollLength - 1);\n    length = Math.min(index + length, scrollLength - 1) - index;\n    let node: Node;\n    let [leaf, offset] = this.scroll.leaf(index);\n    if (leaf == null) return null;\n    if (length > 0 && offset === leaf.length()) {\n      const [next] = this.scroll.leaf(index + 1);\n      if (next) {\n        const [line] = this.scroll.line(index);\n        const [nextLine] = this.scroll.line(index + 1);\n        if (line === nextLine) {\n          leaf = next;\n          offset = 0;\n        }\n      }\n    }\n    [node, offset] = leaf.position(offset, true);\n    const range = document.createRange();\n    if (length > 0) {\n      range.setStart(node, offset);\n      [leaf, offset] = this.scroll.leaf(index + length);\n      if (leaf == null) return null;\n      [node, offset] = leaf.position(offset, true);\n      range.setEnd(node, offset);\n      return range.getBoundingClientRect();\n    }\n    let side: 'left' | 'right' = 'left';\n    let rect: DOMRect;\n    if (node instanceof Text) {\n      // Return null if the text node is empty because it is\n      // not able to get a useful client rect:\n      // https://github.com/w3c/csswg-drafts/issues/2514.\n      // Empty text nodes are most likely caused by TextBlot#optimize()\n      // not getting called when editor content changes.\n      if (!node.data.length) {\n        return null;\n      }\n      if (offset < node.data.length) {\n        range.setStart(node, offset);\n        range.setEnd(node, offset + 1);\n      } else {\n        range.setStart(node, offset - 1);\n        range.setEnd(node, offset);\n        side = 'right';\n      }\n      rect = range.getBoundingClientRect();\n    } else {\n      if (!(leaf.domNode instanceof Element)) return null;\n      rect = leaf.domNode.getBoundingClientRect();\n      if (offset > 0) side = 'right';\n    }\n    return {\n      bottom: rect.top + rect.height,\n      height: rect.height,\n      left: rect[side],\n      right: rect[side],\n      top: rect.top,\n      width: 0,\n    };\n  }\n\n  getNativeRange(): NormalizedRange | null {\n    const selection = document.getSelection();\n    if (selection == null || selection.rangeCount <= 0) return null;\n    const nativeRange = selection.getRangeAt(0);\n    if (nativeRange == null) return null;\n    const range = this.normalizeNative(nativeRange);\n    debug.info('getNativeRange', range);\n    return range;\n  }\n\n  getRange(): [Range, NormalizedRange] | [null, null] {\n    const root = this.scroll.domNode;\n    if ('isConnected' in root && !root.isConnected) {\n      // document.getSelection() forces layout on Blink, so we trend to\n      // not calling it.\n      return [null, null];\n    }\n    const normalized = this.getNativeRange();\n    if (normalized == null) return [null, null];\n    const range = this.normalizedToRange(normalized);\n    return [range, normalized];\n  }\n\n  hasFocus(): boolean {\n    return (\n      document.activeElement === this.root ||\n      (document.activeElement != null &&\n        contains(this.root, document.activeElement))\n    );\n  }\n\n  normalizedToRange(range: NormalizedRange) {\n    const positions: [Node, number][] = [\n      [range.start.node, range.start.offset],\n    ];\n    if (!range.native.collapsed) {\n      positions.push([range.end.node, range.end.offset]);\n    }\n    const indexes = positions.map((position) => {\n      const [node, offset] = position;\n      const blot = this.scroll.find(node, true);\n      // @ts-expect-error Fix me later\n      const index = blot.offset(this.scroll);\n      if (offset === 0) {\n        return index;\n      }\n      if (blot instanceof LeafBlot) {\n        return index + blot.index(node, offset);\n      }\n      // @ts-expect-error Fix me later\n      return index + blot.length();\n    });\n    const end = Math.min(Math.max(...indexes), this.scroll.length() - 1);\n    const start = Math.min(end, ...indexes);\n    return new Range(start, end - start);\n  }\n\n  normalizeNative(nativeRange: NativeRange) {\n    if (\n      !contains(this.root, nativeRange.startContainer) ||\n      (!nativeRange.collapsed && !contains(this.root, nativeRange.endContainer))\n    ) {\n      return null;\n    }\n    const range = {\n      start: {\n        node: nativeRange.startContainer,\n        offset: nativeRange.startOffset,\n      },\n      end: { node: nativeRange.endContainer, offset: nativeRange.endOffset },\n      native: nativeRange,\n    };\n    [range.start, range.end].forEach((position) => {\n      let { node, offset } = position;\n      while (!(node instanceof Text) && node.childNodes.length > 0) {\n        if (node.childNodes.length > offset) {\n          node = node.childNodes[offset];\n          offset = 0;\n        } else if (node.childNodes.length === offset) {\n          // @ts-expect-error Fix me later\n          node = node.lastChild;\n          if (node instanceof Text) {\n            offset = node.data.length;\n          } else if (node.childNodes.length > 0) {\n            // Container case\n            offset = node.childNodes.length;\n          } else {\n            // Embed case\n            offset = node.childNodes.length + 1;\n          }\n        } else {\n          break;\n        }\n      }\n      position.node = node;\n      position.offset = offset;\n    });\n    return range;\n  }\n\n  rangeToNative(range: Range): [Node | null, number, Node | null, number] {\n    const scrollLength = this.scroll.length();\n\n    const getPosition = (\n      index: number,\n      inclusive: boolean,\n    ): [Node | null, number] => {\n      index = Math.min(scrollLength - 1, index);\n      const [leaf, leafOffset] = this.scroll.leaf(index);\n      return leaf ? leaf.position(leafOffset, inclusive) : [null, -1];\n    };\n    return [\n      ...getPosition(range.index, false),\n      ...getPosition(range.index + range.length, true),\n    ];\n  }\n\n  setNativeRange(\n    startNode: Node | null,\n    startOffset?: number,\n    endNode = startNode,\n    endOffset = startOffset,\n    force = false,\n  ) {\n    debug.info('setNativeRange', startNode, startOffset, endNode, endOffset);\n    if (\n      startNode != null &&\n      (this.root.parentNode == null ||\n        startNode.parentNode == null ||\n        // @ts-expect-error Fix me later\n        endNode.parentNode == null)\n    ) {\n      return;\n    }\n    const selection = document.getSelection();\n    if (selection == null) return;\n    if (startNode != null) {\n      if (!this.hasFocus()) this.root.focus({ preventScroll: true });\n      const { native } = this.getNativeRange() || {};\n      if (\n        native == null ||\n        force ||\n        startNode !== native.startContainer ||\n        startOffset !== native.startOffset ||\n        endNode !== native.endContainer ||\n        endOffset !== native.endOffset\n      ) {\n        if (startNode instanceof Element && startNode.tagName === 'BR') {\n          // @ts-expect-error Fix me later\n          startOffset = Array.from(startNode.parentNode.childNodes).indexOf(\n            startNode,\n          );\n          startNode = startNode.parentNode;\n        }\n        if (endNode instanceof Element && endNode.tagName === 'BR') {\n          // @ts-expect-error Fix me later\n          endOffset = Array.from(endNode.parentNode.childNodes).indexOf(\n            endNode,\n          );\n          endNode = endNode.parentNode;\n        }\n        const range = document.createRange();\n        // @ts-expect-error Fix me later\n        range.setStart(startNode, startOffset);\n        // @ts-expect-error Fix me later\n        range.setEnd(endNode, endOffset);\n        selection.removeAllRanges();\n        selection.addRange(range);\n      }\n    } else {\n      selection.removeAllRanges();\n      this.root.blur();\n    }\n  }\n\n  setRange(range: Range | null, force: boolean, source?: EmitterSource): void;\n  setRange(range: Range | null, source?: EmitterSource): void;\n  setRange(\n    range: Range | null,\n    force: boolean | EmitterSource = false,\n    source: EmitterSource = Emitter.sources.API,\n  ): void {\n    if (typeof force === 'string') {\n      source = force;\n      force = false;\n    }\n    debug.info('setRange', range);\n    if (range != null) {\n      const args = this.rangeToNative(range);\n      this.setNativeRange(...args, force);\n    } else {\n      this.setNativeRange(null);\n    }\n    this.update(source);\n  }\n\n  update(source: EmitterSource = Emitter.sources.USER) {\n    const oldRange = this.lastRange;\n    const [lastRange, nativeRange] = this.getRange();\n    this.lastRange = lastRange;\n    this.lastNative = nativeRange;\n    if (this.lastRange != null) {\n      this.savedRange = this.lastRange;\n    }\n    if (!isEqual(oldRange, this.lastRange)) {\n      if (\n        !this.composing &&\n        nativeRange != null &&\n        nativeRange.native.collapsed &&\n        nativeRange.start.node !== this.cursor.textNode\n      ) {\n        const range = this.cursor.restore();\n        if (range) {\n          this.setNativeRange(\n            range.startNode,\n            range.startOffset,\n            range.endNode,\n            range.endOffset,\n          );\n        }\n      }\n      const args = [\n        Emitter.events.SELECTION_CHANGE,\n        cloneDeep(this.lastRange),\n        cloneDeep(oldRange),\n        source,\n      ];\n      this.emitter.emit(Emitter.events.EDITOR_CHANGE, ...args);\n      if (source !== Emitter.sources.SILENT) {\n        this.emitter.emit(...args);\n      }\n    }\n  }\n}\n\nfunction contains(parent: Node, descendant: Node) {\n  try {\n    // Firefox inserts inaccessible nodes around video elements\n    descendant.parentNode; // eslint-disable-line @typescript-eslint/no-unused-expressions\n  } catch (e) {\n    return false;\n  }\n  return parent.contains(descendant);\n}\n\nexport default Selection;\n", "import type Quill from './quill.js';\n\nabstract class Module<T extends {} = {}> {\n  static DEFAULTS = {};\n\n  constructor(\n    public quill: Quill,\n    protected options: Partial<T> = {},\n  ) {}\n}\n\nexport default Module;\n", "import type { ScrollBlot } from 'parchment';\nimport { EmbedBlot } from 'parchment';\nimport TextBlot from './text.js';\n\nconst GUARD_TEXT = '\\uFEFF';\n\nexport interface EmbedContextRange {\n  startNode: Node | Text;\n  startOffset: number;\n  endNode?: Node | Text;\n  endOffset?: number;\n}\n\nclass Embed extends EmbedBlot {\n  contentNode: HTMLSpanElement;\n  leftGuard: Text;\n  rightGuard: Text;\n\n  constructor(scroll: ScrollBlot, node: Node) {\n    super(scroll, node);\n    this.contentNode = document.createElement('span');\n    this.contentNode.setAttribute('contenteditable', 'false');\n    Array.from(this.domNode.childNodes).forEach((childNode) => {\n      this.contentNode.appendChild(childNode);\n    });\n    this.leftGuard = document.createTextNode(GUARD_TEXT);\n    this.rightGuard = document.createTextNode(GUARD_TEXT);\n    this.domNode.appendChild(this.leftGuard);\n    this.domNode.appendChild(this.contentNode);\n    this.domNode.appendChild(this.rightGuard);\n  }\n\n  index(node: Node, offset: number) {\n    if (node === this.leftGuard) return 0;\n    if (node === this.rightGuard) return 1;\n    return super.index(node, offset);\n  }\n\n  restore(node: Text): EmbedContextRange | null {\n    let range: EmbedContextRange | null = null;\n    let textNode: Text;\n    const text = node.data.split(GUARD_TEXT).join('');\n    if (node === this.leftGuard) {\n      if (this.prev instanceof TextBlot) {\n        const prevLength = this.prev.length();\n        this.prev.insertAt(prevLength, text);\n        range = {\n          startNode: this.prev.domNode,\n          startOffset: prevLength + text.length,\n        };\n      } else {\n        textNode = document.createTextNode(text);\n        this.parent.insertBefore(this.scroll.create(textNode), this);\n        range = {\n          startNode: textNode,\n          startOffset: text.length,\n        };\n      }\n    } else if (node === this.rightGuard) {\n      if (this.next instanceof TextBlot) {\n        this.next.insertAt(0, text);\n        range = {\n          startNode: this.next.domNode,\n          startOffset: text.length,\n        };\n      } else {\n        textNode = document.createTextNode(text);\n        this.parent.insertBefore(this.scroll.create(textNode), this.next);\n        range = {\n          startNode: textNode,\n          startOffset: text.length,\n        };\n      }\n    }\n    node.data = GUARD_TEXT;\n    return range;\n  }\n\n  update(mutations: MutationRecord[], context: Record<string, unknown>) {\n    mutations.forEach((mutation) => {\n      if (\n        mutation.type === 'characterData' &&\n        (mutation.target === this.leftGuard ||\n          mutation.target === this.rightGuard)\n      ) {\n        const range = this.restore(mutation.target as Text);\n        if (range) context.range = range;\n      }\n    });\n  }\n}\n\nexport default Embed;\n", "import Embed from '../blots/embed.js';\nimport type Scroll from '../blots/scroll.js';\nimport Emitter from './emitter.js';\n\nclass Composition {\n  isComposing = false;\n\n  constructor(\n    private scroll: Scroll,\n    private emitter: Emitter,\n  ) {\n    this.setupListeners();\n  }\n\n  private setupListeners() {\n    this.scroll.domNode.addEventListener('compositionstart', (event) => {\n      if (!this.isComposing) {\n        this.handleCompositionStart(event);\n      }\n    });\n\n    this.scroll.domNode.addEventListener('compositionend', (event) => {\n      if (this.isComposing) {\n        // Webkit makes DOM changes after compositionend, so we use microtask to\n        // ensure the order.\n        // https://bugs.webkit.org/show_bug.cgi?id=31902\n        queueMicrotask(() => {\n          this.handleCompositionEnd(event);\n        });\n      }\n    });\n  }\n\n  private handleCompositionStart(event: CompositionEvent) {\n    const blot =\n      event.target instanceof Node\n        ? this.scroll.find(event.target, true)\n        : null;\n\n    if (blot && !(blot instanceof Embed)) {\n      this.emitter.emit(Emitter.events.COMPOSITION_BEFORE_START, event);\n      this.scroll.batchStart();\n      this.emitter.emit(Emitter.events.COMPOSITION_START, event);\n      this.isComposing = true;\n    }\n  }\n\n  private handleCompositionEnd(event: CompositionEvent) {\n    this.emitter.emit(Emitter.events.COMPOSITION_BEFORE_END, event);\n    this.scroll.batchEnd();\n    this.emitter.emit(Emitter.events.COMPOSITION_END, event);\n    this.isComposing = false;\n  }\n}\n\nexport default Composition;\n", "import type Quill from '../core.js';\nimport type Clipboard from '../modules/clipboard.js';\nimport type History from '../modules/history.js';\nimport type Keyboard from '../modules/keyboard.js';\nimport type { ToolbarProps } from '../modules/toolbar.js';\nimport type Uploader from '../modules/uploader.js';\n\nexport interface ThemeOptions {\n  modules: Record<string, unknown> & {\n    toolbar?: null | ToolbarProps;\n  };\n}\n\nclass Theme {\n  static DEFAULTS: ThemeOptions = {\n    modules: {},\n  };\n\n  static themes = {\n    default: Theme,\n  };\n\n  modules: ThemeOptions['modules'] = {};\n\n  constructor(\n    protected quill: Quill,\n    protected options: ThemeOptions,\n  ) {}\n\n  init() {\n    Object.keys(this.options.modules).forEach((name) => {\n      if (this.modules[name] == null) {\n        this.addModule(name);\n      }\n    });\n  }\n\n  addModule(name: 'clipboard'): Clipboard;\n  addModule(name: 'keyboard'): Keyboard;\n  addModule(name: 'uploader'): Uploader;\n  addModule(name: 'history'): History;\n  addModule(name: string): unknown;\n  addModule(name: string) {\n    // @ts-expect-error\n    const ModuleClass = this.quill.constructor.import(`modules/${name}`);\n    this.modules[name] = new ModuleClass(\n      this.quill,\n      this.options.modules[name] || {},\n    );\n    return this.modules[name];\n  }\n}\n\nexport interface ThemeConstructor {\n  new (quill: Quill, options: unknown): Theme;\n  DEFAULTS: ThemeOptions;\n}\n\nexport default Theme;\n", "export type Rect = {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n};\n\nconst getParentElement = (element: Node): Element | null =>\n  element.parentElement || (element.getRootNode() as ShadowRoot).host || null;\n\nconst getElementRect = (element: Element): Rect => {\n  const rect = element.getBoundingClientRect();\n  const scaleX =\n    ('offsetWidth' in element &&\n      Math.abs(rect.width) / (element as HTMLElement).offsetWidth) ||\n    1;\n  const scaleY =\n    ('offsetHeight' in element &&\n      Math.abs(rect.height) / (element as HTMLElement).offsetHeight) ||\n    1;\n  return {\n    top: rect.top,\n    right: rect.left + element.clientWidth * scaleX,\n    bottom: rect.top + element.clientHeight * scaleY,\n    left: rect.left,\n  };\n};\n\nconst paddingValueToInt = (value: string) => {\n  const number = parseInt(value, 10);\n  return Number.isNaN(number) ? 0 : number;\n};\n\n// Follow the steps described in https://www.w3.org/TR/cssom-view-1/#element-scrolling-members,\n// assuming that the scroll option is set to 'nearest'.\nconst getScrollDistance = (\n  targetStart: number,\n  targetEnd: number,\n  scrollStart: number,\n  scrollEnd: number,\n  scrollPaddingStart: number,\n  scrollPaddingEnd: number,\n) => {\n  if (targetStart < scrollStart && targetEnd > scrollEnd) {\n    return 0;\n  }\n\n  if (targetStart < scrollStart) {\n    return -(scrollStart - targetStart + scrollPaddingStart);\n  }\n\n  if (targetEnd > scrollEnd) {\n    return targetEnd - targetStart > scrollEnd - scrollStart\n      ? targetStart + scrollPaddingStart - scrollStart\n      : targetEnd - scrollEnd + scrollPaddingEnd;\n  }\n  return 0;\n};\n\nconst scrollRectIntoView = (root: HTMLElement, targetRect: Rect) => {\n  const document = root.ownerDocument;\n\n  let rect = targetRect;\n\n  let current: Element | null = root;\n  while (current) {\n    const isDocumentBody: boolean = current === document.body;\n    const bounding = isDocumentBody\n      ? {\n          top: 0,\n          right:\n            window.visualViewport?.width ??\n            document.documentElement.clientWidth,\n          bottom:\n            window.visualViewport?.height ??\n            document.documentElement.clientHeight,\n          left: 0,\n        }\n      : getElementRect(current);\n\n    const style = getComputedStyle(current);\n    const scrollDistanceX = getScrollDistance(\n      rect.left,\n      rect.right,\n      bounding.left,\n      bounding.right,\n      paddingValueToInt(style.scrollPaddingLeft),\n      paddingValueToInt(style.scrollPaddingRight),\n    );\n    const scrollDistanceY = getScrollDistance(\n      rect.top,\n      rect.bottom,\n      bounding.top,\n      bounding.bottom,\n      paddingValueToInt(style.scrollPaddingTop),\n      paddingValueToInt(style.scrollPaddingBottom),\n    );\n    if (scrollDistanceX || scrollDistanceY) {\n      if (isDocumentBody) {\n        document.defaultView?.scrollBy(scrollDistanceX, scrollDistanceY);\n      } else {\n        const { scrollLeft, scrollTop } = current;\n        if (scrollDistanceY) {\n          current.scrollTop += scrollDistanceY;\n        }\n        if (scrollDistanceX) {\n          current.scrollLeft += scrollDistanceX;\n        }\n        const scrolledLeft = current.scrollLeft - scrollLeft;\n        const scrolledTop = current.scrollTop - scrollTop;\n        rect = {\n          left: rect.left - scrolledLeft,\n          top: rect.top - scrolledTop,\n          right: rect.right - scrolledLeft,\n          bottom: rect.bottom - scrolledTop,\n        };\n      }\n    }\n\n    current =\n      isDocumentBody || style.position === 'fixed'\n        ? null\n        : getParentElement(current);\n  }\n};\n\nexport default scrollRectIntoView;\n", "import { Registry } from 'parchment';\n\nconst MAX_REGISTER_ITERATIONS = 100;\nconst CORE_FORMATS = ['block', 'break', 'cursor', 'inline', 'scroll', 'text'];\n\nconst createRegistryWithFormats = (\n  formats: string[],\n  sourceRegistry: Registry,\n  debug: { error: (errorMessage: string) => void },\n) => {\n  const registry = new Registry();\n  CORE_FORMATS.forEach((name) => {\n    const coreBlot = sourceRegistry.query(name);\n    if (coreBlot) registry.register(coreBlot);\n  });\n\n  formats.forEach((name) => {\n    let format = sourceRegistry.query(name);\n    if (!format) {\n      debug.error(\n        `Cannot register \"${name}\" specified in \"formats\" config. Are you sure it was registered?`,\n      );\n    }\n    let iterations = 0;\n    while (format) {\n      registry.register(format);\n      format = 'blotName' in format ? format.requiredContainer ?? null : null;\n\n      iterations += 1;\n      if (iterations > MAX_REGISTER_ITERATIONS) {\n        debug.error(\n          `Cycle detected in registering blot requiredContainer: \"${name}\"`,\n        );\n        break;\n      }\n    }\n  });\n\n  return registry;\n};\n\nexport default createRegistryWithFormats;\n", "import { ContainerBlot } from 'parchment';\n\nclass Container extends ContainerBlot {}\n\nexport default Container;\n", "import { ContainerBlot, LeafBlot, Scope, ScrollBlot } from 'parchment';\nimport type { Blot, Parent, EmbedBlot, ParentBlot, Registry } from 'parchment';\nimport Delta, { AttributeMap, Op } from 'quill-delta';\nimport Emitter from '../core/emitter.js';\nimport type { EmitterSource } from '../core/emitter.js';\nimport Block, { BlockEmbed, bubbleFormats } from './block.js';\nimport Break from './break.js';\nimport Container from './container.js';\n\ntype RenderBlock =\n  | {\n      type: 'blockEmbed';\n      attributes: AttributeMap;\n      key: string;\n      value: unknown;\n    }\n  | { type: 'block'; attributes: AttributeMap; delta: Delta };\n\nfunction isLine(blot: unknown): blot is Block | BlockEmbed {\n  return blot instanceof Block || blot instanceof BlockEmbed;\n}\n\ninterface UpdatableEmbed {\n  updateContent(change: unknown): void;\n}\n\nfunction isUpdatable(blot: Blot): blot is Blot & UpdatableEmbed {\n  return typeof (blot as unknown as any).updateContent === 'function';\n}\n\nclass Scroll extends ScrollBlot {\n  static blotName = 'scroll';\n  static className = 'ql-editor';\n  static tagName = 'DIV';\n  static defaultChild = Block;\n  static allowedChildren = [Block, BlockEmbed, Container];\n\n  emitter: Emitter;\n  batch: false | MutationRecord[];\n\n  constructor(\n    registry: Registry,\n    domNode: HTMLDivElement,\n    { emitter }: { emitter: Emitter },\n  ) {\n    super(registry, domNode);\n    this.emitter = emitter;\n    this.batch = false;\n    this.optimize();\n    this.enable();\n    this.domNode.addEventListener('dragstart', (e) => this.handleDragStart(e));\n  }\n\n  batchStart() {\n    if (!Array.isArray(this.batch)) {\n      this.batch = [];\n    }\n  }\n\n  batchEnd() {\n    if (!this.batch) return;\n    const mutations = this.batch;\n    this.batch = false;\n    this.update(mutations);\n  }\n\n  emitMount(blot: Blot) {\n    this.emitter.emit(Emitter.events.SCROLL_BLOT_MOUNT, blot);\n  }\n\n  emitUnmount(blot: Blot) {\n    this.emitter.emit(Emitter.events.SCROLL_BLOT_UNMOUNT, blot);\n  }\n\n  emitEmbedUpdate(blot: Blot, change: unknown) {\n    this.emitter.emit(Emitter.events.SCROLL_EMBED_UPDATE, blot, change);\n  }\n\n  deleteAt(index: number, length: number) {\n    const [first, offset] = this.line(index);\n    const [last] = this.line(index + length);\n    super.deleteAt(index, length);\n    if (last != null && first !== last && offset > 0) {\n      if (first instanceof BlockEmbed || last instanceof BlockEmbed) {\n        this.optimize();\n        return;\n      }\n      const ref =\n        last.children.head instanceof Break ? null : last.children.head;\n      // @ts-expect-error\n      first.moveChildren(last, ref);\n      // @ts-expect-error\n      first.remove();\n    }\n    this.optimize();\n  }\n\n  enable(enabled = true) {\n    this.domNode.setAttribute('contenteditable', enabled ? 'true' : 'false');\n  }\n\n  formatAt(index: number, length: number, format: string, value: unknown) {\n    super.formatAt(index, length, format, value);\n    this.optimize();\n  }\n\n  insertAt(index: number, value: string, def?: unknown) {\n    if (index >= this.length()) {\n      if (def == null || this.scroll.query(value, Scope.BLOCK) == null) {\n        const blot = this.scroll.create(this.statics.defaultChild.blotName);\n        this.appendChild(blot);\n        if (def == null && value.endsWith('\\n')) {\n          blot.insertAt(0, value.slice(0, -1), def);\n        } else {\n          blot.insertAt(0, value, def);\n        }\n      } else {\n        const embed = this.scroll.create(value, def);\n        this.appendChild(embed);\n      }\n    } else {\n      super.insertAt(index, value, def);\n    }\n    this.optimize();\n  }\n\n  insertBefore(blot: Blot, ref?: Blot | null) {\n    if (blot.statics.scope === Scope.INLINE_BLOT) {\n      const wrapper = this.scroll.create(\n        this.statics.defaultChild.blotName,\n      ) as Parent;\n      wrapper.appendChild(blot);\n      super.insertBefore(wrapper, ref);\n    } else {\n      super.insertBefore(blot, ref);\n    }\n  }\n\n  insertContents(index: number, delta: Delta) {\n    const renderBlocks = this.deltaToRenderBlocks(\n      delta.concat(new Delta().insert('\\n')),\n    );\n    const last = renderBlocks.pop();\n    if (last == null) return;\n\n    this.batchStart();\n\n    const first = renderBlocks.shift();\n    if (first) {\n      const shouldInsertNewlineChar =\n        first.type === 'block' &&\n        (first.delta.length() === 0 ||\n          (!this.descendant(BlockEmbed, index)[0] && index < this.length()));\n      const delta =\n        first.type === 'block'\n          ? first.delta\n          : new Delta().insert({ [first.key]: first.value });\n      insertInlineContents(this, index, delta);\n      const newlineCharLength = first.type === 'block' ? 1 : 0;\n      const lineEndIndex = index + delta.length() + newlineCharLength;\n      if (shouldInsertNewlineChar) {\n        this.insertAt(lineEndIndex - 1, '\\n');\n      }\n\n      const formats = bubbleFormats(this.line(index)[0]);\n      const attributes = AttributeMap.diff(formats, first.attributes) || {};\n      Object.keys(attributes).forEach((name) => {\n        this.formatAt(lineEndIndex - 1, 1, name, attributes[name]);\n      });\n\n      index = lineEndIndex;\n    }\n\n    let [refBlot, refBlotOffset] = this.children.find(index);\n    if (renderBlocks.length) {\n      if (refBlot) {\n        refBlot = refBlot.split(refBlotOffset);\n        refBlotOffset = 0;\n      }\n\n      renderBlocks.forEach((renderBlock) => {\n        if (renderBlock.type === 'block') {\n          const block = this.createBlock(\n            renderBlock.attributes,\n            refBlot || undefined,\n          );\n          insertInlineContents(block, 0, renderBlock.delta);\n        } else {\n          const blockEmbed = this.create(\n            renderBlock.key,\n            renderBlock.value,\n          ) as EmbedBlot;\n          this.insertBefore(blockEmbed, refBlot || undefined);\n          Object.keys(renderBlock.attributes).forEach((name) => {\n            blockEmbed.format(name, renderBlock.attributes[name]);\n          });\n        }\n      });\n    }\n\n    if (last.type === 'block' && last.delta.length()) {\n      const offset = refBlot\n        ? refBlot.offset(refBlot.scroll) + refBlotOffset\n        : this.length();\n      insertInlineContents(this, offset, last.delta);\n    }\n\n    this.batchEnd();\n    this.optimize();\n  }\n\n  isEnabled() {\n    return this.domNode.getAttribute('contenteditable') === 'true';\n  }\n\n  leaf(index: number): [LeafBlot | null, number] {\n    const last = this.path(index).pop();\n    if (!last) {\n      return [null, -1];\n    }\n\n    const [blot, offset] = last;\n    return blot instanceof LeafBlot ? [blot, offset] : [null, -1];\n  }\n\n  line(index: number): [Block | BlockEmbed | null, number] {\n    if (index === this.length()) {\n      return this.line(index - 1);\n    }\n    // @ts-expect-error TODO: make descendant() generic\n    return this.descendant(isLine, index);\n  }\n\n  lines(index = 0, length = Number.MAX_VALUE): (Block | BlockEmbed)[] {\n    const getLines = (\n      blot: ParentBlot,\n      blotIndex: number,\n      blotLength: number,\n    ) => {\n      let lines: (Block | BlockEmbed)[] = [];\n      let lengthLeft = blotLength;\n      blot.children.forEachAt(\n        blotIndex,\n        blotLength,\n        (child, childIndex, childLength) => {\n          if (isLine(child)) {\n            lines.push(child);\n          } else if (child instanceof ContainerBlot) {\n            lines = lines.concat(getLines(child, childIndex, lengthLeft));\n          }\n          lengthLeft -= childLength;\n        },\n      );\n      return lines;\n    };\n    return getLines(this, index, length);\n  }\n\n  optimize(context?: { [key: string]: any }): void;\n  optimize(\n    mutations?: MutationRecord[],\n    context?: { [key: string]: any },\n  ): void;\n  optimize(mutations = [], context = {}) {\n    if (this.batch) return;\n    super.optimize(mutations, context);\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_OPTIMIZE, mutations, context);\n    }\n  }\n\n  path(index: number) {\n    return super.path(index).slice(1); // Exclude self\n  }\n\n  remove() {\n    // Never remove self\n  }\n\n  update(source?: EmitterSource): void;\n  update(mutations?: MutationRecord[]): void;\n  update(mutations?: MutationRecord[] | EmitterSource): void {\n    if (this.batch) {\n      if (Array.isArray(mutations)) {\n        this.batch = this.batch.concat(mutations);\n      }\n      return;\n    }\n    let source: EmitterSource = Emitter.sources.USER;\n    if (typeof mutations === 'string') {\n      source = mutations;\n    }\n    if (!Array.isArray(mutations)) {\n      mutations = this.observer.takeRecords();\n    }\n    mutations = mutations.filter(({ target }) => {\n      const blot = this.find(target, true);\n      return blot && !isUpdatable(blot);\n    });\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_BEFORE_UPDATE, source, mutations);\n    }\n    super.update(mutations.concat([])); // pass copy\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_UPDATE, source, mutations);\n    }\n  }\n\n  updateEmbedAt(index: number, key: string, change: unknown) {\n    // Currently it only supports top-level embeds (BlockEmbed).\n    // We can update `ParentBlot` in parchment to support inline embeds.\n    const [blot] = this.descendant((b: Blot) => b instanceof BlockEmbed, index);\n    if (blot && blot.statics.blotName === key && isUpdatable(blot)) {\n      blot.updateContent(change);\n    }\n  }\n\n  protected handleDragStart(event: DragEvent) {\n    event.preventDefault();\n  }\n\n  private deltaToRenderBlocks(delta: Delta) {\n    const renderBlocks: RenderBlock[] = [];\n\n    let currentBlockDelta = new Delta();\n    delta.forEach((op) => {\n      const insert = op?.insert;\n      if (!insert) return;\n      if (typeof insert === 'string') {\n        const splitted = insert.split('\\n');\n        splitted.slice(0, -1).forEach((text) => {\n          currentBlockDelta.insert(text, op.attributes);\n          renderBlocks.push({\n            type: 'block',\n            delta: currentBlockDelta,\n            attributes: op.attributes ?? {},\n          });\n          currentBlockDelta = new Delta();\n        });\n        const last = splitted[splitted.length - 1];\n        if (last) {\n          currentBlockDelta.insert(last, op.attributes);\n        }\n      } else {\n        const key = Object.keys(insert)[0];\n        if (!key) return;\n        if (this.query(key, Scope.INLINE)) {\n          currentBlockDelta.push(op);\n        } else {\n          if (currentBlockDelta.length()) {\n            renderBlocks.push({\n              type: 'block',\n              delta: currentBlockDelta,\n              attributes: {},\n            });\n          }\n          currentBlockDelta = new Delta();\n          renderBlocks.push({\n            type: 'blockEmbed',\n            key,\n            value: insert[key],\n            attributes: op.attributes ?? {},\n          });\n        }\n      }\n    });\n\n    if (currentBlockDelta.length()) {\n      renderBlocks.push({\n        type: 'block',\n        delta: currentBlockDelta,\n        attributes: {},\n      });\n    }\n\n    return renderBlocks;\n  }\n\n  private createBlock(attributes: AttributeMap, refBlot?: Blot) {\n    let blotName: string | undefined;\n    const formats: AttributeMap = {};\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      const isBlockBlot = this.query(key, Scope.BLOCK & Scope.BLOT) != null;\n      if (isBlockBlot) {\n        blotName = key;\n      } else {\n        formats[key] = value;\n      }\n    });\n\n    const block = this.create(\n      blotName || this.statics.defaultChild.blotName,\n      blotName ? attributes[blotName] : undefined,\n    ) as ParentBlot;\n\n    this.insertBefore(block, refBlot || undefined);\n\n    const length = block.length();\n    Object.entries(formats).forEach(([key, value]) => {\n      block.formatAt(0, length, key, value);\n    });\n\n    return block;\n  }\n}\n\nfunction insertInlineContents(\n  parent: ParentBlot,\n  index: number,\n  inlineContents: Delta,\n) {\n  inlineContents.reduce((index, op) => {\n    const length = Op.length(op);\n    let attributes = op.attributes || {};\n    if (op.insert != null) {\n      if (typeof op.insert === 'string') {\n        const text = op.insert;\n        parent.insertAt(index, text);\n        const [leaf] = parent.descendant(LeafBlot, index);\n        const formats = bubbleFormats(leaf);\n        attributes = AttributeMap.diff(formats, attributes) || {};\n      } else if (typeof op.insert === 'object') {\n        const key = Object.keys(op.insert)[0]; // There should only be one key\n        if (key == null) return index;\n        parent.insertAt(index, key, op.insert[key]);\n        const isInlineEmbed = parent.scroll.query(key, Scope.INLINE) != null;\n        if (isInlineEmbed) {\n          const [leaf] = parent.descendant(LeafBlot, index);\n          const formats = bubbleFormats(leaf);\n          attributes = AttributeMap.diff(formats, attributes) || {};\n        }\n      }\n    }\n    Object.keys(attributes).forEach((key) => {\n      parent.formatAt(index, length, key, attributes[key]);\n    });\n    return index + length;\n  }, index);\n}\n\nexport default Scroll;\n", "import type { ScrollBlot } from 'parchment';\nimport {\n  Attributor,\n  BlockBlot,\n  ClassAttributor,\n  EmbedBlot,\n  Scope,\n  StyleAttributor,\n} from 'parchment';\nimport Delta from 'quill-delta';\nimport { BlockEmbed } from '../blots/block.js';\nimport type { EmitterSource } from '../core/emitter.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type { Range } from '../core/selection.js';\nimport { AlignAttribute, AlignStyle } from '../formats/align.js';\nimport { BackgroundStyle } from '../formats/background.js';\nimport CodeBlock from '../formats/code.js';\nimport { ColorStyle } from '../formats/color.js';\nimport { DirectionAttribute, DirectionStyle } from '../formats/direction.js';\nimport { FontStyle } from '../formats/font.js';\nimport { SizeStyle } from '../formats/size.js';\nimport { deleteRange } from './keyboard.js';\nimport normalizeExternalHTML from './normalizeExternalHTML/index.js';\n\nconst debug = logger('quill:clipboard');\n\ntype Selector = string | Node['TEXT_NODE'] | Node['ELEMENT_NODE'];\ntype Matcher = (node: Node, delta: Delta, scroll: ScrollBlot) => Delta;\n\nconst CLIPBOARD_CONFIG: [Selector, Matcher][] = [\n  [Node.TEXT_NODE, matchText],\n  [Node.TEXT_NODE, matchNewline],\n  ['br', matchBreak],\n  [Node.ELEMENT_NODE, matchNewline],\n  [Node.ELEMENT_NODE, matchBlot],\n  [Node.ELEMENT_NODE, matchAttributor],\n  [Node.ELEMENT_NODE, matchStyles],\n  ['li', matchIndent],\n  ['ol, ul', matchList],\n  ['pre', matchCodeBlock],\n  ['tr', matchTable],\n  ['b', createMatchAlias('bold')],\n  ['i', createMatchAlias('italic')],\n  ['strike', createMatchAlias('strike')],\n  ['style', matchIgnore],\n];\n\nconst ATTRIBUTE_ATTRIBUTORS = [AlignAttribute, DirectionAttribute].reduce(\n  (memo: Record<string, Attributor>, attr) => {\n    memo[attr.keyName] = attr;\n    return memo;\n  },\n  {},\n);\n\nconst STYLE_ATTRIBUTORS = [\n  AlignStyle,\n  BackgroundStyle,\n  ColorStyle,\n  DirectionStyle,\n  FontStyle,\n  SizeStyle,\n].reduce((memo: Record<string, Attributor>, attr) => {\n  memo[attr.keyName] = attr;\n  return memo;\n}, {});\n\ninterface ClipboardOptions {\n  matchers: [Selector, Matcher][];\n}\n\nclass Clipboard extends Module<ClipboardOptions> {\n  static DEFAULTS: ClipboardOptions = {\n    matchers: [],\n  };\n\n  matchers: [Selector, Matcher][];\n\n  constructor(quill: Quill, options: Partial<ClipboardOptions>) {\n    super(quill, options);\n    this.quill.root.addEventListener('copy', (e) =>\n      this.onCaptureCopy(e, false),\n    );\n    this.quill.root.addEventListener('cut', (e) => this.onCaptureCopy(e, true));\n    this.quill.root.addEventListener('paste', this.onCapturePaste.bind(this));\n    this.matchers = [];\n    CLIPBOARD_CONFIG.concat(this.options.matchers ?? []).forEach(\n      ([selector, matcher]) => {\n        this.addMatcher(selector, matcher);\n      },\n    );\n  }\n\n  addMatcher(selector: Selector, matcher: Matcher) {\n    this.matchers.push([selector, matcher]);\n  }\n\n  convert(\n    { html, text }: { html?: string; text?: string },\n    formats: Record<string, unknown> = {},\n  ) {\n    if (formats[CodeBlock.blotName]) {\n      return new Delta().insert(text || '', {\n        [CodeBlock.blotName]: formats[CodeBlock.blotName],\n      });\n    }\n    if (!html) {\n      return new Delta().insert(text || '', formats);\n    }\n    const delta = this.convertHTML(html);\n    // Remove trailing newline\n    if (\n      deltaEndsWith(delta, '\\n') &&\n      (delta.ops[delta.ops.length - 1].attributes == null || formats.table)\n    ) {\n      return delta.compose(new Delta().retain(delta.length() - 1).delete(1));\n    }\n    return delta;\n  }\n\n  protected normalizeHTML(doc: Document) {\n    normalizeExternalHTML(doc);\n  }\n\n  protected convertHTML(html: string) {\n    const doc = new DOMParser().parseFromString(html, 'text/html');\n    this.normalizeHTML(doc);\n    const container = doc.body;\n    const nodeMatches = new WeakMap();\n    const [elementMatchers, textMatchers] = this.prepareMatching(\n      container,\n      nodeMatches,\n    );\n    return traverse(\n      this.quill.scroll,\n      container,\n      elementMatchers,\n      textMatchers,\n      nodeMatches,\n    );\n  }\n\n  dangerouslyPasteHTML(html: string, source?: EmitterSource): void;\n  dangerouslyPasteHTML(\n    index: number,\n    html: string,\n    source?: EmitterSource,\n  ): void;\n  dangerouslyPasteHTML(\n    index: number | string,\n    html?: string,\n    source: EmitterSource = Quill.sources.API,\n  ) {\n    if (typeof index === 'string') {\n      const delta = this.convert({ html: index, text: '' });\n      // @ts-expect-error\n      this.quill.setContents(delta, html);\n      this.quill.setSelection(0, Quill.sources.SILENT);\n    } else {\n      const paste = this.convert({ html, text: '' });\n      this.quill.updateContents(\n        new Delta().retain(index).concat(paste),\n        source,\n      );\n      this.quill.setSelection(index + paste.length(), Quill.sources.SILENT);\n    }\n  }\n\n  onCaptureCopy(e: ClipboardEvent, isCut = false) {\n    if (e.defaultPrevented) return;\n    e.preventDefault();\n    const [range] = this.quill.selection.getRange();\n    if (range == null) return;\n    const { html, text } = this.onCopy(range, isCut);\n    e.clipboardData?.setData('text/plain', text);\n    e.clipboardData?.setData('text/html', html);\n    if (isCut) {\n      deleteRange({ range, quill: this.quill });\n    }\n  }\n\n  /*\n   * https://www.iana.org/assignments/media-types/text/uri-list\n   */\n  private normalizeURIList(urlList: string) {\n    return (\n      urlList\n        .split(/\\r?\\n/)\n        // Ignore all comments\n        .filter((url) => url[0] !== '#')\n        .join('\\n')\n    );\n  }\n\n  onCapturePaste(e: ClipboardEvent) {\n    if (e.defaultPrevented || !this.quill.isEnabled()) return;\n    e.preventDefault();\n    const range = this.quill.getSelection(true);\n    if (range == null) return;\n    const html = e.clipboardData?.getData('text/html');\n    let text = e.clipboardData?.getData('text/plain');\n    if (!html && !text) {\n      const urlList = e.clipboardData?.getData('text/uri-list');\n      if (urlList) {\n        text = this.normalizeURIList(urlList);\n      }\n    }\n    const files = Array.from(e.clipboardData?.files || []);\n    if (!html && files.length > 0) {\n      this.quill.uploader.upload(range, files);\n      return;\n    }\n    if (html && files.length > 0) {\n      const doc = new DOMParser().parseFromString(html, 'text/html');\n      if (\n        doc.body.childElementCount === 1 &&\n        doc.body.firstElementChild?.tagName === 'IMG'\n      ) {\n        this.quill.uploader.upload(range, files);\n        return;\n      }\n    }\n    this.onPaste(range, { html, text });\n  }\n\n  onCopy(range: Range, isCut: boolean): { html: string; text: string };\n  onCopy(range: Range) {\n    const text = this.quill.getText(range);\n    const html = this.quill.getSemanticHTML(range);\n    return { html, text };\n  }\n\n  onPaste(range: Range, { text, html }: { text?: string; html?: string }) {\n    const formats = this.quill.getFormat(range.index);\n    const pastedDelta = this.convert({ text, html }, formats);\n    debug.log('onPaste', pastedDelta, { text, html });\n    const delta = new Delta()\n      .retain(range.index)\n      .delete(range.length)\n      .concat(pastedDelta);\n    this.quill.updateContents(delta, Quill.sources.USER);\n    // range.length contributes to delta.length()\n    this.quill.setSelection(\n      delta.length() - range.length,\n      Quill.sources.SILENT,\n    );\n    this.quill.scrollSelectionIntoView();\n  }\n\n  prepareMatching(container: Element, nodeMatches: WeakMap<Node, Matcher[]>) {\n    const elementMatchers: Matcher[] = [];\n    const textMatchers: Matcher[] = [];\n    this.matchers.forEach((pair) => {\n      const [selector, matcher] = pair;\n      switch (selector) {\n        case Node.TEXT_NODE:\n          textMatchers.push(matcher);\n          break;\n        case Node.ELEMENT_NODE:\n          elementMatchers.push(matcher);\n          break;\n        default:\n          Array.from(container.querySelectorAll(selector)).forEach((node) => {\n            if (nodeMatches.has(node)) {\n              const matches = nodeMatches.get(node);\n              matches?.push(matcher);\n            } else {\n              nodeMatches.set(node, [matcher]);\n            }\n          });\n          break;\n      }\n    });\n    return [elementMatchers, textMatchers];\n  }\n}\n\nfunction applyFormat(\n  delta: Delta,\n  format: string,\n  value: unknown,\n  scroll: ScrollBlot,\n): Delta {\n  if (!scroll.query(format)) {\n    return delta;\n  }\n\n  return delta.reduce((newDelta, op) => {\n    if (!op.insert) return newDelta;\n    if (op.attributes && op.attributes[format]) {\n      return newDelta.push(op);\n    }\n    const formats = value ? { [format]: value } : {};\n    return newDelta.insert(op.insert, { ...formats, ...op.attributes });\n  }, new Delta());\n}\n\nfunction deltaEndsWith(delta: Delta, text: string) {\n  let endText = '';\n  for (\n    let i = delta.ops.length - 1;\n    i >= 0 && endText.length < text.length;\n    --i // eslint-disable-line no-plusplus\n  ) {\n    const op = delta.ops[i];\n    if (typeof op.insert !== 'string') break;\n    endText = op.insert + endText;\n  }\n  return endText.slice(-1 * text.length) === text;\n}\n\nfunction isLine(node: Node, scroll: ScrollBlot) {\n  if (!(node instanceof Element)) return false;\n  const match = scroll.query(node);\n  // @ts-expect-error\n  if (match && match.prototype instanceof EmbedBlot) return false;\n\n  return [\n    'address',\n    'article',\n    'blockquote',\n    'canvas',\n    'dd',\n    'div',\n    'dl',\n    'dt',\n    'fieldset',\n    'figcaption',\n    'figure',\n    'footer',\n    'form',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'header',\n    'iframe',\n    'li',\n    'main',\n    'nav',\n    'ol',\n    'output',\n    'p',\n    'pre',\n    'section',\n    'table',\n    'td',\n    'tr',\n    'ul',\n    'video',\n  ].includes(node.tagName.toLowerCase());\n}\n\nfunction isBetweenInlineElements(node: HTMLElement, scroll: ScrollBlot) {\n  return (\n    node.previousElementSibling &&\n    node.nextElementSibling &&\n    !isLine(node.previousElementSibling, scroll) &&\n    !isLine(node.nextElementSibling, scroll)\n  );\n}\n\nconst preNodes = new WeakMap();\nfunction isPre(node: Node | null) {\n  if (node == null) return false;\n  if (!preNodes.has(node)) {\n    // @ts-expect-error\n    if (node.tagName === 'PRE') {\n      preNodes.set(node, true);\n    } else {\n      preNodes.set(node, isPre(node.parentNode));\n    }\n  }\n  return preNodes.get(node);\n}\n\nfunction traverse(\n  scroll: ScrollBlot,\n  node: ChildNode,\n  elementMatchers: Matcher[],\n  textMatchers: Matcher[],\n  nodeMatches: WeakMap<Node, Matcher[]>,\n): Delta {\n  // Post-order\n  if (node.nodeType === node.TEXT_NODE) {\n    return textMatchers.reduce((delta: Delta, matcher) => {\n      return matcher(node, delta, scroll);\n    }, new Delta());\n  }\n  if (node.nodeType === node.ELEMENT_NODE) {\n    return Array.from(node.childNodes || []).reduce((delta, childNode) => {\n      let childrenDelta = traverse(\n        scroll,\n        childNode,\n        elementMatchers,\n        textMatchers,\n        nodeMatches,\n      );\n      if (childNode.nodeType === node.ELEMENT_NODE) {\n        childrenDelta = elementMatchers.reduce((reducedDelta, matcher) => {\n          return matcher(childNode as HTMLElement, reducedDelta, scroll);\n        }, childrenDelta);\n        childrenDelta = (nodeMatches.get(childNode) || []).reduce(\n          (reducedDelta, matcher) => {\n            return matcher(childNode, reducedDelta, scroll);\n          },\n          childrenDelta,\n        );\n      }\n      return delta.concat(childrenDelta);\n    }, new Delta());\n  }\n  return new Delta();\n}\n\nfunction createMatchAlias(format: string) {\n  return (_node: Element, delta: Delta, scroll: ScrollBlot) => {\n    return applyFormat(delta, format, true, scroll);\n  };\n}\n\nfunction matchAttributor(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  const attributes = Attributor.keys(node);\n  const classes = ClassAttributor.keys(node);\n  const styles = StyleAttributor.keys(node);\n  const formats: Record<string, string | undefined> = {};\n  attributes\n    .concat(classes)\n    .concat(styles)\n    .forEach((name) => {\n      let attr = scroll.query(name, Scope.ATTRIBUTE) as Attributor;\n      if (attr != null) {\n        formats[attr.attrName] = attr.value(node);\n        if (formats[attr.attrName]) return;\n      }\n      attr = ATTRIBUTE_ATTRIBUTORS[name];\n      if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n        formats[attr.attrName] = attr.value(node) || undefined;\n      }\n      attr = STYLE_ATTRIBUTORS[name];\n      if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n        attr = STYLE_ATTRIBUTORS[name];\n        formats[attr.attrName] = attr.value(node) || undefined;\n      }\n    });\n\n  return Object.entries(formats).reduce(\n    (newDelta, [name, value]) => applyFormat(newDelta, name, value, scroll),\n    delta,\n  );\n}\n\nfunction matchBlot(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query(node);\n  if (match == null) return delta;\n  // @ts-expect-error\n  if (match.prototype instanceof EmbedBlot) {\n    const embed = {};\n    // @ts-expect-error\n    const value = match.value(node);\n    if (value != null) {\n      // @ts-expect-error\n      embed[match.blotName] = value;\n      // @ts-expect-error\n      return new Delta().insert(embed, match.formats(node, scroll));\n    }\n  } else {\n    // @ts-expect-error\n    if (match.prototype instanceof BlockBlot && !deltaEndsWith(delta, '\\n')) {\n      delta.insert('\\n');\n    }\n    if (\n      'blotName' in match &&\n      'formats' in match &&\n      typeof match.formats === 'function'\n    ) {\n      return applyFormat(\n        delta,\n        match.blotName,\n        match.formats(node, scroll),\n        scroll,\n      );\n    }\n  }\n  return delta;\n}\n\nfunction matchBreak(node: Node, delta: Delta) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    delta.insert('\\n');\n  }\n  return delta;\n}\n\nfunction matchCodeBlock(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query('code-block');\n  const language =\n    match && 'formats' in match && typeof match.formats === 'function'\n      ? match.formats(node, scroll)\n      : true;\n  return applyFormat(delta, 'code-block', language, scroll);\n}\n\nfunction matchIgnore() {\n  return new Delta();\n}\n\nfunction matchIndent(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query(node);\n  if (\n    match == null ||\n    // @ts-expect-error\n    match.blotName !== 'list' ||\n    !deltaEndsWith(delta, '\\n')\n  ) {\n    return delta;\n  }\n  let indent = -1;\n  let parent = node.parentNode;\n  while (parent != null) {\n    // @ts-expect-error\n    if (['OL', 'UL'].includes(parent.tagName)) {\n      indent += 1;\n    }\n    parent = parent.parentNode;\n  }\n  if (indent <= 0) return delta;\n  return delta.reduce((composed, op) => {\n    if (!op.insert) return composed;\n    if (op.attributes && typeof op.attributes.indent === 'number') {\n      return composed.push(op);\n    }\n    return composed.insert(op.insert, { indent, ...(op.attributes || {}) });\n  }, new Delta());\n}\n\nfunction matchList(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const element = node as Element;\n  let list = element.tagName === 'OL' ? 'ordered' : 'bullet';\n\n  const checkedAttr = element.getAttribute('data-checked');\n  if (checkedAttr) {\n    list = checkedAttr === 'true' ? 'checked' : 'unchecked';\n  }\n\n  return applyFormat(delta, 'list', list, scroll);\n}\n\nfunction matchNewline(node: Node, delta: Delta, scroll: ScrollBlot) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    if (\n      isLine(node, scroll) &&\n      (node.childNodes.length > 0 || node instanceof HTMLParagraphElement)\n    ) {\n      return delta.insert('\\n');\n    }\n    if (delta.length() > 0 && node.nextSibling) {\n      let nextSibling: Node | null = node.nextSibling;\n      while (nextSibling != null) {\n        if (isLine(nextSibling, scroll)) {\n          return delta.insert('\\n');\n        }\n        const match = scroll.query(nextSibling);\n        // @ts-expect-error\n        if (match && match.prototype instanceof BlockEmbed) {\n          return delta.insert('\\n');\n        }\n        nextSibling = nextSibling.firstChild;\n      }\n    }\n  }\n  return delta;\n}\n\nfunction matchStyles(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  const formats: Record<string, unknown> = {};\n  const style: Partial<CSSStyleDeclaration> = node.style || {};\n  if (style.fontStyle === 'italic') {\n    formats.italic = true;\n  }\n  if (style.textDecoration === 'underline') {\n    formats.underline = true;\n  }\n  if (style.textDecoration === 'line-through') {\n    formats.strike = true;\n  }\n  if (\n    style.fontWeight?.startsWith('bold') ||\n    // @ts-expect-error Fix me later\n    parseInt(style.fontWeight, 10) >= 700\n  ) {\n    formats.bold = true;\n  }\n  delta = Object.entries(formats).reduce(\n    (newDelta, [name, value]) => applyFormat(newDelta, name, value, scroll),\n    delta,\n  );\n  // @ts-expect-error\n  if (parseFloat(style.textIndent || 0) > 0) {\n    // Could be 0.5in\n    return new Delta().insert('\\t').concat(delta);\n  }\n  return delta;\n}\n\nfunction matchTable(\n  node: HTMLTableRowElement,\n  delta: Delta,\n  scroll: ScrollBlot,\n) {\n  const table =\n    node.parentElement?.tagName === 'TABLE'\n      ? node.parentElement\n      : node.parentElement?.parentElement;\n  if (table != null) {\n    const rows = Array.from(table.querySelectorAll('tr'));\n    const row = rows.indexOf(node) + 1;\n    return applyFormat(delta, 'table', row, scroll);\n  }\n  return delta;\n}\n\nfunction matchText(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  // @ts-expect-error\n  let text = node.data;\n  // Word represents empty line with <o:p>&nbsp;</o:p>\n  if (node.parentElement?.tagName === 'O:P') {\n    return delta.insert(text.trim());\n  }\n  if (!isPre(node)) {\n    if (\n      text.trim().length === 0 &&\n      text.includes('\\n') &&\n      !isBetweenInlineElements(node, scroll)\n    ) {\n      return delta;\n    }\n    const replacer = (collapse: unknown, match: string) => {\n      const replaced = match.replace(/[^\\u00a0]/g, ''); // \\u00a0 is nbsp;\n      return replaced.length < 1 && collapse ? ' ' : replaced;\n    };\n    text = text.replace(/\\r\\n/g, ' ').replace(/\\n/g, ' ');\n    text = text.replace(/\\s\\s+/g, replacer.bind(replacer, true)); // collapse whitespace\n    if (\n      (node.previousSibling == null &&\n        node.parentElement != null &&\n        isLine(node.parentElement, scroll)) ||\n      (node.previousSibling instanceof Element &&\n        isLine(node.previousSibling, scroll))\n    ) {\n      text = text.replace(/^\\s+/, replacer.bind(replacer, false));\n    }\n    if (\n      (node.nextSibling == null &&\n        node.parentElement != null &&\n        isLine(node.parentElement, scroll)) ||\n      (node.nextSibling instanceof Element && isLine(node.nextSibling, scroll))\n    ) {\n      text = text.replace(/\\s+$/, replacer.bind(replacer, false));\n    }\n  }\n  return delta.insert(text);\n}\n\nexport {\n  Clipboard as default,\n  matchAttributor,\n  matchBlot,\n  matchNewline,\n  matchText,\n  traverse,\n};\n", "import { Attributor, ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.BLOCK,\n  whitelist: ['right', 'center', 'justify'],\n};\n\nconst AlignAttribute = new Attributor('align', 'align', config);\nconst AlignClass = new ClassAttributor('align', 'ql-align', config);\nconst AlignStyle = new StyleAttributor('align', 'text-align', config);\n\nexport { AlignAttribute, AlignClass, AlignStyle };\n", "import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nclass ColorAttributor extends StyleAttributor {\n  value(domNode: HTMLElement) {\n    let value = super.value(domNode) as string;\n    if (!value.startsWith('rgb(')) return value;\n    value = value.replace(/^[^\\d]+/, '').replace(/[^\\d]+$/, '');\n    const hex = value\n      .split(',')\n      .map((component) => `00${parseInt(component, 10).toString(16)}`.slice(-2))\n      .join('');\n    return `#${hex}`;\n  }\n}\n\nconst ColorClass = new ClassAttributor('color', 'ql-color', {\n  scope: Scope.INLINE,\n});\nconst ColorStyle = new ColorAttributor('color', 'color', {\n  scope: Scope.INLINE,\n});\n\nexport { ColorAttributor, ColorClass, ColorStyle };\n", "import { ClassAttributor, Scope } from 'parchment';\nimport { ColorAttributor } from './color.js';\n\nconst BackgroundClass = new ClassAttributor('background', 'ql-bg', {\n  scope: Scope.INLINE,\n});\nconst BackgroundStyle = new ColorAttributor('background', 'background-color', {\n  scope: Scope.INLINE,\n});\n\nexport { BackgroundClass, BackgroundStyle };\n", "import Block from '../blots/block.js';\nimport Break from '../blots/break.js';\nimport Cursor from '../blots/cursor.js';\nimport Inline from '../blots/inline.js';\nimport TextBlot, { escapeText } from '../blots/text.js';\nimport Container from '../blots/container.js';\nimport Quill from '../core/quill.js';\n\nclass CodeBlockContainer extends Container {\n  static create(value: string) {\n    const domNode = super.create(value) as Element;\n    domNode.setAttribute('spellcheck', 'false');\n    return domNode;\n  }\n\n  code(index: number, length: number) {\n    return (\n      this.children\n        // @ts-expect-error\n        .map((child) => (child.length() <= 1 ? '' : child.domNode.innerText))\n        .join('\\n')\n        .slice(index, index + length)\n    );\n  }\n\n  html(index: number, length: number) {\n    // `\\n`s are needed in order to support empty lines at the beginning and the end.\n    // https://html.spec.whatwg.org/multipage/syntax.html#element-restrictions\n    return `<pre>\\n${escapeText(this.code(index, length))}\\n</pre>`;\n  }\n}\n\nclass CodeBlock extends Block {\n  static TAB = '  ';\n\n  static register() {\n    Quill.register(CodeBlockContainer);\n  }\n}\n\nclass Code extends Inline {}\nCode.blotName = 'code';\nCode.tagName = 'CODE';\n\nCodeBlock.blotName = 'code-block';\nCodeBlock.className = 'ql-code-block';\nCodeBlock.tagName = 'DIV';\nCodeBlockContainer.blotName = 'code-block-container';\nCodeBlockContainer.className = 'ql-code-block-container';\nCodeBlockContainer.tagName = 'DIV';\n\nCodeBlockContainer.allowedChildren = [CodeBlock];\n\nCodeBlock.allowedChildren = [TextBlot, Break, Cursor];\nCodeBlock.requiredContainer = CodeBlockContainer;\n\nexport { Code, CodeBlockContainer, CodeBlock as default };\n", "import { Attributor, ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.BLOCK,\n  whitelist: ['rtl'],\n};\n\nconst DirectionAttribute = new Attributor('direction', 'dir', config);\nconst DirectionClass = new ClassAttributor('direction', 'ql-direction', config);\nconst DirectionStyle = new StyleAttributor('direction', 'direction', config);\n\nexport { DirectionAttribute, DirectionClass, DirectionStyle };\n", "import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.INLINE,\n  whitelist: ['serif', 'monospace'],\n};\n\nconst FontClass = new ClassAttributor('font', 'ql-font', config);\n\nclass FontStyleAttributor extends StyleAttributor {\n  value(node: HTMLElement) {\n    return super.value(node).replace(/[\"']/g, '');\n  }\n}\n\nconst FontStyle = new FontStyleAttributor('font', 'font-family', config);\n\nexport { FontStyle, FontClass };\n", "import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst SizeClass = new ClassAttributor('size', 'ql-size', {\n  scope: Scope.INLINE,\n  whitelist: ['small', 'large', 'huge'],\n});\nconst SizeStyle = new StyleAttributor('size', 'font-size', {\n  scope: Scope.INLINE,\n  whitelist: ['10px', '18px', '32px'],\n});\n\nexport { SizeClass, SizeStyle };\n", "import { cloneDeep, isEqual } from 'lodash-es';\nimport Delta, { AttributeMap } from 'quill-delta';\nimport { EmbedBlot, Scope, TextBlot } from 'parchment';\nimport type { Blot, BlockBlot } from 'parchment';\nimport Quill from '../core/quill.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport type { BlockEmbed } from '../blots/block.js';\nimport type { Range } from '../core/selection.js';\n\nconst debug = logger('quill:keyboard');\n\nconst SHORTKEY = /Mac/i.test(navigator.platform) ? 'metaKey' : 'ctrlKey';\n\nexport interface Context {\n  collapsed: boolean;\n  empty: boolean;\n  offset: number;\n  prefix: string;\n  suffix: string;\n  format: Record<string, unknown>;\n  event: KeyboardEvent;\n  line: BlockEmbed | BlockBlot;\n}\n\ninterface BindingObject\n  extends Partial<Omit<Context, 'prefix' | 'suffix' | 'format'>> {\n  key: number | string | string[];\n  shortKey?: boolean | null;\n  shiftKey?: boolean | null;\n  altKey?: boolean | null;\n  metaKey?: boolean | null;\n  ctrlKey?: boolean | null;\n  prefix?: RegExp;\n  suffix?: RegExp;\n  format?: Record<string, unknown> | string[];\n  handler?: (\n    this: { quill: Quill },\n    range: Range,\n    curContext: Context,\n    // eslint-disable-next-line no-use-before-define\n    binding: NormalizedBinding,\n  ) => boolean | void;\n}\n\ntype Binding = BindingObject | string | number;\n\ninterface NormalizedBinding extends Omit<BindingObject, 'key' | 'shortKey'> {\n  key: string | number;\n}\n\ninterface KeyboardOptions {\n  bindings: Record<string, Binding>;\n}\n\ninterface KeyboardOptions {\n  bindings: Record<string, Binding>;\n}\n\nclass Keyboard extends Module<KeyboardOptions> {\n  static DEFAULTS: KeyboardOptions;\n\n  static match(evt: KeyboardEvent, binding: BindingObject) {\n    if (\n      (['altKey', 'ctrlKey', 'metaKey', 'shiftKey'] as const).some((key) => {\n        return !!binding[key] !== evt[key] && binding[key] !== null;\n      })\n    ) {\n      return false;\n    }\n    return binding.key === evt.key || binding.key === evt.which;\n  }\n\n  bindings: Record<string, NormalizedBinding[]>;\n\n  constructor(quill: Quill, options: Partial<KeyboardOptions>) {\n    super(quill, options);\n    this.bindings = {};\n    // @ts-expect-error Fix me later\n    Object.keys(this.options.bindings).forEach((name) => {\n      // @ts-expect-error Fix me later\n      if (this.options.bindings[name]) {\n        // @ts-expect-error Fix me later\n        this.addBinding(this.options.bindings[name]);\n      }\n    });\n    this.addBinding({ key: 'Enter', shiftKey: null }, this.handleEnter);\n    this.addBinding(\n      { key: 'Enter', metaKey: null, ctrlKey: null, altKey: null },\n      () => {},\n    );\n    if (/Firefox/i.test(navigator.userAgent)) {\n      // Need to handle delete and backspace for Firefox in the general case #1171\n      this.addBinding(\n        { key: 'Backspace' },\n        { collapsed: true },\n        this.handleBackspace,\n      );\n      this.addBinding(\n        { key: 'Delete' },\n        { collapsed: true },\n        this.handleDelete,\n      );\n    } else {\n      this.addBinding(\n        { key: 'Backspace' },\n        { collapsed: true, prefix: /^.?$/ },\n        this.handleBackspace,\n      );\n      this.addBinding(\n        { key: 'Delete' },\n        { collapsed: true, suffix: /^.?$/ },\n        this.handleDelete,\n      );\n    }\n    this.addBinding(\n      { key: 'Backspace' },\n      { collapsed: false },\n      this.handleDeleteRange,\n    );\n    this.addBinding(\n      { key: 'Delete' },\n      { collapsed: false },\n      this.handleDeleteRange,\n    );\n    this.addBinding(\n      {\n        key: 'Backspace',\n        altKey: null,\n        ctrlKey: null,\n        metaKey: null,\n        shiftKey: null,\n      },\n      { collapsed: true, offset: 0 },\n      this.handleBackspace,\n    );\n    this.listen();\n  }\n\n  addBinding(\n    keyBinding: Binding,\n    context:\n      | Required<BindingObject['handler']>\n      | Partial<Omit<BindingObject, 'key' | 'handler'>> = {},\n    handler:\n      | Required<BindingObject['handler']>\n      | Partial<Omit<BindingObject, 'key' | 'handler'>> = {},\n  ) {\n    const binding = normalize(keyBinding);\n    if (binding == null) {\n      debug.warn('Attempted to add invalid keyboard binding', binding);\n      return;\n    }\n    if (typeof context === 'function') {\n      context = { handler: context };\n    }\n    if (typeof handler === 'function') {\n      handler = { handler };\n    }\n    const keys = Array.isArray(binding.key) ? binding.key : [binding.key];\n    keys.forEach((key) => {\n      const singleBinding = {\n        ...binding,\n        key,\n        ...context,\n        ...handler,\n      };\n      this.bindings[singleBinding.key] = this.bindings[singleBinding.key] || [];\n      this.bindings[singleBinding.key].push(singleBinding);\n    });\n  }\n\n  listen() {\n    this.quill.root.addEventListener('keydown', (evt) => {\n      if (evt.defaultPrevented || evt.isComposing) return;\n\n      // evt.isComposing is false when pressing Enter/Backspace when composing in Safari\n      // https://bugs.webkit.org/show_bug.cgi?id=165004\n      const isComposing =\n        evt.keyCode === 229 && (evt.key === 'Enter' || evt.key === 'Backspace');\n      if (isComposing) return;\n\n      const bindings = (this.bindings[evt.key] || []).concat(\n        this.bindings[evt.which] || [],\n      );\n      const matches = bindings.filter((binding) =>\n        Keyboard.match(evt, binding),\n      );\n      if (matches.length === 0) return;\n      // @ts-expect-error\n      const blot = Quill.find(evt.target, true);\n      if (blot && blot.scroll !== this.quill.scroll) return;\n      const range = this.quill.getSelection();\n      if (range == null || !this.quill.hasFocus()) return;\n      const [line, offset] = this.quill.getLine(range.index);\n      const [leafStart, offsetStart] = this.quill.getLeaf(range.index);\n      const [leafEnd, offsetEnd] =\n        range.length === 0\n          ? [leafStart, offsetStart]\n          : this.quill.getLeaf(range.index + range.length);\n      const prefixText =\n        leafStart instanceof TextBlot\n          ? leafStart.value().slice(0, offsetStart)\n          : '';\n      const suffixText =\n        leafEnd instanceof TextBlot ? leafEnd.value().slice(offsetEnd) : '';\n      const curContext = {\n        collapsed: range.length === 0,\n        // @ts-expect-error Fix me later\n        empty: range.length === 0 && line.length() <= 1,\n        format: this.quill.getFormat(range),\n        line,\n        offset,\n        prefix: prefixText,\n        suffix: suffixText,\n        event: evt,\n      };\n      const prevented = matches.some((binding) => {\n        if (\n          binding.collapsed != null &&\n          binding.collapsed !== curContext.collapsed\n        ) {\n          return false;\n        }\n        if (binding.empty != null && binding.empty !== curContext.empty) {\n          return false;\n        }\n        if (binding.offset != null && binding.offset !== curContext.offset) {\n          return false;\n        }\n        if (Array.isArray(binding.format)) {\n          // any format is present\n          if (binding.format.every((name) => curContext.format[name] == null)) {\n            return false;\n          }\n        } else if (typeof binding.format === 'object') {\n          // all formats must match\n          if (\n            !Object.keys(binding.format).every((name) => {\n              // @ts-expect-error Fix me later\n              if (binding.format[name] === true)\n                return curContext.format[name] != null;\n              // @ts-expect-error Fix me later\n              if (binding.format[name] === false)\n                return curContext.format[name] == null;\n              // @ts-expect-error Fix me later\n              return isEqual(binding.format[name], curContext.format[name]);\n            })\n          ) {\n            return false;\n          }\n        }\n        if (binding.prefix != null && !binding.prefix.test(curContext.prefix)) {\n          return false;\n        }\n        if (binding.suffix != null && !binding.suffix.test(curContext.suffix)) {\n          return false;\n        }\n        // @ts-expect-error Fix me later\n        return binding.handler.call(this, range, curContext, binding) !== true;\n      });\n      if (prevented) {\n        evt.preventDefault();\n      }\n    });\n  }\n\n  handleBackspace(range: Range, context: Context) {\n    // Check for astral symbols\n    const length = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]$/.test(context.prefix)\n      ? 2\n      : 1;\n    if (range.index === 0 || this.quill.getLength() <= 1) return;\n    let formats = {};\n    const [line] = this.quill.getLine(range.index);\n    let delta = new Delta().retain(range.index - length).delete(length);\n    if (context.offset === 0) {\n      // Always deleting newline here, length always 1\n      const [prev] = this.quill.getLine(range.index - 1);\n      if (prev) {\n        const isPrevLineEmpty =\n          prev.statics.blotName === 'block' && prev.length() <= 1;\n        if (!isPrevLineEmpty) {\n          // @ts-expect-error Fix me later\n          const curFormats = line.formats();\n          const prevFormats = this.quill.getFormat(range.index - 1, 1);\n          formats = AttributeMap.diff(curFormats, prevFormats) || {};\n          if (Object.keys(formats).length > 0) {\n            // line.length() - 1 targets \\n in line, another -1 for newline being deleted\n            const formatDelta = new Delta()\n              // @ts-expect-error Fix me later\n              .retain(range.index + line.length() - 2)\n              .retain(1, formats);\n            delta = delta.compose(formatDelta);\n          }\n        }\n      }\n    }\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.focus();\n  }\n\n  handleDelete(range: Range, context: Context) {\n    // Check for astral symbols\n    const length = /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/.test(context.suffix)\n      ? 2\n      : 1;\n    if (range.index >= this.quill.getLength() - length) return;\n    let formats = {};\n    const [line] = this.quill.getLine(range.index);\n    let delta = new Delta().retain(range.index).delete(length);\n    // @ts-expect-error Fix me later\n    if (context.offset >= line.length() - 1) {\n      const [next] = this.quill.getLine(range.index + 1);\n      if (next) {\n        // @ts-expect-error Fix me later\n        const curFormats = line.formats();\n        const nextFormats = this.quill.getFormat(range.index, 1);\n        formats = AttributeMap.diff(curFormats, nextFormats) || {};\n        if (Object.keys(formats).length > 0) {\n          delta = delta.retain(next.length() - 1).retain(1, formats);\n        }\n      }\n    }\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.focus();\n  }\n\n  handleDeleteRange(range: Range) {\n    deleteRange({ range, quill: this.quill });\n    this.quill.focus();\n  }\n\n  handleEnter(range: Range, context: Context) {\n    const lineFormats = Object.keys(context.format).reduce(\n      (formats: Record<string, unknown>, format) => {\n        if (\n          this.quill.scroll.query(format, Scope.BLOCK) &&\n          !Array.isArray(context.format[format])\n        ) {\n          formats[format] = context.format[format];\n        }\n        return formats;\n      },\n      {},\n    );\n    const delta = new Delta()\n      .retain(range.index)\n      .delete(range.length)\n      .insert('\\n', lineFormats);\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n    this.quill.focus();\n  }\n}\n\nconst defaultOptions: KeyboardOptions = {\n  bindings: {\n    bold: makeFormatHandler('bold'),\n    italic: makeFormatHandler('italic'),\n    underline: makeFormatHandler('underline'),\n    indent: {\n      // highlight tab or tab at beginning of list, indent or blockquote\n      key: 'Tab',\n      format: ['blockquote', 'indent', 'list'],\n      handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '+1', Quill.sources.USER);\n        return false;\n      },\n    },\n    outdent: {\n      key: 'Tab',\n      shiftKey: true,\n      format: ['blockquote', 'indent', 'list'],\n      // highlight tab or tab at beginning of list, indent or blockquote\n      handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '-1', Quill.sources.USER);\n        return false;\n      },\n    },\n    'outdent backspace': {\n      key: 'Backspace',\n      collapsed: true,\n      shiftKey: null,\n      metaKey: null,\n      ctrlKey: null,\n      altKey: null,\n      format: ['indent', 'list'],\n      offset: 0,\n      handler(range, context) {\n        if (context.format.indent != null) {\n          this.quill.format('indent', '-1', Quill.sources.USER);\n        } else if (context.format.list != null) {\n          this.quill.format('list', false, Quill.sources.USER);\n        }\n      },\n    },\n    'indent code-block': makeCodeBlockHandler(true),\n    'outdent code-block': makeCodeBlockHandler(false),\n    'remove tab': {\n      key: 'Tab',\n      shiftKey: true,\n      collapsed: true,\n      prefix: /\\t$/,\n      handler(range) {\n        this.quill.deleteText(range.index - 1, 1, Quill.sources.USER);\n      },\n    },\n    tab: {\n      key: 'Tab',\n      handler(range, context) {\n        if (context.format.table) return true;\n        this.quill.history.cutoff();\n        const delta = new Delta()\n          .retain(range.index)\n          .delete(range.length)\n          .insert('\\t');\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.history.cutoff();\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        return false;\n      },\n    },\n    'blockquote empty enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['blockquote'],\n      empty: true,\n      handler() {\n        this.quill.format('blockquote', false, Quill.sources.USER);\n      },\n    },\n    'list empty enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['list'],\n      empty: true,\n      handler(range, context) {\n        const formats: Record<string, unknown> = { list: false };\n        if (context.format.indent) {\n          formats.indent = false;\n        }\n        this.quill.formatLine(\n          range.index,\n          range.length,\n          formats,\n          Quill.sources.USER,\n        );\n      },\n    },\n    'checklist enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: { list: 'checked' },\n      handler(range) {\n        const [line, offset] = this.quill.getLine(range.index);\n        const formats = {\n          // @ts-expect-error Fix me later\n          ...line.formats(),\n          list: 'checked',\n        };\n        const delta = new Delta()\n          .retain(range.index)\n          .insert('\\n', formats)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - offset - 1)\n          .retain(1, { list: 'unchecked' });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        this.quill.scrollSelectionIntoView();\n      },\n    },\n    'header enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['header'],\n      suffix: /^$/,\n      handler(range, context) {\n        const [line, offset] = this.quill.getLine(range.index);\n        const delta = new Delta()\n          .retain(range.index)\n          .insert('\\n', context.format)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - offset - 1)\n          .retain(1, { header: null });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        this.quill.scrollSelectionIntoView();\n      },\n    },\n    'table backspace': {\n      key: 'Backspace',\n      format: ['table'],\n      collapsed: true,\n      offset: 0,\n      handler() {},\n    },\n    'table delete': {\n      key: 'Delete',\n      format: ['table'],\n      collapsed: true,\n      suffix: /^$/,\n      handler() {},\n    },\n    'table enter': {\n      key: 'Enter',\n      shiftKey: null,\n      format: ['table'],\n      handler(range) {\n        const module = this.quill.getModule('table');\n        if (module) {\n          // @ts-expect-error\n          const [table, row, cell, offset] = module.getTable(range);\n          const shift = tableSide(table, row, cell, offset);\n          if (shift == null) return;\n          let index = table.offset();\n          if (shift < 0) {\n            const delta = new Delta().retain(index).insert('\\n');\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(\n              range.index + 1,\n              range.length,\n              Quill.sources.SILENT,\n            );\n          } else if (shift > 0) {\n            index += table.length();\n            const delta = new Delta().retain(index).insert('\\n');\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(index, Quill.sources.USER);\n          }\n        }\n      },\n    },\n    'table tab': {\n      key: 'Tab',\n      shiftKey: null,\n      format: ['table'],\n      handler(range, context) {\n        const { event, line: cell } = context;\n        const offset = cell.offset(this.quill.scroll);\n        if (event.shiftKey) {\n          this.quill.setSelection(offset - 1, Quill.sources.USER);\n        } else {\n          this.quill.setSelection(offset + cell.length(), Quill.sources.USER);\n        }\n      },\n    },\n    'list autofill': {\n      key: ' ',\n      shiftKey: null,\n      collapsed: true,\n      format: {\n        'code-block': false,\n        blockquote: false,\n        table: false,\n      },\n      prefix: /^\\s*?(\\d+\\.|-|\\*|\\[ ?\\]|\\[x\\])$/,\n      handler(range, context) {\n        if (this.quill.scroll.query('list') == null) return true;\n        const { length } = context.prefix;\n        const [line, offset] = this.quill.getLine(range.index);\n        if (offset > length) return true;\n        let value;\n        switch (context.prefix.trim()) {\n          case '[]':\n          case '[ ]':\n            value = 'unchecked';\n            break;\n          case '[x]':\n            value = 'checked';\n            break;\n          case '-':\n          case '*':\n            value = 'bullet';\n            break;\n          default:\n            value = 'ordered';\n        }\n        this.quill.insertText(range.index, ' ', Quill.sources.USER);\n        this.quill.history.cutoff();\n        const delta = new Delta()\n          .retain(range.index - offset)\n          .delete(length + 1)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - 2 - offset)\n          .retain(1, { list: value });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.history.cutoff();\n        this.quill.setSelection(range.index - length, Quill.sources.SILENT);\n        return false;\n      },\n    },\n    'code exit': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['code-block'],\n      prefix: /^$/,\n      suffix: /^\\s*$/,\n      handler(range) {\n        const [line, offset] = this.quill.getLine(range.index);\n        let numLines = 2;\n        let cur = line;\n        while (\n          cur != null &&\n          cur.length() <= 1 &&\n          cur.formats()['code-block']\n        ) {\n          // @ts-expect-error\n          cur = cur.prev;\n          numLines -= 1;\n          // Requisite prev lines are empty\n          if (numLines <= 0) {\n            const delta = new Delta()\n              // @ts-expect-error Fix me later\n              .retain(range.index + line.length() - offset - 2)\n              .retain(1, { 'code-block': null })\n              .delete(1);\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(range.index - 1, Quill.sources.SILENT);\n            return false;\n          }\n        }\n        return true;\n      },\n    },\n    'embed left': makeEmbedArrowHandler('ArrowLeft', false),\n    'embed left shift': makeEmbedArrowHandler('ArrowLeft', true),\n    'embed right': makeEmbedArrowHandler('ArrowRight', false),\n    'embed right shift': makeEmbedArrowHandler('ArrowRight', true),\n    'table down': makeTableArrowHandler(false),\n    'table up': makeTableArrowHandler(true),\n  },\n};\n\nKeyboard.DEFAULTS = defaultOptions;\n\nfunction makeCodeBlockHandler(indent: boolean): BindingObject {\n  return {\n    key: 'Tab',\n    shiftKey: !indent,\n    format: { 'code-block': true },\n    handler(range, { event }) {\n      const CodeBlock = this.quill.scroll.query('code-block');\n      // @ts-expect-error\n      const { TAB } = CodeBlock;\n      if (range.length === 0 && !event.shiftKey) {\n        this.quill.insertText(range.index, TAB, Quill.sources.USER);\n        this.quill.setSelection(range.index + TAB.length, Quill.sources.SILENT);\n        return;\n      }\n\n      const lines =\n        range.length === 0\n          ? this.quill.getLines(range.index, 1)\n          : this.quill.getLines(range);\n      let { index, length } = range;\n      lines.forEach((line, i) => {\n        if (indent) {\n          line.insertAt(0, TAB);\n          if (i === 0) {\n            index += TAB.length;\n          } else {\n            length += TAB.length;\n          }\n          // @ts-expect-error Fix me later\n        } else if (line.domNode.textContent.startsWith(TAB)) {\n          line.deleteAt(0, TAB.length);\n          if (i === 0) {\n            index -= TAB.length;\n          } else {\n            length -= TAB.length;\n          }\n        }\n      });\n      this.quill.update(Quill.sources.USER);\n      this.quill.setSelection(index, length, Quill.sources.SILENT);\n    },\n  };\n}\n\nfunction makeEmbedArrowHandler(\n  key: string,\n  shiftKey: boolean | null,\n): BindingObject {\n  const where = key === 'ArrowLeft' ? 'prefix' : 'suffix';\n  return {\n    key,\n    shiftKey,\n    altKey: null,\n    [where]: /^$/,\n    handler(range) {\n      let { index } = range;\n      if (key === 'ArrowRight') {\n        index += range.length + 1;\n      }\n      const [leaf] = this.quill.getLeaf(index);\n      if (!(leaf instanceof EmbedBlot)) return true;\n      if (key === 'ArrowLeft') {\n        if (shiftKey) {\n          this.quill.setSelection(\n            range.index - 1,\n            range.length + 1,\n            Quill.sources.USER,\n          );\n        } else {\n          this.quill.setSelection(range.index - 1, Quill.sources.USER);\n        }\n      } else if (shiftKey) {\n        this.quill.setSelection(\n          range.index,\n          range.length + 1,\n          Quill.sources.USER,\n        );\n      } else {\n        this.quill.setSelection(\n          range.index + range.length + 1,\n          Quill.sources.USER,\n        );\n      }\n      return false;\n    },\n  };\n}\n\nfunction makeFormatHandler(format: string): BindingObject {\n  return {\n    key: format[0],\n    shortKey: true,\n    handler(range, context) {\n      this.quill.format(format, !context.format[format], Quill.sources.USER);\n    },\n  };\n}\n\nfunction makeTableArrowHandler(up: boolean): BindingObject {\n  return {\n    key: up ? 'ArrowUp' : 'ArrowDown',\n    collapsed: true,\n    format: ['table'],\n    handler(range, context) {\n      // TODO move to table module\n      const key = up ? 'prev' : 'next';\n      const cell = context.line;\n      const targetRow = cell.parent[key];\n      if (targetRow != null) {\n        if (targetRow.statics.blotName === 'table-row') {\n          // @ts-expect-error\n          let targetCell = targetRow.children.head;\n          let cur = cell;\n          while (cur.prev != null) {\n            // @ts-expect-error\n            cur = cur.prev;\n            targetCell = targetCell.next;\n          }\n          const index =\n            targetCell.offset(this.quill.scroll) +\n            Math.min(context.offset, targetCell.length() - 1);\n          this.quill.setSelection(index, 0, Quill.sources.USER);\n        }\n      } else {\n        // @ts-expect-error\n        const targetLine = cell.table()[key];\n        if (targetLine != null) {\n          if (up) {\n            this.quill.setSelection(\n              targetLine.offset(this.quill.scroll) + targetLine.length() - 1,\n              0,\n              Quill.sources.USER,\n            );\n          } else {\n            this.quill.setSelection(\n              targetLine.offset(this.quill.scroll),\n              0,\n              Quill.sources.USER,\n            );\n          }\n        }\n      }\n      return false;\n    },\n  };\n}\n\nfunction normalize(binding: Binding): BindingObject | null {\n  if (typeof binding === 'string' || typeof binding === 'number') {\n    binding = { key: binding };\n  } else if (typeof binding === 'object') {\n    binding = cloneDeep(binding);\n  } else {\n    return null;\n  }\n  if (binding.shortKey) {\n    binding[SHORTKEY] = binding.shortKey;\n    delete binding.shortKey;\n  }\n  return binding;\n}\n\n// TODO: Move into quill.ts or editor.ts\nfunction deleteRange({ quill, range }: { quill: Quill; range: Range }) {\n  const lines = quill.getLines(range);\n  let formats = {};\n  if (lines.length > 1) {\n    const firstFormats = lines[0].formats();\n    const lastFormats = lines[lines.length - 1].formats();\n    formats = AttributeMap.diff(lastFormats, firstFormats) || {};\n  }\n  quill.deleteText(range, Quill.sources.USER);\n  if (Object.keys(formats).length > 0) {\n    quill.formatLine(range.index, 1, formats, Quill.sources.USER);\n  }\n  quill.setSelection(range.index, Quill.sources.SILENT);\n}\n\nfunction tableSide(_table: unknown, row: Blot, cell: Blot, offset: number) {\n  if (row.prev == null && row.next == null) {\n    if (cell.prev == null && cell.next == null) {\n      return offset === 0 ? -1 : 1;\n    }\n    return cell.prev == null ? -1 : 1;\n  }\n  if (row.prev == null) {\n    return -1;\n  }\n  if (row.next == null) {\n    return 1;\n  }\n  return null;\n}\n\nexport { Keyboard as default, SHORTKEY, normalize, deleteRange };\n", "const normalWeightRegexp = /font-weight:\\s*normal/;\nconst blockTagNames = ['P', 'OL', 'UL'];\n\nconst isBlockElement = (element: Element | null) => {\n  return element && blockTagNames.includes(element.tagName);\n};\n\nconst normalizeEmptyLines = (doc: Document) => {\n  Array.from(doc.querySelectorAll('br'))\n    .filter(\n      (br) =>\n        isBlockElement(br.previousElementSibling) &&\n        isBlockElement(br.nextElementSibling),\n    )\n    .forEach((br) => {\n      br.parentNode?.removeChild(br);\n    });\n};\n\nconst normalizeFontWeight = (doc: Document) => {\n  Array.from(doc.querySelectorAll('b[style*=\"font-weight\"]'))\n    .filter((node) => node.getAttribute('style')?.match(normalWeightRegexp))\n    .forEach((node) => {\n      const fragment = doc.createDocumentFragment();\n      fragment.append(...node.childNodes);\n      node.parentNode?.replaceChild(fragment, node);\n    });\n};\n\nexport default function normalize(doc: Document) {\n  if (doc.querySelector('[id^=\"docs-internal-guid-\"]')) {\n    normalizeFontWeight(doc);\n    normalizeEmptyLines(doc);\n  }\n}\n", "const ignoreRegexp = /\\bmso-list:[^;]*ignore/i;\nconst idRegexp = /\\bmso-list:[^;]*\\bl(\\d+)/i;\nconst indentRegexp = /\\bmso-list:[^;]*\\blevel(\\d+)/i;\n\nconst parseListItem = (element: Element, html: string) => {\n  const style = element.getAttribute('style');\n  const idMatch = style?.match(idRegexp);\n  if (!idMatch) {\n    return null;\n  }\n  const id = Number(idMatch[1]);\n\n  const indentMatch = style?.match(indentRegexp);\n  const indent = indentMatch ? Number(indentMatch[1]) : 1;\n\n  const typeRegexp = new RegExp(\n    `@list l${id}:level${indent}\\\\s*\\\\{[^\\\\}]*mso-level-number-format:\\\\s*([\\\\w-]+)`,\n    'i',\n  );\n  const typeMatch = html.match(typeRegexp);\n  const type = typeMatch && typeMatch[1] === 'bullet' ? 'bullet' : 'ordered';\n\n  return { id, indent, type, element };\n};\n\n// list items are represented as `p` tags with styles like `mso-list: l0 level1` where:\n// 1. \"0\" in \"l0\" means the list item id;\n// 2. \"1\" in \"level1\" means the indent level, starting from 1.\nconst normalizeListItem = (doc: Document) => {\n  const msoList = Array.from(doc.querySelectorAll('[style*=mso-list]'));\n  const ignored: Element[] = [];\n  const others: Element[] = [];\n  msoList.forEach((node) => {\n    const shouldIgnore = (node.getAttribute('style') || '').match(ignoreRegexp);\n    if (shouldIgnore) {\n      ignored.push(node);\n    } else {\n      others.push(node);\n    }\n  });\n\n  // Each list item contains a marker wrapped with \"mso-list: Ignore\".\n  ignored.forEach((node) => node.parentNode?.removeChild(node));\n\n  // The list stype is not defined inline with the tag, instead, it's in the\n  // style tag so we need to pass the html as a string.\n  const html = doc.documentElement.innerHTML;\n  const listItems = others\n    .map((element) => parseListItem(element, html))\n    .filter((parsed) => parsed);\n\n  while (listItems.length) {\n    const childListItems = [];\n\n    let current = listItems.shift();\n    // Group continuous items into the same group (aka \"ul\")\n    while (current) {\n      childListItems.push(current);\n      current =\n        listItems.length &&\n        listItems[0]?.element === current.element.nextElementSibling &&\n        // Different id means the next item doesn't belong to this group.\n        listItems[0].id === current.id\n          ? listItems.shift()\n          : null;\n    }\n\n    const ul = document.createElement('ul');\n    childListItems.forEach((listItem) => {\n      const li = document.createElement('li');\n      li.setAttribute('data-list', listItem.type);\n      if (listItem.indent > 1) {\n        li.setAttribute('class', `ql-indent-${listItem.indent - 1}`);\n      }\n      li.innerHTML = listItem.element.innerHTML;\n      ul.appendChild(li);\n    });\n\n    const element = childListItems[0]?.element;\n    const { parentNode } = element ?? {};\n    if (element) {\n      parentNode?.replaceChild(ul, element);\n    }\n    childListItems.slice(1).forEach(({ element: e }) => {\n      parentNode?.removeChild(e);\n    });\n  }\n};\n\nexport default function normalize(doc: Document) {\n  if (\n    doc.documentElement.getAttribute('xmlns:w') ===\n    'urn:schemas-microsoft-com:office:word'\n  ) {\n    normalizeListItem(doc);\n  }\n}\n", "import googleDocs from './normalizers/googleDocs.js';\nimport msWord from './normalizers/msWord.js';\n\nconst NORMALIZERS = [msWord, googleDocs];\n\nconst normalizeExternalHTML = (doc: Document) => {\n  if (doc.documentElement) {\n    NORMALIZERS.forEach((normalize) => {\n      normalize(doc);\n    });\n  }\n};\n\nexport default normalizeExternalHTML;\n", "import { Scope } from 'parchment';\nimport type Delta from 'quill-delta';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type Scroll from '../blots/scroll.js';\nimport type { Range } from '../core/selection.js';\n\nexport interface HistoryOptions {\n  userOnly: boolean;\n  delay: number;\n  maxStack: number;\n}\n\nexport interface StackItem {\n  delta: Delta;\n  range: Range | null;\n}\n\ninterface Stack {\n  undo: StackItem[];\n  redo: StackItem[];\n}\n\nclass History extends Module<HistoryOptions> {\n  static DEFAULTS: HistoryOptions = {\n    delay: 1000,\n    maxStack: 100,\n    userOnly: false,\n  };\n\n  lastRecorded = 0;\n  ignoreChange = false;\n  stack: Stack = { undo: [], redo: [] };\n  currentRange: Range | null = null;\n\n  constructor(quill: Quill, options: Partial<HistoryOptions>) {\n    super(quill, options);\n    this.quill.on(\n      Quill.events.EDITOR_CHANGE,\n      (eventName, value, oldValue, source) => {\n        if (eventName === Quill.events.SELECTION_CHANGE) {\n          if (value && source !== Quill.sources.SILENT) {\n            this.currentRange = value;\n          }\n        } else if (eventName === Quill.events.TEXT_CHANGE) {\n          if (!this.ignoreChange) {\n            if (!this.options.userOnly || source === Quill.sources.USER) {\n              this.record(value, oldValue);\n            } else {\n              this.transform(value);\n            }\n          }\n\n          this.currentRange = transformRange(this.currentRange, value);\n        }\n      },\n    );\n\n    this.quill.keyboard.addBinding(\n      { key: 'z', shortKey: true },\n      this.undo.bind(this),\n    );\n    this.quill.keyboard.addBinding(\n      { key: ['z', 'Z'], shortKey: true, shiftKey: true },\n      this.redo.bind(this),\n    );\n    if (/Win/i.test(navigator.platform)) {\n      this.quill.keyboard.addBinding(\n        { key: 'y', shortKey: true },\n        this.redo.bind(this),\n      );\n    }\n\n    this.quill.root.addEventListener('beforeinput', (event) => {\n      if (event.inputType === 'historyUndo') {\n        this.undo();\n        event.preventDefault();\n      } else if (event.inputType === 'historyRedo') {\n        this.redo();\n        event.preventDefault();\n      }\n    });\n  }\n\n  change(source: 'undo' | 'redo', dest: 'redo' | 'undo') {\n    if (this.stack[source].length === 0) return;\n    const item = this.stack[source].pop();\n    if (!item) return;\n    const base = this.quill.getContents();\n    const inverseDelta = item.delta.invert(base);\n    this.stack[dest].push({\n      delta: inverseDelta,\n      range: transformRange(item.range, inverseDelta),\n    });\n    this.lastRecorded = 0;\n    this.ignoreChange = true;\n    this.quill.updateContents(item.delta, Quill.sources.USER);\n    this.ignoreChange = false;\n\n    this.restoreSelection(item);\n  }\n\n  clear() {\n    this.stack = { undo: [], redo: [] };\n  }\n\n  cutoff() {\n    this.lastRecorded = 0;\n  }\n\n  record(changeDelta: Delta, oldDelta: Delta) {\n    if (changeDelta.ops.length === 0) return;\n    this.stack.redo = [];\n    let undoDelta = changeDelta.invert(oldDelta);\n    let undoRange = this.currentRange;\n    const timestamp = Date.now();\n    if (\n      // @ts-expect-error Fix me later\n      this.lastRecorded + this.options.delay > timestamp &&\n      this.stack.undo.length > 0\n    ) {\n      const item = this.stack.undo.pop();\n      if (item) {\n        undoDelta = undoDelta.compose(item.delta);\n        undoRange = item.range;\n      }\n    } else {\n      this.lastRecorded = timestamp;\n    }\n    if (undoDelta.length() === 0) return;\n    this.stack.undo.push({ delta: undoDelta, range: undoRange });\n    // @ts-expect-error Fix me later\n    if (this.stack.undo.length > this.options.maxStack) {\n      this.stack.undo.shift();\n    }\n  }\n\n  redo() {\n    this.change('redo', 'undo');\n  }\n\n  transform(delta: Delta) {\n    transformStack(this.stack.undo, delta);\n    transformStack(this.stack.redo, delta);\n  }\n\n  undo() {\n    this.change('undo', 'redo');\n  }\n\n  protected restoreSelection(stackItem: StackItem) {\n    if (stackItem.range) {\n      this.quill.setSelection(stackItem.range, Quill.sources.USER);\n    } else {\n      const index = getLastChangeIndex(this.quill.scroll, stackItem.delta);\n      this.quill.setSelection(index, Quill.sources.USER);\n    }\n  }\n}\n\nfunction transformStack(stack: StackItem[], delta: Delta) {\n  let remoteDelta = delta;\n  for (let i = stack.length - 1; i >= 0; i -= 1) {\n    const oldItem = stack[i];\n    stack[i] = {\n      delta: remoteDelta.transform(oldItem.delta, true),\n      range: oldItem.range && transformRange(oldItem.range, remoteDelta),\n    };\n    remoteDelta = oldItem.delta.transform(remoteDelta);\n    if (stack[i].delta.length() === 0) {\n      stack.splice(i, 1);\n    }\n  }\n}\n\nfunction endsWithNewlineChange(scroll: Scroll, delta: Delta) {\n  const lastOp = delta.ops[delta.ops.length - 1];\n  if (lastOp == null) return false;\n  if (lastOp.insert != null) {\n    return typeof lastOp.insert === 'string' && lastOp.insert.endsWith('\\n');\n  }\n  if (lastOp.attributes != null) {\n    return Object.keys(lastOp.attributes).some((attr) => {\n      return scroll.query(attr, Scope.BLOCK) != null;\n    });\n  }\n  return false;\n}\n\nfunction getLastChangeIndex(scroll: Scroll, delta: Delta) {\n  const deleteLength = delta.reduce((length, op) => {\n    return length + (op.delete || 0);\n  }, 0);\n  let changeIndex = delta.length() - deleteLength;\n  if (endsWithNewlineChange(scroll, delta)) {\n    changeIndex -= 1;\n  }\n  return changeIndex;\n}\n\nfunction transformRange(range: Range | null, delta: Delta) {\n  if (!range) return range;\n  const start = delta.transformPosition(range.index);\n  const end = delta.transformPosition(range.index + range.length);\n  return { index: start, length: end - start };\n}\n\nexport { History as default, getLastChangeIndex };\n", "import Delta from 'quill-delta';\nimport type Quill from '../core/quill.js';\nimport Emitter from '../core/emitter.js';\nimport Module from '../core/module.js';\nimport type { Range } from '../core/selection.js';\n\ninterface UploaderOptions {\n  mimetypes: string[];\n  handler: (this: { quill: Quill }, range: Range, files: File[]) => void;\n}\n\nclass Uploader extends Module<UploaderOptions> {\n  static DEFAULTS: UploaderOptions;\n\n  constructor(quill: Quill, options: Partial<UploaderOptions>) {\n    super(quill, options);\n    quill.root.addEventListener('drop', (e) => {\n      e.preventDefault();\n      let native: ReturnType<typeof document.createRange> | null = null;\n      if (document.caretRangeFromPoint) {\n        native = document.caretRangeFromPoint(e.clientX, e.clientY);\n        // @ts-expect-error\n      } else if (document.caretPositionFromPoint) {\n        // @ts-expect-error\n        const position = document.caretPositionFromPoint(e.clientX, e.clientY);\n        native = document.createRange();\n        native.setStart(position.offsetNode, position.offset);\n        native.setEnd(position.offsetNode, position.offset);\n      }\n\n      const normalized = native && quill.selection.normalizeNative(native);\n      if (normalized) {\n        const range = quill.selection.normalizedToRange(normalized);\n        if (e.dataTransfer?.files) {\n          this.upload(range, e.dataTransfer.files);\n        }\n      }\n    });\n  }\n\n  upload(range: Range, files: FileList | File[]) {\n    const uploads: File[] = [];\n    Array.from(files).forEach((file) => {\n      if (file && this.options.mimetypes?.includes(file.type)) {\n        uploads.push(file);\n      }\n    });\n    if (uploads.length > 0) {\n      // @ts-expect-error Fix me later\n      this.options.handler.call(this, range, uploads);\n    }\n  }\n}\n\nUploader.DEFAULTS = {\n  mimetypes: ['image/png', 'image/jpeg'],\n  handler(range: Range, files: File[]) {\n    if (!this.quill.scroll.query('image')) {\n      return;\n    }\n    const promises = files.map<Promise<string>>((file) => {\n      return new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n          resolve(reader.result as string);\n        };\n        reader.readAsDataURL(file);\n      });\n    });\n    Promise.all(promises).then((images) => {\n      const update = images.reduce((delta: Delta, image) => {\n        return delta.insert({ image });\n      }, new Delta().retain(range.index).delete(range.length)) as Delta;\n      this.quill.updateContents(update, Emitter.sources.USER);\n      this.quill.setSelection(\n        range.index + images.length,\n        Emitter.sources.SILENT,\n      );\n    });\n  },\n};\n\nexport default Uploader;\n", "import Quill, { Parchment, Range } from './core/quill.js';\nimport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n} from './core/quill.js';\n\nimport Block, { BlockEmbed } from './blots/block.js';\nimport Break from './blots/break.js';\nimport Container from './blots/container.js';\nimport Cursor from './blots/cursor.js';\nimport Embed from './blots/embed.js';\nimport Inline from './blots/inline.js';\nimport Scroll from './blots/scroll.js';\nimport TextBlot from './blots/text.js';\n\nimport Clipboard from './modules/clipboard.js';\nimport History from './modules/history.js';\nimport Keyboard from './modules/keyboard.js';\nimport Uploader from './modules/uploader.js';\nimport Delta, { Op, OpIterator, AttributeMap } from 'quill-delta';\nimport Input from './modules/input.js';\nimport UINode from './modules/uiNode.js';\n\nexport { default as Module } from './core/module.js';\nexport { Delta, Op, OpIterator, AttributeMap, Parchment, Range };\nexport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n};\n\nQuill.register({\n  'blots/block': Block,\n  'blots/block/embed': BlockEmbed,\n  'blots/break': Break,\n  'blots/container': Container,\n  'blots/cursor': Cursor,\n  'blots/embed': Embed,\n  'blots/inline': Inline,\n  'blots/scroll': Scroll,\n  'blots/text': TextBlot,\n\n  'modules/clipboard': Clipboard,\n  'modules/history': History,\n  'modules/keyboard': Keyboard,\n  'modules/uploader': Uploader,\n  'modules/input': Input,\n  'modules/uiNode': UINode,\n});\n\nexport default Quill;\n", "import Delta from 'quill-delta';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type { Range } from '../core/selection.js';\nimport { deleteRange } from './keyboard.js';\n\nconst INSERT_TYPES = ['insertText', 'insertReplacementText'];\n\nclass Input extends Module {\n  constructor(quill: Quill, options: Record<string, never>) {\n    super(quill, options);\n\n    quill.root.addEventListener('beforeinput', (event) => {\n      this.handleBeforeInput(event);\n    });\n\n    // Gboard with English input on Android triggers `compositionstart` sometimes even\n    // users are not going to type anything.\n    if (!/Android/i.test(navigator.userAgent)) {\n      quill.on(Quill.events.COMPOSITION_BEFORE_START, () => {\n        this.handleCompositionStart();\n      });\n    }\n  }\n\n  private deleteRange(range: Range) {\n    deleteRange({ range, quill: this.quill });\n  }\n\n  private replaceText(range: Range, text = '') {\n    if (range.length === 0) return false;\n\n    if (text) {\n      // Follow the native behavior that inherits the formats of the first character\n      const formats = this.quill.getFormat(range.index, 1);\n      this.deleteRange(range);\n      this.quill.updateContents(\n        new Delta().retain(range.index).insert(text, formats),\n        Quill.sources.USER,\n      );\n    } else {\n      this.deleteRange(range);\n    }\n\n    this.quill.setSelection(range.index + text.length, 0, Quill.sources.SILENT);\n    return true;\n  }\n\n  private handleBeforeInput(event: InputEvent) {\n    if (\n      this.quill.composition.isComposing ||\n      event.defaultPrevented ||\n      !INSERT_TYPES.includes(event.inputType)\n    ) {\n      return;\n    }\n\n    const staticRange = event.getTargetRanges\n      ? event.getTargetRanges()[0]\n      : null;\n    if (!staticRange || staticRange.collapsed === true) {\n      return;\n    }\n\n    const text = getPlainTextFromInputEvent(event);\n    if (text == null) {\n      return;\n    }\n    const normalized = this.quill.selection.normalizeNative(staticRange);\n    const range = normalized\n      ? this.quill.selection.normalizedToRange(normalized)\n      : null;\n    if (range && this.replaceText(range, text)) {\n      event.preventDefault();\n    }\n  }\n\n  private handleCompositionStart() {\n    const range = this.quill.getSelection();\n    if (range) {\n      this.replaceText(range);\n    }\n  }\n}\n\nfunction getPlainTextFromInputEvent(event: InputEvent) {\n  // When `inputType` is \"insertText\":\n  // - `event.data` should be string (Safari uses `event.dataTransfer`).\n  // - `event.dataTransfer` should be null.\n  // When `inputType` is \"insertReplacementText\":\n  // - `event.data` should be null.\n  // - `event.dataTransfer` should contain \"text/plain\" data.\n\n  if (typeof event.data === 'string') {\n    return event.data;\n  }\n  if (event.dataTransfer?.types.includes('text/plain')) {\n    return event.dataTransfer.getData('text/plain');\n  }\n  return null;\n}\n\nexport default Input;\n", "import { ParentBlot } from 'parchment';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\n\nconst isMac = /Mac/i.test(navigator.platform);\n\n// Export for testing\nexport const TTL_FOR_VALID_SELECTION_CHANGE = 100;\n\n// A loose check to determine if the shortcut can move the caret before a UI node:\n// <ANY_PARENT>[CARET]<div class=\"ql-ui\"></div>[CONTENT]</ANY_PARENT>\nconst canMoveCaretBeforeUINode = (event: KeyboardEvent) => {\n  if (\n    event.key === 'ArrowLeft' ||\n    event.key === 'ArrowRight' || // RTL scripts or moving from the end of the previous line\n    event.key === 'ArrowUp' ||\n    event.key === 'ArrowDown' ||\n    event.key === 'Home'\n  ) {\n    return true;\n  }\n\n  if (isMac && event.key === 'a' && event.ctrlKey === true) {\n    return true;\n  }\n\n  return false;\n};\n\nclass UINode extends Module {\n  isListening = false;\n  selectionChangeDeadline = 0;\n\n  constructor(quill: Quill, options: Record<string, never>) {\n    super(quill, options);\n\n    this.handleArrowKeys();\n    this.handleNavigationShortcuts();\n  }\n\n  private handleArrowKeys() {\n    this.quill.keyboard.addBinding({\n      key: ['ArrowLeft', 'ArrowRight'],\n      offset: 0,\n      shiftKey: null,\n      handler(range, { line, event }) {\n        if (!(line instanceof ParentBlot) || !line.uiNode) {\n          return true;\n        }\n\n        const isRTL = getComputedStyle(line.domNode)['direction'] === 'rtl';\n        if (\n          (isRTL && event.key !== 'ArrowRight') ||\n          (!isRTL && event.key !== 'ArrowLeft')\n        ) {\n          return true;\n        }\n\n        this.quill.setSelection(\n          range.index - 1,\n          range.length + (event.shiftKey ? 1 : 0),\n          Quill.sources.USER,\n        );\n        return false;\n      },\n    });\n  }\n\n  private handleNavigationShortcuts() {\n    this.quill.root.addEventListener('keydown', (event) => {\n      if (!event.defaultPrevented && canMoveCaretBeforeUINode(event)) {\n        this.ensureListeningToSelectionChange();\n      }\n    });\n  }\n\n  /**\n   * We only listen to the `selectionchange` event when\n   * there is an intention of moving the caret to the beginning using shortcuts.\n   * This is primarily implemented to prevent infinite loops, as we are changing\n   * the selection within the handler of a `selectionchange` event.\n   */\n  private ensureListeningToSelectionChange() {\n    this.selectionChangeDeadline = Date.now() + TTL_FOR_VALID_SELECTION_CHANGE;\n\n    if (this.isListening) return;\n    this.isListening = true;\n\n    const listener = () => {\n      this.isListening = false;\n\n      if (Date.now() <= this.selectionChangeDeadline) {\n        this.handleSelectionChange();\n      }\n    };\n\n    document.addEventListener('selectionchange', listener, {\n      once: true,\n    });\n  }\n\n  private handleSelectionChange() {\n    const selection = document.getSelection();\n    if (!selection) return;\n    const range = selection.getRangeAt(0);\n    if (range.collapsed !== true || range.startOffset !== 0) return;\n\n    const line = this.quill.scroll.find(range.startContainer);\n    if (!(line instanceof ParentBlot) || !line.uiNode) return;\n\n    const newRange = document.createRange();\n    newRange.setStartAfter(line.uiNode);\n    newRange.setEndAfter(line.uiNode);\n    selection.removeAllRanges();\n    selection.addRange(newRange);\n  }\n}\n\nexport default UINode;\n", "import { ClassAttributor, Scope } from 'parchment';\n\nclass IndentAttributor extends ClassAttributor {\n  add(node: HTMLElement, value: string | number) {\n    let normalizedValue = 0;\n    if (value === '+1' || value === '-1') {\n      const indent = this.value(node) || 0;\n      normalizedValue = value === '+1' ? indent + 1 : indent - 1;\n    } else if (typeof value === 'number') {\n      normalizedValue = value;\n    }\n    if (normalizedValue === 0) {\n      this.remove(node);\n      return true;\n    }\n    return super.add(node, normalizedValue.toString());\n  }\n\n  canAdd(node: HTMLElement, value: string) {\n    return super.canAdd(node, value) || super.canAdd(node, parseInt(value, 10));\n  }\n\n  value(node: HTMLElement) {\n    return parseInt(super.value(node), 10) || undefined; // Don't return NaN\n  }\n}\n\nconst IndentClass = new IndentAttributor('indent', 'ql-indent', {\n  scope: Scope.BLOCK,\n  // @ts-expect-error\n  whitelist: [1, 2, 3, 4, 5, 6, 7, 8],\n});\n\nexport default IndentClass;\n", "import Block from '../blots/block.js';\n\nclass Blockquote extends Block {\n  static blotName = 'blockquote';\n  static tagName = 'blockquote';\n}\n\nexport default Blockquote;\n", "import Block from '../blots/block.js';\n\nclass Header extends Block {\n  static blotName = 'header';\n  static tagName = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\n\n  static formats(domNode: Element) {\n    return this.tagName.indexOf(domNode.tagName) + 1;\n  }\n}\n\nexport default Header;\n", "import Block from '../blots/block.js';\nimport Container from '../blots/container.js';\nimport type Scroll from '../blots/scroll.js';\nimport Quill from '../core/quill.js';\n\nclass ListContainer extends Container {}\nListContainer.blotName = 'list-container';\nListContainer.tagName = 'OL';\n\nclass ListItem extends Block {\n  static create(value: string) {\n    const node = super.create() as HTMLElement;\n    node.setAttribute('data-list', value);\n    return node;\n  }\n\n  static formats(domNode: HTMLElement) {\n    return domNode.getAttribute('data-list') || undefined;\n  }\n\n  static register() {\n    Quill.register(ListContainer);\n  }\n\n  constructor(scroll: Scroll, domNode: HTMLElement) {\n    super(scroll, domNode);\n    const ui = domNode.ownerDocument.createElement('span');\n    const listEventHandler = (e: Event) => {\n      if (!scroll.isEnabled()) return;\n      const format = this.statics.formats(domNode, scroll);\n      if (format === 'checked') {\n        this.format('list', 'unchecked');\n        e.preventDefault();\n      } else if (format === 'unchecked') {\n        this.format('list', 'checked');\n        e.preventDefault();\n      }\n    };\n    ui.addEventListener('mousedown', listEventHandler);\n    ui.addEventListener('touchstart', listEventHandler);\n    this.attachUI(ui);\n  }\n\n  format(name: string, value: string) {\n    if (name === this.statics.blotName && value) {\n      this.domNode.setAttribute('data-list', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n}\nListItem.blotName = 'list';\nListItem.tagName = 'LI';\n\nListContainer.allowedChildren = [ListItem];\nListItem.requiredContainer = ListContainer;\n\nexport { ListContainer, ListItem as default };\n", "import Inline from '../blots/inline.js';\n\nclass Bold extends Inline {\n  static blotName = 'bold';\n  static tagName = ['STRONG', 'B'];\n\n  static create() {\n    return super.create();\n  }\n\n  static formats() {\n    return true;\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    if (this.domNode.tagName !== this.statics.tagName[0]) {\n      this.replaceWith(this.statics.blotName);\n    }\n  }\n}\n\nexport default Bold;\n", "import Bold from './bold.js';\n\nclass Italic extends Bold {\n  static blotName = 'italic';\n  static tagName = ['EM', 'I'];\n}\n\nexport default Italic;\n", "import Inline from '../blots/inline.js';\n\nclass Link extends Inline {\n  static blotName = 'link';\n  static tagName = 'A';\n  static SANITIZED_URL = 'about:blank';\n  static PROTOCOL_WHITELIST = ['http', 'https', 'mailto', 'tel', 'sms'];\n\n  static create(value: string) {\n    const node = super.create(value) as HTMLElement;\n    node.setAttribute('href', this.sanitize(value));\n    node.setAttribute('rel', 'noopener noreferrer');\n    node.setAttribute('target', '_blank');\n    return node;\n  }\n\n  static formats(domNode: HTMLElement) {\n    return domNode.getAttribute('href');\n  }\n\n  static sanitize(url: string) {\n    return sanitize(url, this.PROTOCOL_WHITELIST) ? url : this.SANITIZED_URL;\n  }\n\n  format(name: string, value: unknown) {\n    if (name !== this.statics.blotName || !value) {\n      super.format(name, value);\n    } else {\n      // @ts-expect-error\n      this.domNode.setAttribute('href', this.constructor.sanitize(value));\n    }\n  }\n}\n\nfunction sanitize(url: string, protocols: string[]) {\n  const anchor = document.createElement('a');\n  anchor.href = url;\n  const protocol = anchor.href.slice(0, anchor.href.indexOf(':'));\n  return protocols.indexOf(protocol) > -1;\n}\n\nexport { Link as default, sanitize };\n", "import Inline from '../blots/inline.js';\n\nclass Script extends Inline {\n  static blotName = 'script';\n  static tagName = ['SUB', 'SUP'];\n\n  static create(value: 'super' | 'sub' | (string & {})) {\n    if (value === 'super') {\n      return document.createElement('sup');\n    }\n    if (value === 'sub') {\n      return document.createElement('sub');\n    }\n    return super.create(value);\n  }\n\n  static formats(domNode: HTMLElement) {\n    if (domNode.tagName === 'SUB') return 'sub';\n    if (domNode.tagName === 'SUP') return 'super';\n    return undefined;\n  }\n}\n\nexport default Script;\n", "import Bold from './bold.js';\n\nclass Strike extends Bold {\n  static blotName = 'strike';\n  static tagName = ['S', 'STRIKE'];\n}\n\nexport default Strike;\n", "import Inline from '../blots/inline.js';\n\nclass Underline extends Inline {\n  static blotName = 'underline';\n  static tagName = 'U';\n}\n\nexport default Underline;\n", "import Embed from '../blots/embed.js';\n\nclass Formula extends Embed {\n  static blotName = 'formula';\n  static className = 'ql-formula';\n  static tagName = 'SPAN';\n\n  static create(value: string) {\n    // @ts-expect-error\n    if (window.katex == null) {\n      throw new Error('Formula module requires KaTeX.');\n    }\n    const node = super.create(value) as Element;\n    if (typeof value === 'string') {\n      // @ts-expect-error\n      window.katex.render(value, node, {\n        throwOnError: false,\n        errorColor: '#f00',\n      });\n      node.setAttribute('data-value', value);\n    }\n    return node;\n  }\n\n  static value(domNode: Element) {\n    return domNode.getAttribute('data-value');\n  }\n\n  html() {\n    const { formula } = this.value();\n    return `<span>${formula}</span>`;\n  }\n}\n\nexport default Formula;\n", "import { EmbedBlot } from 'parchment';\nimport { sanitize } from './link.js';\n\nconst ATTRIBUTES = ['alt', 'height', 'width'];\n\nclass Image extends EmbedBlot {\n  static blotName = 'image';\n  static tagName = 'IMG';\n\n  static create(value: string) {\n    const node = super.create(value) as Element;\n    if (typeof value === 'string') {\n      node.setAttribute('src', this.sanitize(value));\n    }\n    return node;\n  }\n\n  static formats(domNode: Element) {\n    return ATTRIBUTES.reduce(\n      (formats: Record<string, string | null>, attribute) => {\n        if (domNode.hasAttribute(attribute)) {\n          formats[attribute] = domNode.getAttribute(attribute);\n        }\n        return formats;\n      },\n      {},\n    );\n  }\n\n  static match(url: string) {\n    return /\\.(jpe?g|gif|png)$/.test(url) || /^data:image\\/.+;base64/.test(url);\n  }\n\n  static sanitize(url: string) {\n    return sanitize(url, ['http', 'https', 'data']) ? url : '//:0';\n  }\n\n  static value(domNode: Element) {\n    return domNode.getAttribute('src');\n  }\n\n  domNode: HTMLImageElement;\n\n  format(name: string, value: string) {\n    if (ATTRIBUTES.indexOf(name) > -1) {\n      if (value) {\n        this.domNode.setAttribute(name, value);\n      } else {\n        this.domNode.removeAttribute(name);\n      }\n    } else {\n      super.format(name, value);\n    }\n  }\n}\n\nexport default Image;\n", "import { BlockEmbed } from '../blots/block.js';\nimport Link from './link.js';\n\nconst ATTRIBUTES = ['height', 'width'];\n\nclass Video extends BlockEmbed {\n  static blotName = 'video';\n  static className = 'ql-video';\n  static tagName = 'IFRAME';\n\n  static create(value: string) {\n    const node = super.create(value) as Element;\n    node.setAttribute('frameborder', '0');\n    node.setAttribute('allowfullscreen', 'true');\n    node.setAttribute('src', this.sanitize(value));\n    return node;\n  }\n\n  static formats(domNode: Element) {\n    return ATTRIBUTES.reduce(\n      (formats: Record<string, string | null>, attribute) => {\n        if (domNode.hasAttribute(attribute)) {\n          formats[attribute] = domNode.getAttribute(attribute);\n        }\n        return formats;\n      },\n      {},\n    );\n  }\n\n  static sanitize(url: string) {\n    return Link.sanitize(url);\n  }\n\n  static value(domNode: Element) {\n    return domNode.getAttribute('src');\n  }\n\n  domNode: HTMLVideoElement;\n\n  format(name: string, value: string) {\n    if (ATTRIBUTES.indexOf(name) > -1) {\n      if (value) {\n        this.domNode.setAttribute(name, value);\n      } else {\n        this.domNode.removeAttribute(name);\n      }\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  html() {\n    const { video } = this.value();\n    return `<a href=\"${video}\">${video}</a>`;\n  }\n}\n\nexport default Video;\n", "import Delta from 'quill-delta';\nimport { ClassAttributor, Scope } from 'parchment';\nimport type { Blot, ScrollBlot } from 'parchment';\nimport Inline from '../blots/inline.js';\nimport Quill from '../core/quill.js';\nimport Module from '../core/module.js';\nimport { blockDelta } from '../blots/block.js';\nimport BreakBlot from '../blots/break.js';\nimport CursorBlot from '../blots/cursor.js';\nimport TextBlot, { escapeText } from '../blots/text.js';\nimport CodeBlock, { CodeBlockContainer } from '../formats/code.js';\nimport { traverse } from './clipboard.js';\n\nconst TokenAttributor = new ClassAttributor('code-token', 'hljs', {\n  scope: Scope.INLINE,\n});\nclass CodeToken extends Inline {\n  static formats(node: Element, scroll: ScrollBlot) {\n    while (node != null && node !== scroll.domNode) {\n      if (node.classList && node.classList.contains(CodeBlock.className)) {\n        // @ts-expect-error\n        return super.formats(node, scroll);\n      }\n      // @ts-expect-error\n      node = node.parentNode;\n    }\n    return undefined;\n  }\n\n  constructor(scroll: ScrollBlot, domNode: Node, value: unknown) {\n    // @ts-expect-error\n    super(scroll, domNode, value);\n    TokenAttributor.add(this.domNode, value);\n  }\n\n  format(format: string, value: unknown) {\n    if (format !== CodeToken.blotName) {\n      super.format(format, value);\n    } else if (value) {\n      TokenAttributor.add(this.domNode, value);\n    } else {\n      TokenAttributor.remove(this.domNode);\n      this.domNode.classList.remove(this.statics.className);\n    }\n  }\n\n  optimize(...args: unknown[]) {\n    // @ts-expect-error\n    super.optimize(...args);\n    if (!TokenAttributor.value(this.domNode)) {\n      this.unwrap();\n    }\n  }\n}\nCodeToken.blotName = 'code-token';\nCodeToken.className = 'ql-token';\n\nclass SyntaxCodeBlock extends CodeBlock {\n  static create(value: unknown) {\n    const domNode = super.create(value);\n    if (typeof value === 'string') {\n      domNode.setAttribute('data-language', value);\n    }\n    return domNode;\n  }\n\n  static formats(domNode: Node) {\n    // @ts-expect-error\n    return domNode.getAttribute('data-language') || 'plain';\n  }\n\n  static register() {} // Syntax module will register\n\n  format(name: string, value: unknown) {\n    if (name === this.statics.blotName && value) {\n      // @ts-expect-error\n      this.domNode.setAttribute('data-language', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  replaceWith(name: string | Blot, value?: any) {\n    this.formatAt(0, this.length(), CodeToken.blotName, false);\n    return super.replaceWith(name, value);\n  }\n}\n\nclass SyntaxCodeBlockContainer extends CodeBlockContainer {\n  forceNext?: boolean;\n  cachedText?: string | null;\n\n  attach() {\n    super.attach();\n    this.forceNext = false;\n    // @ts-expect-error\n    this.scroll.emitMount(this);\n  }\n\n  format(name: string, value: unknown) {\n    if (name === SyntaxCodeBlock.blotName) {\n      this.forceNext = true;\n      this.children.forEach((child) => {\n        // @ts-expect-error\n        child.format(name, value);\n      });\n    }\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    if (name === SyntaxCodeBlock.blotName) {\n      this.forceNext = true;\n    }\n    super.formatAt(index, length, name, value);\n  }\n\n  highlight(\n    highlight: (text: string, language: string) => Delta,\n    forced = false,\n  ) {\n    if (this.children.head == null) return;\n    const nodes = Array.from(this.domNode.childNodes).filter(\n      (node) => node !== this.uiNode,\n    );\n    const text = `${nodes.map((node) => node.textContent).join('\\n')}\\n`;\n    const language = SyntaxCodeBlock.formats(this.children.head.domNode);\n    if (forced || this.forceNext || this.cachedText !== text) {\n      if (text.trim().length > 0 || this.cachedText == null) {\n        const oldDelta = this.children.reduce((delta, child) => {\n          // @ts-expect-error\n          return delta.concat(blockDelta(child, false));\n        }, new Delta());\n        const delta = highlight(text, language);\n        oldDelta.diff(delta).reduce((index, { retain, attributes }) => {\n          // Should be all retains\n          if (!retain) return index;\n          if (attributes) {\n            Object.keys(attributes).forEach((format) => {\n              if (\n                [SyntaxCodeBlock.blotName, CodeToken.blotName].includes(format)\n              ) {\n                // @ts-expect-error\n                this.formatAt(index, retain, format, attributes[format]);\n              }\n            });\n          }\n          // @ts-expect-error\n          return index + retain;\n        }, 0);\n      }\n      this.cachedText = text;\n      this.forceNext = false;\n    }\n  }\n\n  html(index: number, length: number) {\n    const [codeBlock] = this.children.find(index);\n    const language = codeBlock\n      ? SyntaxCodeBlock.formats(codeBlock.domNode)\n      : 'plain';\n\n    return `<pre data-language=\"${language}\">\\n${escapeText(\n      this.code(index, length),\n    )}\\n</pre>`;\n  }\n\n  optimize(context: Record<string, any>) {\n    super.optimize(context);\n    if (\n      this.parent != null &&\n      this.children.head != null &&\n      this.uiNode != null\n    ) {\n      const language = SyntaxCodeBlock.formats(this.children.head.domNode);\n      // @ts-expect-error\n      if (language !== this.uiNode.value) {\n        // @ts-expect-error\n        this.uiNode.value = language;\n      }\n    }\n  }\n}\n\nSyntaxCodeBlockContainer.allowedChildren = [SyntaxCodeBlock];\nSyntaxCodeBlock.requiredContainer = SyntaxCodeBlockContainer;\nSyntaxCodeBlock.allowedChildren = [CodeToken, CursorBlot, TextBlot, BreakBlot];\n\ninterface SyntaxOptions {\n  interval: number;\n  languages: { key: string; label: string }[];\n  hljs: any;\n}\n\nconst highlight = (lib: any, language: string, text: string) => {\n  if (typeof lib.versionString === 'string') {\n    const majorVersion = lib.versionString.split('.')[0];\n    if (parseInt(majorVersion, 10) >= 11) {\n      return lib.highlight(text, { language }).value;\n    }\n  }\n  return lib.highlight(language, text).value;\n};\n\nclass Syntax extends Module<SyntaxOptions> {\n  static DEFAULTS: SyntaxOptions & { hljs: any };\n\n  static register() {\n    Quill.register(CodeToken, true);\n    Quill.register(SyntaxCodeBlock, true);\n    Quill.register(SyntaxCodeBlockContainer, true);\n  }\n\n  languages: Record<string, true>;\n\n  constructor(quill: Quill, options: Partial<SyntaxOptions>) {\n    super(quill, options);\n    if (this.options.hljs == null) {\n      throw new Error(\n        'Syntax module requires highlight.js. Please include the library on the page before Quill.',\n      );\n    }\n    // @ts-expect-error Fix me later\n    this.languages = this.options.languages.reduce(\n      (memo: Record<string, unknown>, { key }) => {\n        memo[key] = true;\n        return memo;\n      },\n      {},\n    );\n    this.highlightBlot = this.highlightBlot.bind(this);\n    this.initListener();\n    this.initTimer();\n  }\n\n  initListener() {\n    this.quill.on(Quill.events.SCROLL_BLOT_MOUNT, (blot: Blot) => {\n      if (!(blot instanceof SyntaxCodeBlockContainer)) return;\n      const select = this.quill.root.ownerDocument.createElement('select');\n      // @ts-expect-error Fix me later\n      this.options.languages.forEach(({ key, label }) => {\n        const option = select.ownerDocument.createElement('option');\n        option.textContent = label;\n        option.setAttribute('value', key);\n        select.appendChild(option);\n      });\n      select.addEventListener('change', () => {\n        blot.format(SyntaxCodeBlock.blotName, select.value);\n        this.quill.root.focus(); // Prevent scrolling\n        this.highlight(blot, true);\n      });\n      if (blot.uiNode == null) {\n        blot.attachUI(select);\n        if (blot.children.head) {\n          select.value = SyntaxCodeBlock.formats(blot.children.head.domNode);\n        }\n      }\n    });\n  }\n\n  initTimer() {\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    this.quill.on(Quill.events.SCROLL_OPTIMIZE, () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      timer = setTimeout(() => {\n        this.highlight();\n        timer = null;\n      }, this.options.interval);\n    });\n  }\n\n  highlight(blot: SyntaxCodeBlockContainer | null = null, force = false) {\n    if (this.quill.selection.composing) return;\n    this.quill.update(Quill.sources.USER);\n    const range = this.quill.getSelection();\n    const blots =\n      blot == null\n        ? this.quill.scroll.descendants(SyntaxCodeBlockContainer)\n        : [blot];\n    blots.forEach((container) => {\n      container.highlight(this.highlightBlot, force);\n    });\n    this.quill.update(Quill.sources.SILENT);\n    if (range != null) {\n      this.quill.setSelection(range, Quill.sources.SILENT);\n    }\n  }\n\n  highlightBlot(text: string, language = 'plain') {\n    language = this.languages[language] ? language : 'plain';\n    if (language === 'plain') {\n      return escapeText(text)\n        .split('\\n')\n        .reduce((delta, line, i) => {\n          if (i !== 0) {\n            delta.insert('\\n', { [CodeBlock.blotName]: language });\n          }\n          return delta.insert(line);\n        }, new Delta());\n    }\n    const container = this.quill.root.ownerDocument.createElement('div');\n    container.classList.add(CodeBlock.className);\n    container.innerHTML = highlight(this.options.hljs, language, text);\n    return traverse(\n      this.quill.scroll,\n      container,\n      [\n        (node, delta) => {\n          // @ts-expect-error\n          const value = TokenAttributor.value(node);\n          if (value) {\n            return delta.compose(\n              new Delta().retain(delta.length(), {\n                [CodeToken.blotName]: value,\n              }),\n            );\n          }\n          return delta;\n        },\n      ],\n      [\n        (node, delta) => {\n          // @ts-expect-error\n          return node.data.split('\\n').reduce((memo, nodeText, i) => {\n            if (i !== 0) memo.insert('\\n', { [CodeBlock.blotName]: language });\n            return memo.insert(nodeText);\n          }, delta);\n        },\n      ],\n      new WeakMap(),\n    );\n  }\n}\nSyntax.DEFAULTS = {\n  hljs: (() => {\n    return window.hljs;\n  })(),\n  interval: 1000,\n  languages: [\n    { key: 'plain', label: 'Plain' },\n    { key: 'bash', label: 'Bash' },\n    { key: 'cpp', label: 'C++' },\n    { key: 'cs', label: 'C#' },\n    { key: 'css', label: 'CSS' },\n    { key: 'diff', label: 'Diff' },\n    { key: 'xml', label: 'HTML/XML' },\n    { key: 'java', label: 'Java' },\n    { key: 'javascript', label: 'JavaScript' },\n    { key: 'markdown', label: 'Markdown' },\n    { key: 'php', label: 'PHP' },\n    { key: 'python', label: 'Python' },\n    { key: 'ruby', label: 'Ruby' },\n    { key: 'sql', label: 'SQL' },\n  ],\n};\n\nexport { SyntaxCodeBlock as CodeBlock, CodeToken, Syntax as default };\n", "import Delta from 'quill-delta';\nimport Quill from '../core/quill.js';\nimport Module from '../core/module.js';\nimport {\n  TableCell,\n  TableRow,\n  TableBody,\n  TableContainer,\n  tableId,\n} from '../formats/table.js';\n\nclass Table extends Module {\n  static register() {\n    Quill.register(TableCell);\n    Quill.register(TableRow);\n    Quill.register(TableBody);\n    Quill.register(TableContainer);\n  }\n\n  constructor(...args: ConstructorParameters<typeof Module>) {\n    super(...args);\n    this.listenBalanceCells();\n  }\n\n  balanceTables() {\n    this.quill.scroll.descendants(TableContainer).forEach((table) => {\n      table.balanceCells();\n    });\n  }\n\n  deleteColumn() {\n    const [table, , cell] = this.getTable();\n    if (cell == null) return;\n    // @ts-expect-error\n    table.deleteColumn(cell.cellOffset());\n    this.quill.update(Quill.sources.USER);\n  }\n\n  deleteRow() {\n    const [, row] = this.getTable();\n    if (row == null) return;\n    row.remove();\n    this.quill.update(Quill.sources.USER);\n  }\n\n  deleteTable() {\n    const [table] = this.getTable();\n    if (table == null) return;\n    // @ts-expect-error\n    const offset = table.offset();\n    // @ts-expect-error\n    table.remove();\n    this.quill.update(Quill.sources.USER);\n    this.quill.setSelection(offset, Quill.sources.SILENT);\n  }\n\n  getTable(\n    range = this.quill.getSelection(),\n  ): [null, null, null, -1] | [Table, TableRow, TableCell, number] {\n    if (range == null) return [null, null, null, -1];\n    const [cell, offset] = this.quill.getLine(range.index);\n    if (cell == null || cell.statics.blotName !== TableCell.blotName) {\n      return [null, null, null, -1];\n    }\n    const row = cell.parent;\n    const table = row.parent.parent;\n    // @ts-expect-error\n    return [table, row, cell, offset];\n  }\n\n  insertColumn(offset: number) {\n    const range = this.quill.getSelection();\n    if (!range) return;\n    const [table, row, cell] = this.getTable(range);\n    if (cell == null) return;\n    const column = cell.cellOffset();\n    table.insertColumn(column + offset);\n    this.quill.update(Quill.sources.USER);\n    let shift = row.rowOffset();\n    if (offset === 0) {\n      shift += 1;\n    }\n    this.quill.setSelection(\n      range.index + shift,\n      range.length,\n      Quill.sources.SILENT,\n    );\n  }\n\n  insertColumnLeft() {\n    this.insertColumn(0);\n  }\n\n  insertColumnRight() {\n    this.insertColumn(1);\n  }\n\n  insertRow(offset: number) {\n    const range = this.quill.getSelection();\n    if (!range) return;\n    const [table, row, cell] = this.getTable(range);\n    if (cell == null) return;\n    const index = row.rowOffset();\n    table.insertRow(index + offset);\n    this.quill.update(Quill.sources.USER);\n    if (offset > 0) {\n      this.quill.setSelection(range, Quill.sources.SILENT);\n    } else {\n      this.quill.setSelection(\n        range.index + row.children.length,\n        range.length,\n        Quill.sources.SILENT,\n      );\n    }\n  }\n\n  insertRowAbove() {\n    this.insertRow(0);\n  }\n\n  insertRowBelow() {\n    this.insertRow(1);\n  }\n\n  insertTable(rows: number, columns: number) {\n    const range = this.quill.getSelection();\n    if (range == null) return;\n    const delta = new Array(rows).fill(0).reduce((memo) => {\n      const text = new Array(columns).fill('\\n').join('');\n      return memo.insert(text, { table: tableId() });\n    }, new Delta().retain(range.index));\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.setSelection(range.index, Quill.sources.SILENT);\n    this.balanceTables();\n  }\n\n  listenBalanceCells() {\n    this.quill.on(\n      Quill.events.SCROLL_OPTIMIZE,\n      (mutations: MutationRecord[]) => {\n        mutations.some((mutation) => {\n          if (\n            ['TD', 'TR', 'TBODY', 'TABLE'].includes(\n              (mutation.target as HTMLElement).tagName,\n            )\n          ) {\n            this.quill.once(Quill.events.TEXT_CHANGE, (delta, old, source) => {\n              if (source !== Quill.sources.USER) return;\n              this.balanceTables();\n            });\n            return true;\n          }\n          return false;\n        });\n      },\n    );\n  }\n}\n\nexport default Table;\n", "import type { LinkedList } from 'parchment';\nimport Block from '../blots/block.js';\nimport Container from '../blots/container.js';\n\nclass TableCell extends Block {\n  static blotName = 'table';\n  static tagName = 'TD';\n\n  static create(value: string) {\n    const node = super.create() as HTMLElement;\n    if (value) {\n      node.setAttribute('data-row', value);\n    } else {\n      node.setAttribute('data-row', tableId());\n    }\n    return node;\n  }\n\n  static formats(domNode: HTMLElement) {\n    if (domNode.hasAttribute('data-row')) {\n      return domNode.getAttribute('data-row');\n    }\n    return undefined;\n  }\n\n  next: this | null;\n\n  cellOffset() {\n    if (this.parent) {\n      return this.parent.children.indexOf(this);\n    }\n    return -1;\n  }\n\n  format(name: string, value: string) {\n    if (name === TableCell.blotName && value) {\n      this.domNode.setAttribute('data-row', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  row(): TableRow {\n    return this.parent as TableRow;\n  }\n\n  rowOffset() {\n    if (this.row()) {\n      return this.row().rowOffset();\n    }\n    return -1;\n  }\n\n  table() {\n    return this.row() && this.row().table();\n  }\n}\n\nclass TableRow extends Container {\n  static blotName = 'table-row';\n  static tagName = 'TR';\n\n  children: LinkedList<TableCell>;\n  next: this | null;\n\n  checkMerge() {\n    // @ts-expect-error\n    if (super.checkMerge() && this.next.children.head != null) {\n      // @ts-expect-error\n      const thisHead = this.children.head.formats();\n      // @ts-expect-error\n      const thisTail = this.children.tail.formats();\n      // @ts-expect-error\n      const nextHead = this.next.children.head.formats();\n      // @ts-expect-error\n      const nextTail = this.next.children.tail.formats();\n      return (\n        thisHead.table === thisTail.table &&\n        thisHead.table === nextHead.table &&\n        thisHead.table === nextTail.table\n      );\n    }\n    return false;\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    this.children.forEach((child) => {\n      if (child.next == null) return;\n      const childFormats = child.formats();\n      const nextFormats = child.next.formats();\n      if (childFormats.table !== nextFormats.table) {\n        const next = this.splitAfter(child);\n        if (next) {\n          // @ts-expect-error TODO: parameters of optimize() should be a optional\n          next.optimize();\n        }\n        // We might be able to merge with prev now\n        if (this.prev) {\n          // @ts-expect-error TODO: parameters of optimize() should be a optional\n          this.prev.optimize();\n        }\n      }\n    });\n  }\n\n  rowOffset() {\n    if (this.parent) {\n      return this.parent.children.indexOf(this);\n    }\n    return -1;\n  }\n\n  table() {\n    return this.parent && this.parent.parent;\n  }\n}\n\nclass TableBody extends Container {\n  static blotName = 'table-body';\n  static tagName = 'TBODY';\n\n  children: LinkedList<TableRow>;\n}\n\nclass TableContainer extends Container {\n  static blotName = 'table-container';\n  static tagName = 'TABLE';\n\n  children: LinkedList<TableBody>;\n\n  balanceCells() {\n    const rows = this.descendants(TableRow);\n    const maxColumns = rows.reduce((max, row) => {\n      return Math.max(row.children.length, max);\n    }, 0);\n    rows.forEach((row) => {\n      new Array(maxColumns - row.children.length).fill(0).forEach(() => {\n        let value;\n        if (row.children.head != null) {\n          value = TableCell.formats(row.children.head.domNode);\n        }\n        const blot = this.scroll.create(TableCell.blotName, value);\n        row.appendChild(blot);\n        // @ts-expect-error TODO: parameters of optimize() should be a optional\n        blot.optimize(); // Add break blot\n      });\n    });\n  }\n\n  cells(column: number) {\n    return this.rows().map((row) => row.children.at(column));\n  }\n\n  deleteColumn(index: number) {\n    // @ts-expect-error\n    const [body] = this.descendant(TableBody) as TableBody[];\n    if (body == null || body.children.head == null) return;\n    body.children.forEach((row) => {\n      const cell = row.children.at(index);\n      if (cell != null) {\n        cell.remove();\n      }\n    });\n  }\n\n  insertColumn(index: number) {\n    // @ts-expect-error\n    const [body] = this.descendant(TableBody) as TableBody[];\n    if (body == null || body.children.head == null) return;\n    body.children.forEach((row) => {\n      const ref = row.children.at(index);\n      // @ts-expect-error\n      const value = TableCell.formats(row.children.head.domNode);\n      const cell = this.scroll.create(TableCell.blotName, value);\n      row.insertBefore(cell, ref);\n    });\n  }\n\n  insertRow(index: number) {\n    // @ts-expect-error\n    const [body] = this.descendant(TableBody) as TableBody[];\n    if (body == null || body.children.head == null) return;\n    const id = tableId();\n    const row = this.scroll.create(TableRow.blotName) as TableRow;\n    body.children.head.children.forEach(() => {\n      const cell = this.scroll.create(TableCell.blotName, id);\n      row.appendChild(cell);\n    });\n    const ref = body.children.at(index);\n    body.insertBefore(row, ref);\n  }\n\n  rows() {\n    const body = this.children.head;\n    if (body == null) return [];\n    return body.children.map((row) => row);\n  }\n}\n\nTableContainer.allowedChildren = [TableBody];\nTableBody.requiredContainer = TableContainer;\n\nTableBody.allowedChildren = [TableRow];\nTableRow.requiredContainer = TableBody;\n\nTableRow.allowedChildren = [TableCell];\nTableCell.requiredContainer = TableRow;\n\nfunction tableId() {\n  const id = Math.random().toString(36).slice(2, 6);\n  return `row-${id}`;\n}\n\nexport { TableCell, TableRow, TableBody, TableContainer, tableId };\n", "import Delta from 'quill-delta';\nimport { EmbedBlot, Scope } from 'parchment';\nimport Quill from '../core/quill.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport type { Range } from '../core/selection.js';\n\nconst debug = logger('quill:toolbar');\n\ntype Handler = (this: Toolbar, value: any) => void;\n\nexport type ToolbarConfig = Array<\n  string[] | Array<string | Record<string, unknown>>\n>;\nexport interface ToolbarProps {\n  container?: HTMLElement | ToolbarConfig | null;\n  handlers?: Record<string, Handler>;\n  option?: number;\n  module?: boolean;\n  theme?: boolean;\n}\n\nclass Toolbar extends Module<ToolbarProps> {\n  static DEFAULTS: ToolbarProps;\n\n  container?: HTMLElement | null;\n  controls: [string, HTMLElement][];\n  handlers: Record<string, Handler>;\n\n  constructor(quill: Quill, options: Partial<ToolbarProps>) {\n    super(quill, options);\n    if (Array.isArray(this.options.container)) {\n      const container = document.createElement('div');\n      container.setAttribute('role', 'toolbar');\n      addControls(container, this.options.container);\n      quill.container?.parentNode?.insertBefore(container, quill.container);\n      this.container = container;\n    } else if (typeof this.options.container === 'string') {\n      this.container = document.querySelector(this.options.container);\n    } else {\n      this.container = this.options.container;\n    }\n    if (!(this.container instanceof HTMLElement)) {\n      debug.error('Container required for toolbar', this.options);\n      return;\n    }\n    this.container.classList.add('ql-toolbar');\n    this.controls = [];\n    this.handlers = {};\n    if (this.options.handlers) {\n      Object.keys(this.options.handlers).forEach((format) => {\n        const handler = this.options.handlers?.[format];\n        if (handler) {\n          this.addHandler(format, handler);\n        }\n      });\n    }\n    Array.from(this.container.querySelectorAll('button, select')).forEach(\n      (input) => {\n        // @ts-expect-error\n        this.attach(input);\n      },\n    );\n    this.quill.on(Quill.events.EDITOR_CHANGE, () => {\n      const [range] = this.quill.selection.getRange(); // quill.getSelection triggers update\n      this.update(range);\n    });\n  }\n\n  addHandler(format: string, handler: Handler) {\n    this.handlers[format] = handler;\n  }\n\n  attach(input: HTMLElement) {\n    let format = Array.from(input.classList).find((className) => {\n      return className.indexOf('ql-') === 0;\n    });\n    if (!format) return;\n    format = format.slice('ql-'.length);\n    if (input.tagName === 'BUTTON') {\n      input.setAttribute('type', 'button');\n    }\n    if (\n      this.handlers[format] == null &&\n      this.quill.scroll.query(format) == null\n    ) {\n      debug.warn('ignoring attaching to nonexistent format', format, input);\n      return;\n    }\n    const eventName = input.tagName === 'SELECT' ? 'change' : 'click';\n    input.addEventListener(eventName, (e) => {\n      let value;\n      if (input.tagName === 'SELECT') {\n        // @ts-expect-error\n        if (input.selectedIndex < 0) return;\n        // @ts-expect-error\n        const selected = input.options[input.selectedIndex];\n        if (selected.hasAttribute('selected')) {\n          value = false;\n        } else {\n          value = selected.value || false;\n        }\n      } else {\n        if (input.classList.contains('ql-active')) {\n          value = false;\n        } else {\n          // @ts-expect-error\n          value = input.value || !input.hasAttribute('value');\n        }\n        e.preventDefault();\n      }\n      this.quill.focus();\n      const [range] = this.quill.selection.getRange();\n      if (this.handlers[format] != null) {\n        this.handlers[format].call(this, value);\n      } else if (\n        // @ts-expect-error\n        this.quill.scroll.query(format).prototype instanceof EmbedBlot\n      ) {\n        value = prompt(`Enter ${format}`); // eslint-disable-line no-alert\n        if (!value) return;\n        this.quill.updateContents(\n          new Delta()\n            // @ts-expect-error Fix me later\n            .retain(range.index)\n            // @ts-expect-error Fix me later\n            .delete(range.length)\n            .insert({ [format]: value }),\n          Quill.sources.USER,\n        );\n      } else {\n        this.quill.format(format, value, Quill.sources.USER);\n      }\n      this.update(range);\n    });\n    this.controls.push([format, input]);\n  }\n\n  update(range: Range | null) {\n    const formats = range == null ? {} : this.quill.getFormat(range);\n    this.controls.forEach((pair) => {\n      const [format, input] = pair;\n      if (input.tagName === 'SELECT') {\n        let option: HTMLOptionElement | null = null;\n        if (range == null) {\n          option = null;\n        } else if (formats[format] == null) {\n          option = input.querySelector('option[selected]');\n        } else if (!Array.isArray(formats[format])) {\n          let value = formats[format];\n          if (typeof value === 'string') {\n            value = value.replace(/\"/g, '\\\\\"');\n          }\n          option = input.querySelector(`option[value=\"${value}\"]`);\n        }\n        if (option == null) {\n          // @ts-expect-error TODO fix me later\n          input.value = ''; // TODO make configurable?\n          // @ts-expect-error TODO fix me later\n          input.selectedIndex = -1;\n        } else {\n          option.selected = true;\n        }\n      } else if (range == null) {\n        input.classList.remove('ql-active');\n        input.setAttribute('aria-pressed', 'false');\n      } else if (input.hasAttribute('value')) {\n        // both being null should match (default values)\n        // '1' should match with 1 (headers)\n        const value = formats[format] as boolean | number | string | object;\n        const isActive =\n          value === input.getAttribute('value') ||\n          (value != null && value.toString() === input.getAttribute('value')) ||\n          (value == null && !input.getAttribute('value'));\n        input.classList.toggle('ql-active', isActive);\n        input.setAttribute('aria-pressed', isActive.toString());\n      } else {\n        const isActive = formats[format] != null;\n        input.classList.toggle('ql-active', isActive);\n        input.setAttribute('aria-pressed', isActive.toString());\n      }\n    });\n  }\n}\nToolbar.DEFAULTS = {};\n\nfunction addButton(container: HTMLElement, format: string, value?: string) {\n  const input = document.createElement('button');\n  input.setAttribute('type', 'button');\n  input.classList.add(`ql-${format}`);\n  input.setAttribute('aria-pressed', 'false');\n  if (value != null) {\n    input.value = value;\n    input.setAttribute('aria-label', `${format}: ${value}`);\n  } else {\n    input.setAttribute('aria-label', format);\n  }\n  container.appendChild(input);\n}\n\nfunction addControls(\n  container: HTMLElement,\n  groups:\n    | (string | Record<string, unknown>)[][]\n    | (string | Record<string, unknown>)[],\n) {\n  if (!Array.isArray(groups[0])) {\n    // @ts-expect-error\n    groups = [groups];\n  }\n  groups.forEach((controls: any) => {\n    const group = document.createElement('span');\n    group.classList.add('ql-formats');\n    controls.forEach((control: any) => {\n      if (typeof control === 'string') {\n        addButton(group, control);\n      } else {\n        const format = Object.keys(control)[0];\n        const value = control[format];\n        if (Array.isArray(value)) {\n          addSelect(group, format, value);\n        } else {\n          addButton(group, format, value);\n        }\n      }\n    });\n    container.appendChild(group);\n  });\n}\n\nfunction addSelect(\n  container: HTMLElement,\n  format: string,\n  values: Array<string | boolean>,\n) {\n  const input = document.createElement('select');\n  input.classList.add(`ql-${format}`);\n  values.forEach((value) => {\n    const option = document.createElement('option');\n    if (value !== false) {\n      option.setAttribute('value', String(value));\n    } else {\n      option.setAttribute('selected', 'selected');\n    }\n    input.appendChild(option);\n  });\n  container.appendChild(input);\n}\n\nToolbar.DEFAULTS = {\n  container: null,\n  handlers: {\n    clean() {\n      const range = this.quill.getSelection();\n      if (range == null) return;\n      if (range.length === 0) {\n        const formats = this.quill.getFormat();\n        Object.keys(formats).forEach((name) => {\n          // Clean functionality in existing apps only clean inline formats\n          if (this.quill.scroll.query(name, Scope.INLINE) != null) {\n            this.quill.format(name, false, Quill.sources.USER);\n          }\n        });\n      } else {\n        this.quill.removeFormat(range.index, range.length, Quill.sources.USER);\n      }\n    },\n    direction(value) {\n      const { align } = this.quill.getFormat();\n      if (value === 'rtl' && align == null) {\n        this.quill.format('align', 'right', Quill.sources.USER);\n      } else if (!value && align === 'right') {\n        this.quill.format('align', false, Quill.sources.USER);\n      }\n      this.quill.format('direction', value, Quill.sources.USER);\n    },\n    indent(value) {\n      const range = this.quill.getSelection();\n      // @ts-expect-error\n      const formats = this.quill.getFormat(range);\n      // @ts-expect-error\n      const indent = parseInt(formats.indent || 0, 10);\n      if (value === '+1' || value === '-1') {\n        let modifier = value === '+1' ? 1 : -1;\n        if (formats.direction === 'rtl') modifier *= -1;\n        this.quill.format('indent', indent + modifier, Quill.sources.USER);\n      }\n    },\n    link(value) {\n      if (value === true) {\n        value = prompt('Enter link URL:'); // eslint-disable-line no-alert\n      }\n      this.quill.format('link', value, Quill.sources.USER);\n    },\n    list(value) {\n      const range = this.quill.getSelection();\n      // @ts-expect-error\n      const formats = this.quill.getFormat(range);\n      if (value === 'check') {\n        if (formats.list === 'checked' || formats.list === 'unchecked') {\n          this.quill.format('list', false, Quill.sources.USER);\n        } else {\n          this.quill.format('list', 'unchecked', Quill.sources.USER);\n        }\n      } else {\n        this.quill.format('list', value, Quill.sources.USER);\n      }\n    },\n  },\n};\n\nexport { Toolbar as default, addControls };\n", "import alignLeftIcon from '../assets/icons/align-left.svg';\nimport alignCenterIcon from '../assets/icons/align-center.svg';\nimport alignRightIcon from '../assets/icons/align-right.svg';\nimport alignJustifyIcon from '../assets/icons/align-justify.svg';\nimport backgroundIcon from '../assets/icons/background.svg';\nimport blockquoteIcon from '../assets/icons/blockquote.svg';\nimport boldIcon from '../assets/icons/bold.svg';\nimport cleanIcon from '../assets/icons/clean.svg';\nimport codeIcon from '../assets/icons/code.svg';\nimport colorIcon from '../assets/icons/color.svg';\nimport directionLeftToRightIcon from '../assets/icons/direction-ltr.svg';\nimport directionRightToLeftIcon from '../assets/icons/direction-rtl.svg';\nimport formulaIcon from '../assets/icons/formula.svg';\nimport headerIcon from '../assets/icons/header.svg';\nimport header2Icon from '../assets/icons/header-2.svg';\nimport header3Icon from '../assets/icons/header-3.svg';\nimport header4Icon from '../assets/icons/header-4.svg';\nimport header5Icon from '../assets/icons/header-5.svg';\nimport header6Icon from '../assets/icons/header-6.svg';\nimport italicIcon from '../assets/icons/italic.svg';\nimport imageIcon from '../assets/icons/image.svg';\nimport indentIcon from '../assets/icons/indent.svg';\nimport outdentIcon from '../assets/icons/outdent.svg';\nimport linkIcon from '../assets/icons/link.svg';\nimport listBulletIcon from '../assets/icons/list-bullet.svg';\nimport listCheckIcon from '../assets/icons/list-check.svg';\nimport listOrderedIcon from '../assets/icons/list-ordered.svg';\nimport subscriptIcon from '../assets/icons/subscript.svg';\nimport superscriptIcon from '../assets/icons/superscript.svg';\nimport strikeIcon from '../assets/icons/strike.svg';\nimport tableIcon from '../assets/icons/table.svg';\nimport underlineIcon from '../assets/icons/underline.svg';\nimport videoIcon from '../assets/icons/video.svg';\n\nexport default {\n  align: {\n    '': alignLeftIcon,\n    center: alignCenterIcon,\n    right: alignRightIcon,\n    justify: alignJustifyIcon,\n  },\n  background: backgroundIcon,\n  blockquote: blockquoteIcon,\n  bold: boldIcon,\n  clean: cleanIcon,\n  code: codeIcon,\n  'code-block': codeIcon,\n  color: colorIcon,\n  direction: {\n    '': directionLeftToRightIcon,\n    rtl: directionRightToLeftIcon,\n  },\n  formula: formulaIcon,\n  header: {\n    '1': headerIcon,\n    '2': header2Icon,\n    '3': header3Icon,\n    '4': header4Icon,\n    '5': header5Icon,\n    '6': header6Icon,\n  },\n  italic: italicIcon,\n  image: imageIcon,\n  indent: {\n    '+1': indentIcon,\n    '-1': outdentIcon,\n  },\n  link: linkIcon,\n  list: {\n    bullet: listBulletIcon,\n    check: listCheckIcon,\n    ordered: listOrderedIcon,\n  },\n  script: {\n    sub: subscriptIcon,\n    super: superscriptIcon,\n  },\n  strike: strikeIcon,\n  table: tableIcon,\n  underline: underlineIcon,\n  video: videoIcon,\n};\n", "import DropdownIcon from '../assets/icons/dropdown.svg';\n\nlet optionsCounter = 0;\n\nfunction toggleAriaAttribute(element: HTMLElement, attribute: string) {\n  element.setAttribute(\n    attribute,\n    `${!(element.getAttribute(attribute) === 'true')}`,\n  );\n}\n\nclass Picker {\n  select: HTMLSelectElement;\n  container: HTMLElement;\n  label: HTMLElement;\n\n  constructor(select: HTMLSelectElement) {\n    this.select = select;\n    this.container = document.createElement('span');\n    this.buildPicker();\n    this.select.style.display = 'none';\n    // @ts-expect-error Fix me later\n    this.select.parentNode.insertBefore(this.container, this.select);\n\n    this.label.addEventListener('mousedown', () => {\n      this.togglePicker();\n    });\n    this.label.addEventListener('keydown', (event) => {\n      switch (event.key) {\n        case 'Enter':\n          this.togglePicker();\n          break;\n        case 'Escape':\n          this.escape();\n          event.preventDefault();\n          break;\n        default:\n      }\n    });\n    this.select.addEventListener('change', this.update.bind(this));\n  }\n\n  togglePicker() {\n    this.container.classList.toggle('ql-expanded');\n    // Toggle aria-expanded and aria-hidden to make the picker accessible\n    toggleAriaAttribute(this.label, 'aria-expanded');\n    // @ts-expect-error\n    toggleAriaAttribute(this.options, 'aria-hidden');\n  }\n\n  buildItem(option: HTMLOptionElement) {\n    const item = document.createElement('span');\n    // @ts-expect-error\n    item.tabIndex = '0';\n    item.setAttribute('role', 'button');\n    item.classList.add('ql-picker-item');\n    const value = option.getAttribute('value');\n    if (value) {\n      item.setAttribute('data-value', value);\n    }\n    if (option.textContent) {\n      item.setAttribute('data-label', option.textContent);\n    }\n    item.addEventListener('click', () => {\n      this.selectItem(item, true);\n    });\n    item.addEventListener('keydown', (event) => {\n      switch (event.key) {\n        case 'Enter':\n          this.selectItem(item, true);\n          event.preventDefault();\n          break;\n        case 'Escape':\n          this.escape();\n          event.preventDefault();\n          break;\n        default:\n      }\n    });\n\n    return item;\n  }\n\n  buildLabel() {\n    const label = document.createElement('span');\n    label.classList.add('ql-picker-label');\n    label.innerHTML = DropdownIcon;\n    // @ts-expect-error\n    label.tabIndex = '0';\n    label.setAttribute('role', 'button');\n    label.setAttribute('aria-expanded', 'false');\n    this.container.appendChild(label);\n    return label;\n  }\n\n  buildOptions() {\n    const options = document.createElement('span');\n    options.classList.add('ql-picker-options');\n\n    // Don't want screen readers to read this until options are visible\n    options.setAttribute('aria-hidden', 'true');\n    // @ts-expect-error\n    options.tabIndex = '-1';\n\n    // Need a unique id for aria-controls\n    options.id = `ql-picker-options-${optionsCounter}`;\n    optionsCounter += 1;\n    this.label.setAttribute('aria-controls', options.id);\n\n    // @ts-expect-error\n    this.options = options;\n\n    Array.from(this.select.options).forEach((option) => {\n      const item = this.buildItem(option);\n      options.appendChild(item);\n      if (option.selected === true) {\n        this.selectItem(item);\n      }\n    });\n    this.container.appendChild(options);\n  }\n\n  buildPicker() {\n    Array.from(this.select.attributes).forEach((item) => {\n      this.container.setAttribute(item.name, item.value);\n    });\n    this.container.classList.add('ql-picker');\n    this.label = this.buildLabel();\n    this.buildOptions();\n  }\n\n  escape() {\n    // Close menu and return focus to trigger label\n    this.close();\n    // Need setTimeout for accessibility to ensure that the browser executes\n    // focus on the next process thread and after any DOM content changes\n    setTimeout(() => this.label.focus(), 1);\n  }\n\n  close() {\n    this.container.classList.remove('ql-expanded');\n    this.label.setAttribute('aria-expanded', 'false');\n    // @ts-expect-error\n    this.options.setAttribute('aria-hidden', 'true');\n  }\n\n  selectItem(item: HTMLElement | null, trigger = false) {\n    const selected = this.container.querySelector('.ql-selected');\n    if (item === selected) return;\n    if (selected != null) {\n      selected.classList.remove('ql-selected');\n    }\n    if (item == null) return;\n    item.classList.add('ql-selected');\n    // @ts-expect-error Fix me later\n    this.select.selectedIndex = Array.from(item.parentNode.children).indexOf(\n      item,\n    );\n    if (item.hasAttribute('data-value')) {\n      // @ts-expect-error Fix me later\n      this.label.setAttribute('data-value', item.getAttribute('data-value'));\n    } else {\n      this.label.removeAttribute('data-value');\n    }\n    if (item.hasAttribute('data-label')) {\n      // @ts-expect-error Fix me later\n      this.label.setAttribute('data-label', item.getAttribute('data-label'));\n    } else {\n      this.label.removeAttribute('data-label');\n    }\n    if (trigger) {\n      this.select.dispatchEvent(new Event('change'));\n      this.close();\n    }\n  }\n\n  update() {\n    let option;\n    if (this.select.selectedIndex > -1) {\n      const item =\n        // @ts-expect-error Fix me later\n        this.container.querySelector('.ql-picker-options').children[\n          this.select.selectedIndex\n        ];\n      option = this.select.options[this.select.selectedIndex];\n      // @ts-expect-error\n      this.selectItem(item);\n    } else {\n      this.selectItem(null);\n    }\n    const isActive =\n      option != null &&\n      option !== this.select.querySelector('option[selected]');\n    this.label.classList.toggle('ql-active', isActive);\n  }\n}\n\nexport default Picker;\n", "import Picker from './picker.js';\n\nclass ColorPicker extends Picker {\n  constructor(select: HTMLSelectElement, label: string) {\n    super(select);\n    this.label.innerHTML = label;\n    this.container.classList.add('ql-color-picker');\n    Array.from(this.container.querySelectorAll('.ql-picker-item'))\n      .slice(0, 7)\n      .forEach((item) => {\n        item.classList.add('ql-primary');\n      });\n  }\n\n  buildItem(option: HTMLOptionElement) {\n    const item = super.buildItem(option);\n    item.style.backgroundColor = option.getAttribute('value') || '';\n    return item;\n  }\n\n  selectItem(item: HTMLElement | null, trigger?: boolean) {\n    super.selectItem(item, trigger);\n    const colorLabel = this.label.querySelector<HTMLElement>('.ql-color-label');\n    const value = item ? item.getAttribute('data-value') || '' : '';\n    if (colorLabel) {\n      if (colorLabel.tagName === 'line') {\n        colorLabel.style.stroke = value;\n      } else {\n        colorLabel.style.fill = value;\n      }\n    }\n  }\n}\n\nexport default ColorPicker;\n", "import Picker from './picker.js';\n\nclass IconPicker extends Picker {\n  defaultItem: HTMLElement | null;\n\n  constructor(select: HTMLSelectElement, icons: Record<string, string>) {\n    super(select);\n    this.container.classList.add('ql-icon-picker');\n    Array.from(this.container.querySelectorAll('.ql-picker-item')).forEach(\n      (item) => {\n        item.innerHTML = icons[item.getAttribute('data-value') || ''];\n      },\n    );\n    this.defaultItem = this.container.querySelector('.ql-selected');\n    this.selectItem(this.defaultItem);\n  }\n\n  selectItem(target: HTMLElement | null, trigger?: boolean) {\n    super.selectItem(target, trigger);\n    const item = target || this.defaultItem;\n    if (item != null) {\n      if (this.label.innerHTML === item.innerHTML) return;\n      this.label.innerHTML = item.innerHTML;\n    }\n  }\n}\n\nexport default IconPicker;\n", "import type Quill from '../core.js';\nimport type { Bounds } from '../core/selection.js';\n\nconst isScrollable = (el: Element) => {\n  const { overflowY } = getComputedStyle(el, null);\n  return overflowY !== 'visible' && overflowY !== 'clip';\n};\n\nclass Tooltip {\n  quill: Quill;\n  boundsContainer: HTMLElement;\n  root: HTMLDivElement;\n\n  constructor(quill: Quill, boundsContainer?: HTMLElement) {\n    this.quill = quill;\n    this.boundsContainer = boundsContainer || document.body;\n    this.root = quill.addContainer('ql-tooltip');\n    // @ts-expect-error\n    this.root.innerHTML = this.constructor.TEMPLATE;\n    if (isScrollable(this.quill.root)) {\n      this.quill.root.addEventListener('scroll', () => {\n        this.root.style.marginTop = `${-1 * this.quill.root.scrollTop}px`;\n      });\n    }\n    this.hide();\n  }\n\n  hide() {\n    this.root.classList.add('ql-hidden');\n  }\n\n  position(reference: Bounds) {\n    const left =\n      reference.left + reference.width / 2 - this.root.offsetWidth / 2;\n    // root.scrollTop should be 0 if scrollContainer !== root\n    const top = reference.bottom + this.quill.root.scrollTop;\n    this.root.style.left = `${left}px`;\n    this.root.style.top = `${top}px`;\n    this.root.classList.remove('ql-flip');\n    const containerBounds = this.boundsContainer.getBoundingClientRect();\n    const rootBounds = this.root.getBoundingClientRect();\n    let shift = 0;\n    if (rootBounds.right > containerBounds.right) {\n      shift = containerBounds.right - rootBounds.right;\n      this.root.style.left = `${left + shift}px`;\n    }\n    if (rootBounds.left < containerBounds.left) {\n      shift = containerBounds.left - rootBounds.left;\n      this.root.style.left = `${left + shift}px`;\n    }\n    if (rootBounds.bottom > containerBounds.bottom) {\n      const height = rootBounds.bottom - rootBounds.top;\n      const verticalShift = reference.bottom - reference.top + height;\n      this.root.style.top = `${top - verticalShift}px`;\n      this.root.classList.add('ql-flip');\n    }\n    return shift;\n  }\n\n  show() {\n    this.root.classList.remove('ql-editing');\n    this.root.classList.remove('ql-hidden');\n  }\n}\n\nexport default Tooltip;\n", "import { merge } from 'lodash-es';\nimport type Quill from '../core/quill.js';\nimport Emitter from '../core/emitter.js';\nimport Theme from '../core/theme.js';\nimport type { ThemeOptions } from '../core/theme.js';\nimport ColorPicker from '../ui/color-picker.js';\nimport IconPicker from '../ui/icon-picker.js';\nimport Picker from '../ui/picker.js';\nimport Tooltip from '../ui/tooltip.js';\nimport type { Range } from '../core/selection.js';\nimport type Clipboard from '../modules/clipboard.js';\nimport type History from '../modules/history.js';\nimport type Keyboard from '../modules/keyboard.js';\nimport type Uploader from '../modules/uploader.js';\nimport type Selection from '../core/selection.js';\n\nconst ALIGNS = [false, 'center', 'right', 'justify'];\n\nconst COLORS = [\n  '#000000',\n  '#e60000',\n  '#ff9900',\n  '#ffff00',\n  '#008a00',\n  '#0066cc',\n  '#9933ff',\n  '#ffffff',\n  '#facccc',\n  '#ffebcc',\n  '#ffffcc',\n  '#cce8cc',\n  '#cce0f5',\n  '#ebd6ff',\n  '#bbbbbb',\n  '#f06666',\n  '#ffc266',\n  '#ffff66',\n  '#66b966',\n  '#66a3e0',\n  '#c285ff',\n  '#888888',\n  '#a10000',\n  '#b26b00',\n  '#b2b200',\n  '#006100',\n  '#0047b2',\n  '#6b24b2',\n  '#444444',\n  '#5c0000',\n  '#663d00',\n  '#666600',\n  '#003700',\n  '#002966',\n  '#3d1466',\n];\n\nconst FONTS = [false, 'serif', 'monospace'];\n\nconst HEADERS = ['1', '2', '3', false];\n\nconst SIZES = ['small', false, 'large', 'huge'];\n\nclass BaseTheme extends Theme {\n  pickers: Picker[];\n  tooltip?: Tooltip;\n\n  constructor(quill: Quill, options: ThemeOptions) {\n    super(quill, options);\n    const listener = (e: MouseEvent) => {\n      if (!document.body.contains(quill.root)) {\n        document.body.removeEventListener('click', listener);\n        return;\n      }\n      if (\n        this.tooltip != null &&\n        // @ts-expect-error\n        !this.tooltip.root.contains(e.target) &&\n        // @ts-expect-error\n        document.activeElement !== this.tooltip.textbox &&\n        !this.quill.hasFocus()\n      ) {\n        this.tooltip.hide();\n      }\n      if (this.pickers != null) {\n        this.pickers.forEach((picker) => {\n          // @ts-expect-error\n          if (!picker.container.contains(e.target)) {\n            picker.close();\n          }\n        });\n      }\n    };\n    quill.emitter.listenDOM('click', document.body, listener);\n  }\n\n  addModule(name: 'clipboard'): Clipboard;\n  addModule(name: 'keyboard'): Keyboard;\n  addModule(name: 'uploader'): Uploader;\n  addModule(name: 'history'): History;\n  addModule(name: 'selection'): Selection;\n  addModule(name: string): unknown;\n  addModule(name: string) {\n    const module = super.addModule(name);\n    if (name === 'toolbar') {\n      // @ts-expect-error\n      this.extendToolbar(module);\n    }\n    return module;\n  }\n\n  buildButtons(\n    buttons: NodeListOf<HTMLElement>,\n    icons: Record<string, Record<string, string> | string>,\n  ) {\n    Array.from(buttons).forEach((button) => {\n      const className = button.getAttribute('class') || '';\n      className.split(/\\s+/).forEach((name) => {\n        if (!name.startsWith('ql-')) return;\n        name = name.slice('ql-'.length);\n        if (icons[name] == null) return;\n        if (name === 'direction') {\n          // @ts-expect-error\n          button.innerHTML = icons[name][''] + icons[name].rtl;\n        } else if (typeof icons[name] === 'string') {\n          // @ts-expect-error\n          button.innerHTML = icons[name];\n        } else {\n          // @ts-expect-error\n          const value = button.value || '';\n          // @ts-expect-error\n          if (value != null && icons[name][value]) {\n            // @ts-expect-error\n            button.innerHTML = icons[name][value];\n          }\n        }\n      });\n    });\n  }\n\n  buildPickers(\n    selects: NodeListOf<HTMLSelectElement>,\n    icons: Record<string, string | Record<string, string>>,\n  ) {\n    this.pickers = Array.from(selects).map((select) => {\n      if (select.classList.contains('ql-align')) {\n        if (select.querySelector('option') == null) {\n          fillSelect(select, ALIGNS);\n        }\n        if (typeof icons.align === 'object') {\n          return new IconPicker(select, icons.align);\n        }\n      }\n      if (\n        select.classList.contains('ql-background') ||\n        select.classList.contains('ql-color')\n      ) {\n        const format = select.classList.contains('ql-background')\n          ? 'background'\n          : 'color';\n        if (select.querySelector('option') == null) {\n          fillSelect(\n            select,\n            COLORS,\n            format === 'background' ? '#ffffff' : '#000000',\n          );\n        }\n        return new ColorPicker(select, icons[format] as string);\n      }\n      if (select.querySelector('option') == null) {\n        if (select.classList.contains('ql-font')) {\n          fillSelect(select, FONTS);\n        } else if (select.classList.contains('ql-header')) {\n          fillSelect(select, HEADERS);\n        } else if (select.classList.contains('ql-size')) {\n          fillSelect(select, SIZES);\n        }\n      }\n      return new Picker(select);\n    });\n    const update = () => {\n      this.pickers.forEach((picker) => {\n        picker.update();\n      });\n    };\n    this.quill.on(Emitter.events.EDITOR_CHANGE, update);\n  }\n}\nBaseTheme.DEFAULTS = merge({}, Theme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        formula() {\n          this.quill.theme.tooltip.edit('formula');\n        },\n        image() {\n          let fileInput = this.container.querySelector(\n            'input.ql-image[type=file]',\n          );\n          if (fileInput == null) {\n            fileInput = document.createElement('input');\n            fileInput.setAttribute('type', 'file');\n            fileInput.setAttribute(\n              'accept',\n              this.quill.uploader.options.mimetypes.join(', '),\n            );\n            fileInput.classList.add('ql-image');\n            fileInput.addEventListener('change', () => {\n              const range = this.quill.getSelection(true);\n              this.quill.uploader.upload(range, fileInput.files);\n              fileInput.value = '';\n            });\n            this.container.appendChild(fileInput);\n          }\n          fileInput.click();\n        },\n        video() {\n          this.quill.theme.tooltip.edit('video');\n        },\n      },\n    },\n  },\n});\n\nclass BaseTooltip extends Tooltip {\n  textbox: HTMLInputElement | null;\n  linkRange?: Range;\n\n  constructor(quill: Quill, boundsContainer?: HTMLElement) {\n    super(quill, boundsContainer);\n    this.textbox = this.root.querySelector('input[type=\"text\"]');\n    this.listen();\n  }\n\n  listen() {\n    // @ts-expect-error Fix me later\n    this.textbox.addEventListener('keydown', (event) => {\n      if (event.key === 'Enter') {\n        this.save();\n        event.preventDefault();\n      } else if (event.key === 'Escape') {\n        this.cancel();\n        event.preventDefault();\n      }\n    });\n  }\n\n  cancel() {\n    this.hide();\n    this.restoreFocus();\n  }\n\n  edit(mode = 'link', preview: string | null = null) {\n    this.root.classList.remove('ql-hidden');\n    this.root.classList.add('ql-editing');\n    if (this.textbox == null) return;\n\n    if (preview != null) {\n      this.textbox.value = preview;\n    } else if (mode !== this.root.getAttribute('data-mode')) {\n      this.textbox.value = '';\n    }\n    const bounds = this.quill.getBounds(this.quill.selection.savedRange);\n    if (bounds != null) {\n      this.position(bounds);\n    }\n    this.textbox.select();\n    this.textbox.setAttribute(\n      'placeholder',\n      this.textbox.getAttribute(`data-${mode}`) || '',\n    );\n    this.root.setAttribute('data-mode', mode);\n  }\n\n  restoreFocus() {\n    this.quill.focus({ preventScroll: true });\n  }\n\n  save() {\n    // @ts-expect-error Fix me later\n    let { value } = this.textbox;\n    switch (this.root.getAttribute('data-mode')) {\n      case 'link': {\n        const { scrollTop } = this.quill.root;\n        if (this.linkRange) {\n          this.quill.formatText(\n            this.linkRange,\n            'link',\n            value,\n            Emitter.sources.USER,\n          );\n          delete this.linkRange;\n        } else {\n          this.restoreFocus();\n          this.quill.format('link', value, Emitter.sources.USER);\n        }\n        this.quill.root.scrollTop = scrollTop;\n        break;\n      }\n      case 'video': {\n        value = extractVideoUrl(value);\n      } // eslint-disable-next-line no-fallthrough\n      case 'formula': {\n        if (!value) break;\n        const range = this.quill.getSelection(true);\n        if (range != null) {\n          const index = range.index + range.length;\n          this.quill.insertEmbed(\n            index,\n            // @ts-expect-error Fix me later\n            this.root.getAttribute('data-mode'),\n            value,\n            Emitter.sources.USER,\n          );\n          if (this.root.getAttribute('data-mode') === 'formula') {\n            this.quill.insertText(index + 1, ' ', Emitter.sources.USER);\n          }\n          this.quill.setSelection(index + 2, Emitter.sources.USER);\n        }\n        break;\n      }\n      default:\n    }\n    // @ts-expect-error Fix me later\n    this.textbox.value = '';\n    this.hide();\n  }\n}\n\nfunction extractVideoUrl(url: string) {\n  let match =\n    url.match(\n      /^(?:(https?):\\/\\/)?(?:(?:www|m)\\.)?youtube\\.com\\/watch.*v=([a-zA-Z0-9_-]+)/,\n    ) ||\n    url.match(/^(?:(https?):\\/\\/)?(?:(?:www|m)\\.)?youtu\\.be\\/([a-zA-Z0-9_-]+)/);\n  if (match) {\n    return `${match[1] || 'https'}://www.youtube.com/embed/${\n      match[2]\n    }?showinfo=0`;\n  }\n  // eslint-disable-next-line no-cond-assign\n  if ((match = url.match(/^(?:(https?):\\/\\/)?(?:www\\.)?vimeo\\.com\\/(\\d+)/))) {\n    return `${match[1] || 'https'}://player.vimeo.com/video/${match[2]}/`;\n  }\n  return url;\n}\n\nfunction fillSelect(\n  select: HTMLSelectElement,\n  values: Array<string | boolean>,\n  defaultValue: unknown = false,\n) {\n  values.forEach((value) => {\n    const option = document.createElement('option');\n    if (value === defaultValue) {\n      option.setAttribute('selected', 'selected');\n    } else {\n      option.setAttribute('value', String(value));\n    }\n    select.appendChild(option);\n  });\n}\n\nexport { BaseTooltip, BaseTheme as default };\n", "import { merge } from 'lodash-es';\nimport Emitter from '../core/emitter.js';\nimport BaseTheme, { BaseTooltip } from './base.js';\nimport { Range } from '../core/selection.js';\nimport type { Bounds } from '../core/selection.js';\nimport icons from '../ui/icons.js';\nimport Quill from '../core/quill.js';\nimport type { ThemeOptions } from '../core/theme.js';\nimport type Toolbar from '../modules/toolbar.js';\nimport type { ToolbarConfig } from '../modules/toolbar.js';\n\nconst TOOLBAR_CONFIG: ToolbarConfig = [\n  ['bold', 'italic', 'link'],\n  [{ header: 1 }, { header: 2 }, 'blockquote'],\n];\n\nclass BubbleTooltip extends BaseTooltip {\n  static TEMPLATE = [\n    '<span class=\"ql-tooltip-arrow\"></span>',\n    '<div class=\"ql-tooltip-editor\">',\n    '<input type=\"text\" data-formula=\"e=mc^2\" data-link=\"https://quilljs.com\" data-video=\"Embed URL\">',\n    '<a class=\"ql-close\"></a>',\n    '</div>',\n  ].join('');\n\n  constructor(quill: Quill, bounds?: HTMLElement) {\n    super(quill, bounds);\n    this.quill.on(\n      Emitter.events.EDITOR_CHANGE,\n      (type, range, oldRange, source) => {\n        if (type !== Emitter.events.SELECTION_CHANGE) return;\n        if (\n          range != null &&\n          range.length > 0 &&\n          source === Emitter.sources.USER\n        ) {\n          this.show();\n          // Lock our width so we will expand beyond our offsetParent boundaries\n          this.root.style.left = '0px';\n          this.root.style.width = '';\n          this.root.style.width = `${this.root.offsetWidth}px`;\n          const lines = this.quill.getLines(range.index, range.length);\n          if (lines.length === 1) {\n            const bounds = this.quill.getBounds(range);\n            if (bounds != null) {\n              this.position(bounds);\n            }\n          } else {\n            const lastLine = lines[lines.length - 1];\n            const index = this.quill.getIndex(lastLine);\n            const length = Math.min(\n              lastLine.length() - 1,\n              range.index + range.length - index,\n            );\n            const indexBounds = this.quill.getBounds(new Range(index, length));\n            if (indexBounds != null) {\n              this.position(indexBounds);\n            }\n          }\n        } else if (\n          document.activeElement !== this.textbox &&\n          this.quill.hasFocus()\n        ) {\n          this.hide();\n        }\n      },\n    );\n  }\n\n  listen() {\n    super.listen();\n    // @ts-expect-error Fix me later\n    this.root.querySelector('.ql-close').addEventListener('click', () => {\n      this.root.classList.remove('ql-editing');\n    });\n    this.quill.on(Emitter.events.SCROLL_OPTIMIZE, () => {\n      // Let selection be restored by toolbar handlers before repositioning\n      setTimeout(() => {\n        if (this.root.classList.contains('ql-hidden')) return;\n        const range = this.quill.getSelection();\n        if (range != null) {\n          const bounds = this.quill.getBounds(range);\n          if (bounds != null) {\n            this.position(bounds);\n          }\n        }\n      }, 1);\n    });\n  }\n\n  cancel() {\n    this.show();\n  }\n\n  position(reference: Bounds) {\n    const shift = super.position(reference);\n    const arrow = this.root.querySelector('.ql-tooltip-arrow');\n    // @ts-expect-error\n    arrow.style.marginLeft = '';\n    if (shift !== 0) {\n      // @ts-expect-error\n      arrow.style.marginLeft = `${-1 * shift - arrow.offsetWidth / 2}px`;\n    }\n    return shift;\n  }\n}\n\nclass BubbleTheme extends BaseTheme {\n  tooltip: BubbleTooltip;\n\n  constructor(quill: Quill, options: ThemeOptions) {\n    if (\n      options.modules.toolbar != null &&\n      options.modules.toolbar.container == null\n    ) {\n      options.modules.toolbar.container = TOOLBAR_CONFIG;\n    }\n    super(quill, options);\n    this.quill.container.classList.add('ql-bubble');\n  }\n\n  extendToolbar(toolbar: Toolbar) {\n    // @ts-expect-error\n    this.tooltip = new BubbleTooltip(this.quill, this.options.bounds);\n    if (toolbar.container != null) {\n      this.tooltip.root.appendChild<HTMLElement>(toolbar.container);\n      this.buildButtons(toolbar.container.querySelectorAll('button'), icons);\n      this.buildPickers(toolbar.container.querySelectorAll('select'), icons);\n    }\n  }\n}\nBubbleTheme.DEFAULTS = merge({}, BaseTheme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        link(value: string) {\n          if (!value) {\n            this.quill.format('link', false, Quill.sources.USER);\n          } else {\n            // @ts-expect-error\n            this.quill.theme.tooltip.edit();\n          }\n        },\n      },\n    },\n  },\n} satisfies ThemeOptions);\n\nexport { BubbleTooltip, BubbleTheme as default };\n", "import { merge } from 'lodash-es';\nimport Emitter from '../core/emitter.js';\nimport BaseTheme, { BaseTooltip } from './base.js';\nimport LinkBlot from '../formats/link.js';\nimport { Range } from '../core/selection.js';\nimport icons from '../ui/icons.js';\nimport Quill from '../core/quill.js';\nimport type { Context } from '../modules/keyboard.js';\nimport type Toolbar from '../modules/toolbar.js';\nimport type { ToolbarConfig } from '../modules/toolbar.js';\nimport type { ThemeOptions } from '../core/theme.js';\n\nconst TOOLBAR_CONFIG: ToolbarConfig = [\n  [{ header: ['1', '2', '3', false] }],\n  ['bold', 'italic', 'underline', 'link'],\n  [{ list: 'ordered' }, { list: 'bullet' }],\n  ['clean'],\n];\n\nclass SnowTooltip extends BaseTooltip {\n  static TEMPLATE = [\n    '<a class=\"ql-preview\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"about:blank\"></a>',\n    '<input type=\"text\" data-formula=\"e=mc^2\" data-link=\"https://quilljs.com\" data-video=\"Embed URL\">',\n    '<a class=\"ql-action\"></a>',\n    '<a class=\"ql-remove\"></a>',\n  ].join('');\n\n  preview = this.root.querySelector('a.ql-preview');\n\n  listen() {\n    super.listen();\n    // @ts-expect-error Fix me later\n    this.root\n      .querySelector('a.ql-action')\n      .addEventListener('click', (event) => {\n        if (this.root.classList.contains('ql-editing')) {\n          this.save();\n        } else {\n          // @ts-expect-error Fix me later\n          this.edit('link', this.preview.textContent);\n        }\n        event.preventDefault();\n      });\n    // @ts-expect-error Fix me later\n    this.root\n      .querySelector('a.ql-remove')\n      .addEventListener('click', (event) => {\n        if (this.linkRange != null) {\n          const range = this.linkRange;\n          this.restoreFocus();\n          this.quill.formatText(range, 'link', false, Emitter.sources.USER);\n          delete this.linkRange;\n        }\n        event.preventDefault();\n        this.hide();\n      });\n    this.quill.on(\n      Emitter.events.SELECTION_CHANGE,\n      (range, oldRange, source) => {\n        if (range == null) return;\n        if (range.length === 0 && source === Emitter.sources.USER) {\n          const [link, offset] = this.quill.scroll.descendant(\n            LinkBlot,\n            range.index,\n          );\n          if (link != null) {\n            this.linkRange = new Range(range.index - offset, link.length());\n            const preview = LinkBlot.formats(link.domNode);\n            // @ts-expect-error Fix me later\n            this.preview.textContent = preview;\n            // @ts-expect-error Fix me later\n            this.preview.setAttribute('href', preview);\n            this.show();\n            const bounds = this.quill.getBounds(this.linkRange);\n            if (bounds != null) {\n              this.position(bounds);\n            }\n            return;\n          }\n        } else {\n          delete this.linkRange;\n        }\n        this.hide();\n      },\n    );\n  }\n\n  show() {\n    super.show();\n    this.root.removeAttribute('data-mode');\n  }\n}\n\nclass SnowTheme extends BaseTheme {\n  constructor(quill: Quill, options: ThemeOptions) {\n    if (\n      options.modules.toolbar != null &&\n      options.modules.toolbar.container == null\n    ) {\n      options.modules.toolbar.container = TOOLBAR_CONFIG;\n    }\n    super(quill, options);\n    this.quill.container.classList.add('ql-snow');\n  }\n\n  extendToolbar(toolbar: Toolbar) {\n    if (toolbar.container != null) {\n      toolbar.container.classList.add('ql-snow');\n      this.buildButtons(toolbar.container.querySelectorAll('button'), icons);\n      this.buildPickers(toolbar.container.querySelectorAll('select'), icons);\n      // @ts-expect-error\n      this.tooltip = new SnowTooltip(this.quill, this.options.bounds);\n      if (toolbar.container.querySelector('.ql-link')) {\n        this.quill.keyboard.addBinding(\n          { key: 'k', shortKey: true },\n          (_range: Range, context: Context) => {\n            toolbar.handlers.link.call(toolbar, !context.format.link);\n          },\n        );\n      }\n    }\n  }\n}\nSnowTheme.DEFAULTS = merge({}, BaseTheme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        link(value: string) {\n          if (value) {\n            const range = this.quill.getSelection();\n            if (range == null || range.length === 0) return;\n            let preview = this.quill.getText(range);\n            if (\n              /^\\S+@\\S+\\.\\S+$/.test(preview) &&\n              preview.indexOf('mailto:') !== 0\n            ) {\n              preview = `mailto:${preview}`;\n            }\n            // @ts-expect-error\n            const { tooltip } = this.quill.theme;\n            tooltip.edit('link', preview);\n          } else {\n            this.quill.format('link', false, Quill.sources.USER);\n          }\n        },\n      },\n    },\n  },\n} satisfies ThemeOptions);\n\nexport default SnowTheme;\n", "import Quill, { Parchment, Range } from './core.js';\nimport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n} from './core.js';\n\nimport { AlignClass, AlignStyle } from './formats/align.js';\nimport {\n  DirectionAttribute,\n  DirectionClass,\n  DirectionStyle,\n} from './formats/direction.js';\nimport Indent from './formats/indent.js';\n\nimport Blockquote from './formats/blockquote.js';\nimport Header from './formats/header.js';\nimport List from './formats/list.js';\n\nimport { BackgroundClass, BackgroundStyle } from './formats/background.js';\nimport { ColorClass, ColorStyle } from './formats/color.js';\nimport { FontClass, FontStyle } from './formats/font.js';\nimport { SizeClass, SizeStyle } from './formats/size.js';\n\nimport Bold from './formats/bold.js';\nimport Italic from './formats/italic.js';\nimport Link from './formats/link.js';\nimport Script from './formats/script.js';\nimport Strike from './formats/strike.js';\nimport Underline from './formats/underline.js';\n\nimport Formula from './formats/formula.js';\nimport Image from './formats/image.js';\nimport Video from './formats/video.js';\n\nimport CodeBlock, { Code as InlineCode } from './formats/code.js';\n\nimport Syntax from './modules/syntax.js';\nimport Table from './modules/table.js';\nimport Toolbar from './modules/toolbar.js';\n\nimport Icons from './ui/icons.js';\nimport Picker from './ui/picker.js';\nimport ColorPicker from './ui/color-picker.js';\nimport IconPicker from './ui/icon-picker.js';\nimport Tooltip from './ui/tooltip.js';\n\nimport BubbleTheme from './themes/bubble.js';\nimport SnowTheme from './themes/snow.js';\n\nQuill.register(\n  {\n    'attributors/attribute/direction': DirectionAttribute,\n\n    'attributors/class/align': AlignClass,\n    'attributors/class/background': BackgroundClass,\n    'attributors/class/color': ColorClass,\n    'attributors/class/direction': DirectionClass,\n    'attributors/class/font': FontClass,\n    'attributors/class/size': SizeClass,\n\n    'attributors/style/align': AlignStyle,\n    'attributors/style/background': BackgroundStyle,\n    'attributors/style/color': ColorStyle,\n    'attributors/style/direction': DirectionStyle,\n    'attributors/style/font': FontStyle,\n    'attributors/style/size': SizeStyle,\n  },\n  true,\n);\n\nQuill.register(\n  {\n    'formats/align': AlignClass,\n    'formats/direction': DirectionClass,\n    'formats/indent': Indent,\n\n    'formats/background': BackgroundStyle,\n    'formats/color': ColorStyle,\n    'formats/font': FontClass,\n    'formats/size': SizeClass,\n\n    'formats/blockquote': Blockquote,\n    'formats/code-block': CodeBlock,\n    'formats/header': Header,\n    'formats/list': List,\n\n    'formats/bold': Bold,\n    'formats/code': InlineCode,\n    'formats/italic': Italic,\n    'formats/link': Link,\n    'formats/script': Script,\n    'formats/strike': Strike,\n    'formats/underline': Underline,\n\n    'formats/formula': Formula,\n    'formats/image': Image,\n    'formats/video': Video,\n\n    'modules/syntax': Syntax,\n    'modules/table': Table,\n    'modules/toolbar': Toolbar,\n\n    'themes/bubble': BubbleTheme,\n    'themes/snow': SnowTheme,\n\n    'ui/icons': Icons,\n    'ui/picker': Picker,\n    'ui/icon-picker': IconPicker,\n    'ui/color-picker': ColorPicker,\n    'ui/tooltip': Tooltip,\n  },\n  true,\n);\n\nexport { Module } from './core.js';\nexport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n};\nexport { Parchment, Range };\n\nexport default Quill;\n"],
  "mappings": ";;;;;;;;;;;;;AAAA;AAAA;AA8BA,QAAI,cAAc;AAClB,QAAI,cAAc;AAClB,QAAI,aAAa;AAWjB,aAAS,UAAU,OAAO,OAAO,YAAY,SAAS,cAAc;AAElE,UAAI,UAAU,OAAO;AACnB,YAAI,OAAO;AACT,iBAAO,CAAC,CAAC,YAAY,KAAK,CAAC;AAAA,QAC7B;AACA,eAAO,CAAC;AAAA,MACV;AAEA,UAAI,cAAc,MAAM;AACtB,YAAI,WAAW,sBAAsB,OAAO,OAAO,UAAU;AAC7D,YAAI,UAAU;AACZ,iBAAO;AAAA,QACT;AAAA,MACF;AAGA,UAAI,eAAe,kBAAkB,OAAO,KAAK;AACjD,UAAI,eAAe,MAAM,UAAU,GAAG,YAAY;AAClD,cAAQ,MAAM,UAAU,YAAY;AACpC,cAAQ,MAAM,UAAU,YAAY;AAGpC,qBAAe,kBAAkB,OAAO,KAAK;AAC7C,UAAI,eAAe,MAAM,UAAU,MAAM,SAAS,YAAY;AAC9D,cAAQ,MAAM,UAAU,GAAG,MAAM,SAAS,YAAY;AACtD,cAAQ,MAAM,UAAU,GAAG,MAAM,SAAS,YAAY;AAGtD,UAAI,QAAQ,cAAc,OAAO,KAAK;AAGtC,UAAI,cAAc;AAChB,cAAM,QAAQ,CAAC,YAAY,YAAY,CAAC;AAAA,MAC1C;AACA,UAAI,cAAc;AAChB,cAAM,KAAK,CAAC,YAAY,YAAY,CAAC;AAAA,MACvC;AACA,wBAAkB,OAAO,YAAY;AACrC,UAAI,SAAS;AACX,6BAAqB,KAAK;AAAA,MAC5B;AACA,aAAO;AAAA,IACT;AASA,aAAS,cAAc,OAAO,OAAO;AACnC,UAAI;AAEJ,UAAI,CAAC,OAAO;AAEV,eAAO,CAAC,CAAC,aAAa,KAAK,CAAC;AAAA,MAC9B;AAEA,UAAI,CAAC,OAAO;AAEV,eAAO,CAAC,CAAC,aAAa,KAAK,CAAC;AAAA,MAC9B;AAEA,UAAI,WAAW,MAAM,SAAS,MAAM,SAAS,QAAQ;AACrD,UAAI,YAAY,MAAM,SAAS,MAAM,SAAS,QAAQ;AACtD,UAAI,IAAI,SAAS,QAAQ,SAAS;AAClC,UAAI,MAAM,IAAI;AAEZ,gBAAQ;AAAA,UACN,CAAC,aAAa,SAAS,UAAU,GAAG,CAAC,CAAC;AAAA,UACtC,CAAC,YAAY,SAAS;AAAA,UACtB,CAAC,aAAa,SAAS,UAAU,IAAI,UAAU,MAAM,CAAC;AAAA,QACxD;AAEA,YAAI,MAAM,SAAS,MAAM,QAAQ;AAC/B,gBAAM,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,IAAI;AAAA,QAC9B;AACA,eAAO;AAAA,MACT;AAEA,UAAI,UAAU,WAAW,GAAG;AAG1B,eAAO;AAAA,UACL,CAAC,aAAa,KAAK;AAAA,UACnB,CAAC,aAAa,KAAK;AAAA,QACrB;AAAA,MACF;AAGA,UAAI,KAAK,gBAAgB,OAAO,KAAK;AACrC,UAAI,IAAI;AAEN,YAAI,UAAU,GAAG,CAAC;AAClB,YAAI,UAAU,GAAG,CAAC;AAClB,YAAI,UAAU,GAAG,CAAC;AAClB,YAAI,UAAU,GAAG,CAAC;AAClB,YAAI,aAAa,GAAG,CAAC;AAErB,YAAI,UAAU,UAAU,SAAS,OAAO;AACxC,YAAI,UAAU,UAAU,SAAS,OAAO;AAExC,eAAO,QAAQ,OAAO,CAAC,CAAC,YAAY,UAAU,CAAC,GAAG,OAAO;AAAA,MAC3D;AAEA,aAAO,aAAa,OAAO,KAAK;AAAA,IAClC;AAWA,aAAS,aAAa,OAAO,OAAO;AAElC,UAAI,eAAe,MAAM;AACzB,UAAI,eAAe,MAAM;AACzB,UAAI,QAAQ,KAAK,MAAM,eAAe,gBAAgB,CAAC;AACvD,UAAI,WAAW;AACf,UAAI,WAAW,IAAI;AACnB,UAAI,KAAK,IAAI,MAAM,QAAQ;AAC3B,UAAI,KAAK,IAAI,MAAM,QAAQ;AAG3B,eAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AACjC,WAAG,CAAC,IAAI;AACR,WAAG,CAAC,IAAI;AAAA,MACV;AACA,SAAG,WAAW,CAAC,IAAI;AACnB,SAAG,WAAW,CAAC,IAAI;AACnB,UAAI,QAAQ,eAAe;AAG3B,UAAI,QAAQ,QAAQ,MAAM;AAG1B,UAAI,UAAU;AACd,UAAI,QAAQ;AACZ,UAAI,UAAU;AACd,UAAI,QAAQ;AACZ,eAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAE9B,iBAAS,KAAK,CAAC,IAAI,SAAS,MAAM,IAAI,OAAO,MAAM,GAAG;AACpD,cAAI,YAAY,WAAW;AAC3B,cAAI;AACJ,cAAI,OAAO,CAAC,KAAM,OAAO,KAAK,GAAG,YAAY,CAAC,IAAI,GAAG,YAAY,CAAC,GAAI;AACpE,iBAAK,GAAG,YAAY,CAAC;AAAA,UACvB,OAAO;AACL,iBAAK,GAAG,YAAY,CAAC,IAAI;AAAA,UAC3B;AACA,cAAI,KAAK,KAAK;AACd,iBACE,KAAK,gBACL,KAAK,gBACL,MAAM,OAAO,EAAE,MAAM,MAAM,OAAO,EAAE,GACpC;AACA;AACA;AAAA,UACF;AACA,aAAG,SAAS,IAAI;AAChB,cAAI,KAAK,cAAc;AAErB,qBAAS;AAAA,UACX,WAAW,KAAK,cAAc;AAE5B,uBAAW;AAAA,UACb,WAAW,OAAO;AAChB,gBAAI,YAAY,WAAW,QAAQ;AACnC,gBAAI,aAAa,KAAK,YAAY,YAAY,GAAG,SAAS,MAAM,IAAI;AAElE,kBAAI,KAAK,eAAe,GAAG,SAAS;AACpC,kBAAI,MAAM,IAAI;AAEZ,uBAAO,kBAAkB,OAAO,OAAO,IAAI,EAAE;AAAA,cAC/C;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAGA,iBAAS,KAAK,CAAC,IAAI,SAAS,MAAM,IAAI,OAAO,MAAM,GAAG;AACpD,cAAI,YAAY,WAAW;AAC3B,cAAI;AACJ,cAAI,OAAO,CAAC,KAAM,OAAO,KAAK,GAAG,YAAY,CAAC,IAAI,GAAG,YAAY,CAAC,GAAI;AACpE,iBAAK,GAAG,YAAY,CAAC;AAAA,UACvB,OAAO;AACL,iBAAK,GAAG,YAAY,CAAC,IAAI;AAAA,UAC3B;AACA,cAAI,KAAK,KAAK;AACd,iBACE,KAAK,gBACL,KAAK,gBACL,MAAM,OAAO,eAAe,KAAK,CAAC,MAChC,MAAM,OAAO,eAAe,KAAK,CAAC,GACpC;AACA;AACA;AAAA,UACF;AACA,aAAG,SAAS,IAAI;AAChB,cAAI,KAAK,cAAc;AAErB,qBAAS;AAAA,UACX,WAAW,KAAK,cAAc;AAE5B,uBAAW;AAAA,UACb,WAAW,CAAC,OAAO;AACjB,gBAAI,YAAY,WAAW,QAAQ;AACnC,gBAAI,aAAa,KAAK,YAAY,YAAY,GAAG,SAAS,MAAM,IAAI;AAClE,kBAAI,KAAK,GAAG,SAAS;AACrB,kBAAI,KAAK,WAAW,KAAK;AAEzB,mBAAK,eAAe;AACpB,kBAAI,MAAM,IAAI;AAEZ,uBAAO,kBAAkB,OAAO,OAAO,IAAI,EAAE;AAAA,cAC/C;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAGA,aAAO;AAAA,QACL,CAAC,aAAa,KAAK;AAAA,QACnB,CAAC,aAAa,KAAK;AAAA,MACrB;AAAA,IACF;AAWA,aAAS,kBAAkB,OAAO,OAAO,GAAG,GAAG;AAC7C,UAAI,SAAS,MAAM,UAAU,GAAG,CAAC;AACjC,UAAI,SAAS,MAAM,UAAU,GAAG,CAAC;AACjC,UAAI,SAAS,MAAM,UAAU,CAAC;AAC9B,UAAI,SAAS,MAAM,UAAU,CAAC;AAG9B,UAAI,QAAQ,UAAU,QAAQ,MAAM;AACpC,UAAI,SAAS,UAAU,QAAQ,MAAM;AAErC,aAAO,MAAM,OAAO,MAAM;AAAA,IAC5B;AASA,aAAS,kBAAkB,OAAO,OAAO;AAEvC,UAAI,CAAC,SAAS,CAAC,SAAS,MAAM,OAAO,CAAC,MAAM,MAAM,OAAO,CAAC,GAAG;AAC3D,eAAO;AAAA,MACT;AAGA,UAAI,aAAa;AACjB,UAAI,aAAa,KAAK,IAAI,MAAM,QAAQ,MAAM,MAAM;AACpD,UAAI,aAAa;AACjB,UAAI,eAAe;AACnB,aAAO,aAAa,YAAY;AAC9B,YACE,MAAM,UAAU,cAAc,UAAU,KACxC,MAAM,UAAU,cAAc,UAAU,GACxC;AACA,uBAAa;AACb,yBAAe;AAAA,QACjB,OAAO;AACL,uBAAa;AAAA,QACf;AACA,qBAAa,KAAK,OAAO,aAAa,cAAc,IAAI,UAAU;AAAA,MACpE;AAEA,UAAI,wBAAwB,MAAM,WAAW,aAAa,CAAC,CAAC,GAAG;AAC7D;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAUA,aAAS,oBAAoB,OAAO,OAAO;AAEzC,UAAI,eAAe,MAAM;AACzB,UAAI,eAAe,MAAM;AAEzB,UAAI,gBAAgB,KAAK,gBAAgB,GAAG;AAC1C,eAAO;AAAA,MACT;AAEA,UAAI,eAAe,cAAc;AAC/B,gBAAQ,MAAM,UAAU,eAAe,YAAY;AAAA,MACrD,WAAW,eAAe,cAAc;AACtC,gBAAQ,MAAM,UAAU,GAAG,YAAY;AAAA,MACzC;AACA,UAAI,cAAc,KAAK,IAAI,cAAc,YAAY;AAErD,UAAI,SAAS,OAAO;AAClB,eAAO;AAAA,MACT;AAKA,UAAI,OAAO;AACX,UAAI,SAAS;AACb,aAAO,MAAM;AACX,YAAI,UAAU,MAAM,UAAU,cAAc,MAAM;AAClD,YAAI,QAAQ,MAAM,QAAQ,OAAO;AACjC,YAAI,SAAS,IAAI;AACf,iBAAO;AAAA,QACT;AACA,kBAAU;AACV,YACE,SAAS,KACT,MAAM,UAAU,cAAc,MAAM,KAAK,MAAM,UAAU,GAAG,MAAM,GAClE;AACA,iBAAO;AACP;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAQA,aAAS,kBAAkB,OAAO,OAAO;AAEvC,UAAI,CAAC,SAAS,CAAC,SAAS,MAAM,MAAM,EAAE,MAAM,MAAM,MAAM,EAAE,GAAG;AAC3D,eAAO;AAAA,MACT;AAGA,UAAI,aAAa;AACjB,UAAI,aAAa,KAAK,IAAI,MAAM,QAAQ,MAAM,MAAM;AACpD,UAAI,aAAa;AACjB,UAAI,aAAa;AACjB,aAAO,aAAa,YAAY;AAC9B,YACE,MAAM,UAAU,MAAM,SAAS,YAAY,MAAM,SAAS,UAAU,KACpE,MAAM,UAAU,MAAM,SAAS,YAAY,MAAM,SAAS,UAAU,GACpE;AACA,uBAAa;AACb,uBAAa;AAAA,QACf,OAAO;AACL,uBAAa;AAAA,QACf;AACA,qBAAa,KAAK,OAAO,aAAa,cAAc,IAAI,UAAU;AAAA,MACpE;AAEA,UAAI,sBAAsB,MAAM,WAAW,MAAM,SAAS,UAAU,CAAC,GAAG;AACtE;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAYA,aAAS,gBAAgB,OAAO,OAAO;AACrC,UAAI,WAAW,MAAM,SAAS,MAAM,SAAS,QAAQ;AACrD,UAAI,YAAY,MAAM,SAAS,MAAM,SAAS,QAAQ;AACtD,UAAI,SAAS,SAAS,KAAK,UAAU,SAAS,IAAI,SAAS,QAAQ;AACjE,eAAO;AAAA,MACT;AAcA,eAAS,iBAAiBA,WAAUC,YAAW,GAAG;AAEhD,YAAI,OAAOD,UAAS,UAAU,GAAG,IAAI,KAAK,MAAMA,UAAS,SAAS,CAAC,CAAC;AACpE,YAAI,IAAI;AACR,YAAI,cAAc;AAClB,YAAI,iBAAiB,iBAAiB,kBAAkB;AACxD,gBAAQ,IAAIC,WAAU,QAAQ,MAAM,IAAI,CAAC,OAAO,IAAI;AAClD,cAAI,eAAe;AAAA,YACjBD,UAAS,UAAU,CAAC;AAAA,YACpBC,WAAU,UAAU,CAAC;AAAA,UACvB;AACA,cAAI,eAAe;AAAA,YACjBD,UAAS,UAAU,GAAG,CAAC;AAAA,YACvBC,WAAU,UAAU,GAAG,CAAC;AAAA,UAC1B;AACA,cAAI,YAAY,SAAS,eAAe,cAAc;AACpD,0BACEA,WAAU,UAAU,IAAI,cAAc,CAAC,IACvCA,WAAU,UAAU,GAAG,IAAI,YAAY;AACzC,8BAAkBD,UAAS,UAAU,GAAG,IAAI,YAAY;AACxD,8BAAkBA,UAAS,UAAU,IAAI,YAAY;AACrD,+BAAmBC,WAAU,UAAU,GAAG,IAAI,YAAY;AAC1D,+BAAmBA,WAAU,UAAU,IAAI,YAAY;AAAA,UACzD;AAAA,QACF;AACA,YAAI,YAAY,SAAS,KAAKD,UAAS,QAAQ;AAC7C,iBAAO;AAAA,YACL;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,QACF,OAAO;AACL,iBAAO;AAAA,QACT;AAAA,MACF;AAGA,UAAI,MAAM;AAAA,QACR;AAAA,QACA;AAAA,QACA,KAAK,KAAK,SAAS,SAAS,CAAC;AAAA,MAC/B;AAEA,UAAI,MAAM;AAAA,QACR;AAAA,QACA;AAAA,QACA,KAAK,KAAK,SAAS,SAAS,CAAC;AAAA,MAC/B;AACA,UAAI;AACJ,UAAI,CAAC,OAAO,CAAC,KAAK;AAChB,eAAO;AAAA,MACT,WAAW,CAAC,KAAK;AACf,aAAK;AAAA,MACP,WAAW,CAAC,KAAK;AACf,aAAK;AAAA,MACP,OAAO;AAEL,aAAK,IAAI,CAAC,EAAE,SAAS,IAAI,CAAC,EAAE,SAAS,MAAM;AAAA,MAC7C;AAGA,UAAI,SAAS,SAAS,SAAS;AAC/B,UAAI,MAAM,SAAS,MAAM,QAAQ;AAC/B,kBAAU,GAAG,CAAC;AACd,kBAAU,GAAG,CAAC;AACd,kBAAU,GAAG,CAAC;AACd,kBAAU,GAAG,CAAC;AAAA,MAChB,OAAO;AACL,kBAAU,GAAG,CAAC;AACd,kBAAU,GAAG,CAAC;AACd,kBAAU,GAAG,CAAC;AACd,kBAAU,GAAG,CAAC;AAAA,MAChB;AACA,UAAI,aAAa,GAAG,CAAC;AACrB,aAAO,CAAC,SAAS,SAAS,SAAS,SAAS,UAAU;AAAA,IACxD;AAMA,aAAS,qBAAqB,OAAO;AACnC,UAAI,UAAU;AACd,UAAI,aAAa,CAAC;AAClB,UAAI,mBAAmB;AAEvB,UAAI,eAAe;AAEnB,UAAI,UAAU;AAEd,UAAI,qBAAqB;AACzB,UAAI,oBAAoB;AAExB,UAAI,qBAAqB;AACzB,UAAI,oBAAoB;AACxB,aAAO,UAAU,MAAM,QAAQ;AAC7B,YAAI,MAAM,OAAO,EAAE,CAAC,KAAK,YAAY;AAEnC,qBAAW,kBAAkB,IAAI;AACjC,+BAAqB;AACrB,8BAAoB;AACpB,+BAAqB;AACrB,8BAAoB;AACpB,yBAAe,MAAM,OAAO,EAAE,CAAC;AAAA,QACjC,OAAO;AAEL,cAAI,MAAM,OAAO,EAAE,CAAC,KAAK,aAAa;AACpC,kCAAsB,MAAM,OAAO,EAAE,CAAC,EAAE;AAAA,UAC1C,OAAO;AACL,iCAAqB,MAAM,OAAO,EAAE,CAAC,EAAE;AAAA,UACzC;AAGA,cACE,gBACA,aAAa,UACX,KAAK,IAAI,oBAAoB,iBAAiB,KAChD,aAAa,UAAU,KAAK,IAAI,oBAAoB,iBAAiB,GACrE;AAEA,kBAAM,OAAO,WAAW,mBAAmB,CAAC,GAAG,GAAG;AAAA,cAChD;AAAA,cACA;AAAA,YACF,CAAC;AAED,kBAAM,WAAW,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI;AAEjD;AAEA;AACA,sBAAU,mBAAmB,IAAI,WAAW,mBAAmB,CAAC,IAAI;AACpE,iCAAqB;AACrB,gCAAoB;AACpB,iCAAqB;AACrB,gCAAoB;AACpB,2BAAe;AACf,sBAAU;AAAA,UACZ;AAAA,QACF;AACA;AAAA,MACF;AAGA,UAAI,SAAS;AACX,0BAAkB,KAAK;AAAA,MACzB;AACA,mCAA6B,KAAK;AAQlC,gBAAU;AACV,aAAO,UAAU,MAAM,QAAQ;AAC7B,YACE,MAAM,UAAU,CAAC,EAAE,CAAC,KAAK,eACzB,MAAM,OAAO,EAAE,CAAC,KAAK,aACrB;AACA,cAAI,WAAW,MAAM,UAAU,CAAC,EAAE,CAAC;AACnC,cAAI,YAAY,MAAM,OAAO,EAAE,CAAC;AAChC,cAAI,kBAAkB,oBAAoB,UAAU,SAAS;AAC7D,cAAI,kBAAkB,oBAAoB,WAAW,QAAQ;AAC7D,cAAI,mBAAmB,iBAAiB;AACtC,gBACE,mBAAmB,SAAS,SAAS,KACrC,mBAAmB,UAAU,SAAS,GACtC;AAEA,oBAAM,OAAO,SAAS,GAAG;AAAA,gBACvB;AAAA,gBACA,UAAU,UAAU,GAAG,eAAe;AAAA,cACxC,CAAC;AACD,oBAAM,UAAU,CAAC,EAAE,CAAC,IAAI,SAAS;AAAA,gBAC/B;AAAA,gBACA,SAAS,SAAS;AAAA,cACpB;AACA,oBAAM,UAAU,CAAC,EAAE,CAAC,IAAI,UAAU,UAAU,eAAe;AAC3D;AAAA,YACF;AAAA,UACF,OAAO;AACL,gBACE,mBAAmB,SAAS,SAAS,KACrC,mBAAmB,UAAU,SAAS,GACtC;AAGA,oBAAM,OAAO,SAAS,GAAG;AAAA,gBACvB;AAAA,gBACA,SAAS,UAAU,GAAG,eAAe;AAAA,cACvC,CAAC;AACD,oBAAM,UAAU,CAAC,EAAE,CAAC,IAAI;AACxB,oBAAM,UAAU,CAAC,EAAE,CAAC,IAAI,UAAU;AAAA,gBAChC;AAAA,gBACA,UAAU,SAAS;AAAA,cACrB;AACA,oBAAM,UAAU,CAAC,EAAE,CAAC,IAAI;AACxB,oBAAM,UAAU,CAAC,EAAE,CAAC,IAAI,SAAS,UAAU,eAAe;AAC1D;AAAA,YACF;AAAA,UACF;AACA;AAAA,QACF;AACA;AAAA,MACF;AAAA,IACF;AAEA,QAAI,wBAAwB;AAC5B,QAAI,mBAAmB;AACvB,QAAI,kBAAkB;AACtB,QAAI,qBAAqB;AACzB,QAAI,uBAAuB;AAQ3B,aAAS,6BAA6B,OAAO;AAW3C,eAAS,2BAA2B,KAAK,KAAK;AAC5C,YAAI,CAAC,OAAO,CAAC,KAAK;AAEhB,iBAAO;AAAA,QACT;AAOA,YAAI,QAAQ,IAAI,OAAO,IAAI,SAAS,CAAC;AACrC,YAAI,QAAQ,IAAI,OAAO,CAAC;AACxB,YAAI,mBAAmB,MAAM,MAAM,qBAAqB;AACxD,YAAI,mBAAmB,MAAM,MAAM,qBAAqB;AACxD,YAAI,cAAc,oBAAoB,MAAM,MAAM,gBAAgB;AAClE,YAAI,cAAc,oBAAoB,MAAM,MAAM,gBAAgB;AAClE,YAAI,aAAa,eAAe,MAAM,MAAM,eAAe;AAC3D,YAAI,aAAa,eAAe,MAAM,MAAM,eAAe;AAC3D,YAAI,aAAa,cAAc,IAAI,MAAM,kBAAkB;AAC3D,YAAI,aAAa,cAAc,IAAI,MAAM,oBAAoB;AAE7D,YAAI,cAAc,YAAY;AAE5B,iBAAO;AAAA,QACT,WAAW,cAAc,YAAY;AAEnC,iBAAO;AAAA,QACT,WAAW,oBAAoB,CAAC,eAAe,aAAa;AAE1D,iBAAO;AAAA,QACT,WAAW,eAAe,aAAa;AAErC,iBAAO;AAAA,QACT,WAAW,oBAAoB,kBAAkB;AAE/C,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAEA,UAAI,UAAU;AAEd,aAAO,UAAU,MAAM,SAAS,GAAG;AACjC,YACE,MAAM,UAAU,CAAC,EAAE,CAAC,KAAK,cACzB,MAAM,UAAU,CAAC,EAAE,CAAC,KAAK,YACzB;AAEA,cAAI,YAAY,MAAM,UAAU,CAAC,EAAE,CAAC;AACpC,cAAI,OAAO,MAAM,OAAO,EAAE,CAAC;AAC3B,cAAI,YAAY,MAAM,UAAU,CAAC,EAAE,CAAC;AAGpC,cAAI,eAAe,kBAAkB,WAAW,IAAI;AACpD,cAAI,cAAc;AAChB,gBAAI,eAAe,KAAK,UAAU,KAAK,SAAS,YAAY;AAC5D,wBAAY,UAAU,UAAU,GAAG,UAAU,SAAS,YAAY;AAClE,mBAAO,eAAe,KAAK,UAAU,GAAG,KAAK,SAAS,YAAY;AAClE,wBAAY,eAAe;AAAA,UAC7B;AAGA,cAAI,gBAAgB;AACpB,cAAI,WAAW;AACf,cAAI,gBAAgB;AACpB,cAAI,YACF,2BAA2B,WAAW,IAAI,IAC1C,2BAA2B,MAAM,SAAS;AAC5C,iBAAO,KAAK,OAAO,CAAC,MAAM,UAAU,OAAO,CAAC,GAAG;AAC7C,yBAAa,KAAK,OAAO,CAAC;AAC1B,mBAAO,KAAK,UAAU,CAAC,IAAI,UAAU,OAAO,CAAC;AAC7C,wBAAY,UAAU,UAAU,CAAC;AACjC,gBAAI,QACF,2BAA2B,WAAW,IAAI,IAC1C,2BAA2B,MAAM,SAAS;AAE5C,gBAAI,SAAS,WAAW;AACtB,0BAAY;AACZ,8BAAgB;AAChB,yBAAW;AACX,8BAAgB;AAAA,YAClB;AAAA,UACF;AAEA,cAAI,MAAM,UAAU,CAAC,EAAE,CAAC,KAAK,eAAe;AAE1C,gBAAI,eAAe;AACjB,oBAAM,UAAU,CAAC,EAAE,CAAC,IAAI;AAAA,YAC1B,OAAO;AACL,oBAAM,OAAO,UAAU,GAAG,CAAC;AAC3B;AAAA,YACF;AACA,kBAAM,OAAO,EAAE,CAAC,IAAI;AACpB,gBAAI,eAAe;AACjB,oBAAM,UAAU,CAAC,EAAE,CAAC,IAAI;AAAA,YAC1B,OAAO;AACL,oBAAM,OAAO,UAAU,GAAG,CAAC;AAC3B;AAAA,YACF;AAAA,UACF;AAAA,QACF;AACA;AAAA,MACF;AAAA,IACF;AAQA,aAAS,kBAAkB,OAAO,aAAa;AAC7C,YAAM,KAAK,CAAC,YAAY,EAAE,CAAC;AAC3B,UAAI,UAAU;AACd,UAAI,eAAe;AACnB,UAAI,eAAe;AACnB,UAAI,cAAc;AAClB,UAAI,cAAc;AAClB,UAAI;AACJ,aAAO,UAAU,MAAM,QAAQ;AAC7B,YAAI,UAAU,MAAM,SAAS,KAAK,CAAC,MAAM,OAAO,EAAE,CAAC,GAAG;AACpD,gBAAM,OAAO,SAAS,CAAC;AACvB;AAAA,QACF;AACA,gBAAQ,MAAM,OAAO,EAAE,CAAC,GAAG;AAAA,UACzB,KAAK;AACH;AACA,2BAAe,MAAM,OAAO,EAAE,CAAC;AAC/B;AACA;AAAA,UACF,KAAK;AACH;AACA,2BAAe,MAAM,OAAO,EAAE,CAAC;AAC/B;AACA;AAAA,UACF,KAAK;AACH,gBAAI,oBAAoB,UAAU,eAAe,eAAe;AAChE,gBAAI,aAAa;AAWf,kBACE,qBAAqB,KACrB,qBAAqB,MAAM,iBAAiB,EAAE,CAAC,CAAC,GAChD;AACA,oBAAI,QAAQ,MAAM,iBAAiB,EAAE,CAAC,EAAE,MAAM,EAAE;AAChD,sBAAM,iBAAiB,EAAE,CAAC,IAAI,MAAM,iBAAiB,EAAE,CAAC,EAAE;AAAA,kBACxD;AAAA,kBACA;AAAA,gBACF;AACA,8BAAc,QAAQ;AACtB,8BAAc,QAAQ;AACtB,oBAAI,CAAC,MAAM,iBAAiB,EAAE,CAAC,GAAG;AAEhC,wBAAM,OAAO,mBAAmB,CAAC;AACjC;AACA,sBAAI,IAAI,oBAAoB;AAC5B,sBAAI,MAAM,CAAC,KAAK,MAAM,CAAC,EAAE,CAAC,MAAM,aAAa;AAC3C;AACA,kCAAc,MAAM,CAAC,EAAE,CAAC,IAAI;AAC5B;AAAA,kBACF;AACA,sBAAI,MAAM,CAAC,KAAK,MAAM,CAAC,EAAE,CAAC,MAAM,aAAa;AAC3C;AACA,kCAAc,MAAM,CAAC,EAAE,CAAC,IAAI;AAC5B;AAAA,kBACF;AACA,sCAAoB;AAAA,gBACtB;AAAA,cACF;AACA,kBAAI,qBAAqB,MAAM,OAAO,EAAE,CAAC,CAAC,GAAG;AAC3C,oBAAI,QAAQ,MAAM,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;AACtC,sBAAM,OAAO,EAAE,CAAC,IAAI,MAAM,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC;AAC7C,+BAAe;AACf,+BAAe;AAAA,cACjB;AAAA,YACF;AACA,gBAAI,UAAU,MAAM,SAAS,KAAK,CAAC,MAAM,OAAO,EAAE,CAAC,GAAG;AAEpD,oBAAM,OAAO,SAAS,CAAC;AACvB;AAAA,YACF;AACA,gBAAI,YAAY,SAAS,KAAK,YAAY,SAAS,GAAG;AAEpD,kBAAI,YAAY,SAAS,KAAK,YAAY,SAAS,GAAG;AAEpD,+BAAe,kBAAkB,aAAa,WAAW;AACzD,oBAAI,iBAAiB,GAAG;AACtB,sBAAI,qBAAqB,GAAG;AAC1B,0BAAM,iBAAiB,EAAE,CAAC,KAAK,YAAY;AAAA,sBACzC;AAAA,sBACA;AAAA,oBACF;AAAA,kBACF,OAAO;AACL,0BAAM,OAAO,GAAG,GAAG;AAAA,sBACjB;AAAA,sBACA,YAAY,UAAU,GAAG,YAAY;AAAA,oBACvC,CAAC;AACD;AAAA,kBACF;AACA,gCAAc,YAAY,UAAU,YAAY;AAChD,gCAAc,YAAY,UAAU,YAAY;AAAA,gBAClD;AAEA,+BAAe,kBAAkB,aAAa,WAAW;AACzD,oBAAI,iBAAiB,GAAG;AACtB,wBAAM,OAAO,EAAE,CAAC,IACd,YAAY,UAAU,YAAY,SAAS,YAAY,IACvD,MAAM,OAAO,EAAE,CAAC;AAClB,gCAAc,YAAY;AAAA,oBACxB;AAAA,oBACA,YAAY,SAAS;AAAA,kBACvB;AACA,gCAAc,YAAY;AAAA,oBACxB;AAAA,oBACA,YAAY,SAAS;AAAA,kBACvB;AAAA,gBACF;AAAA,cACF;AAEA,kBAAI,IAAI,eAAe;AACvB,kBAAI,YAAY,WAAW,KAAK,YAAY,WAAW,GAAG;AACxD,sBAAM,OAAO,UAAU,GAAG,CAAC;AAC3B,0BAAU,UAAU;AAAA,cACtB,WAAW,YAAY,WAAW,GAAG;AACnC,sBAAM,OAAO,UAAU,GAAG,GAAG,CAAC,aAAa,WAAW,CAAC;AACvD,0BAAU,UAAU,IAAI;AAAA,cAC1B,WAAW,YAAY,WAAW,GAAG;AACnC,sBAAM,OAAO,UAAU,GAAG,GAAG,CAAC,aAAa,WAAW,CAAC;AACvD,0BAAU,UAAU,IAAI;AAAA,cAC1B,OAAO;AACL,sBAAM;AAAA,kBACJ,UAAU;AAAA,kBACV;AAAA,kBACA,CAAC,aAAa,WAAW;AAAA,kBACzB,CAAC,aAAa,WAAW;AAAA,gBAC3B;AACA,0BAAU,UAAU,IAAI;AAAA,cAC1B;AAAA,YACF;AACA,gBAAI,YAAY,KAAK,MAAM,UAAU,CAAC,EAAE,CAAC,MAAM,YAAY;AAEzD,oBAAM,UAAU,CAAC,EAAE,CAAC,KAAK,MAAM,OAAO,EAAE,CAAC;AACzC,oBAAM,OAAO,SAAS,CAAC;AAAA,YACzB,OAAO;AACL;AAAA,YACF;AACA,2BAAe;AACf,2BAAe;AACf,0BAAc;AACd,0BAAc;AACd;AAAA,QACJ;AAAA,MACF;AACA,UAAI,MAAM,MAAM,SAAS,CAAC,EAAE,CAAC,MAAM,IAAI;AACrC,cAAM,IAAI;AAAA,MACZ;AAKA,UAAI,UAAU;AACd,gBAAU;AAEV,aAAO,UAAU,MAAM,SAAS,GAAG;AACjC,YACE,MAAM,UAAU,CAAC,EAAE,CAAC,MAAM,cAC1B,MAAM,UAAU,CAAC,EAAE,CAAC,MAAM,YAC1B;AAEA,cACE,MAAM,OAAO,EAAE,CAAC,EAAE;AAAA,YAChB,MAAM,OAAO,EAAE,CAAC,EAAE,SAAS,MAAM,UAAU,CAAC,EAAE,CAAC,EAAE;AAAA,UACnD,MAAM,MAAM,UAAU,CAAC,EAAE,CAAC,GAC1B;AAEA,kBAAM,OAAO,EAAE,CAAC,IACd,MAAM,UAAU,CAAC,EAAE,CAAC,IACpB,MAAM,OAAO,EAAE,CAAC,EAAE;AAAA,cAChB;AAAA,cACA,MAAM,OAAO,EAAE,CAAC,EAAE,SAAS,MAAM,UAAU,CAAC,EAAE,CAAC,EAAE;AAAA,YACnD;AACF,kBAAM,UAAU,CAAC,EAAE,CAAC,IAAI,MAAM,UAAU,CAAC,EAAE,CAAC,IAAI,MAAM,UAAU,CAAC,EAAE,CAAC;AACpE,kBAAM,OAAO,UAAU,GAAG,CAAC;AAC3B,sBAAU;AAAA,UACZ,WACE,MAAM,OAAO,EAAE,CAAC,EAAE,UAAU,GAAG,MAAM,UAAU,CAAC,EAAE,CAAC,EAAE,MAAM,KAC3D,MAAM,UAAU,CAAC,EAAE,CAAC,GACpB;AAEA,kBAAM,UAAU,CAAC,EAAE,CAAC,KAAK,MAAM,UAAU,CAAC,EAAE,CAAC;AAC7C,kBAAM,OAAO,EAAE,CAAC,IACd,MAAM,OAAO,EAAE,CAAC,EAAE,UAAU,MAAM,UAAU,CAAC,EAAE,CAAC,EAAE,MAAM,IACxD,MAAM,UAAU,CAAC,EAAE,CAAC;AACtB,kBAAM,OAAO,UAAU,GAAG,CAAC;AAC3B,sBAAU;AAAA,UACZ;AAAA,QACF;AACA;AAAA,MACF;AAEA,UAAI,SAAS;AACX,0BAAkB,OAAO,WAAW;AAAA,MACtC;AAAA,IACF;AAEA,aAAS,wBAAwB,UAAU;AACzC,aAAO,YAAY,SAAU,YAAY;AAAA,IAC3C;AAEA,aAAS,sBAAsB,UAAU;AACvC,aAAO,YAAY,SAAU,YAAY;AAAA,IAC3C;AAEA,aAAS,qBAAqB,KAAK;AACjC,aAAO,sBAAsB,IAAI,WAAW,CAAC,CAAC;AAAA,IAChD;AAEA,aAAS,qBAAqB,KAAK;AACjC,aAAO,wBAAwB,IAAI,WAAW,IAAI,SAAS,CAAC,CAAC;AAAA,IAC/D;AAEA,aAAS,oBAAoB,QAAQ;AACnC,UAAI,MAAM,CAAC;AACX,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAI,OAAO,CAAC,EAAE,CAAC,EAAE,SAAS,GAAG;AAC3B,cAAI,KAAK,OAAO,CAAC,CAAC;AAAA,QACpB;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,aAAS,iBAAiB,QAAQ,WAAW,WAAW,OAAO;AAC7D,UAAI,qBAAqB,MAAM,KAAK,qBAAqB,KAAK,GAAG;AAC/D,eAAO;AAAA,MACT;AACA,aAAO,oBAAoB;AAAA,QACzB,CAAC,YAAY,MAAM;AAAA,QACnB,CAAC,aAAa,SAAS;AAAA,QACvB,CAAC,aAAa,SAAS;AAAA,QACvB,CAAC,YAAY,KAAK;AAAA,MACpB,CAAC;AAAA,IACH;AAEA,aAAS,sBAAsB,SAAS,SAAS,YAAY;AAE3D,UAAI,WACF,OAAO,eAAe,WAClB,EAAE,OAAO,YAAY,QAAQ,EAAE,IAC/B,WAAW;AACjB,UAAI,WAAW,OAAO,eAAe,WAAW,OAAO,WAAW;AAKlE,UAAI,YAAY,QAAQ;AACxB,UAAI,YAAY,QAAQ;AACxB,UAAI,SAAS,WAAW,MAAM,aAAa,QAAQ,SAAS,WAAW,IAAI;AAEzE,YAAI,YAAY,SAAS;AACzB,YAAI,YAAY,QAAQ,MAAM,GAAG,SAAS;AAC1C,YAAI,WAAW,QAAQ,MAAM,SAAS;AACtC,YAAI,iBAAiB,WAAW,SAAS,QAAQ;AACjD,oBAAY;AAEV,cAAI,YAAY,YAAY,YAAY;AACxC,cAAI,mBAAmB,QAAQ,mBAAmB,WAAW;AAC3D,kBAAM;AAAA,UACR;AACA,cAAI,YAAY,KAAK,YAAY,WAAW;AAC1C,kBAAM;AAAA,UACR;AACA,cAAI,YAAY,QAAQ,MAAM,GAAG,SAAS;AAC1C,cAAI,WAAW,QAAQ,MAAM,SAAS;AACtC,cAAI,aAAa,UAAU;AACzB,kBAAM;AAAA,UACR;AACA,cAAI,eAAe,KAAK,IAAI,WAAW,SAAS;AAChD,cAAI,YAAY,UAAU,MAAM,GAAG,YAAY;AAC/C,cAAI,YAAY,UAAU,MAAM,GAAG,YAAY;AAC/C,cAAI,cAAc,WAAW;AAC3B,kBAAM;AAAA,UACR;AACA,cAAI,YAAY,UAAU,MAAM,YAAY;AAC5C,cAAI,YAAY,UAAU,MAAM,YAAY;AAC5C,iBAAO,iBAAiB,WAAW,WAAW,WAAW,QAAQ;AAAA,QACnE;AACA,mBAAW;AAET,cAAI,mBAAmB,QAAQ,mBAAmB,WAAW;AAC3D,kBAAM;AAAA,UACR;AACA,cAAI,SAAS;AACb,cAAI,YAAY,QAAQ,MAAM,GAAG,MAAM;AACvC,cAAI,WAAW,QAAQ,MAAM,MAAM;AACnC,cAAI,cAAc,WAAW;AAC3B,kBAAM;AAAA,UACR;AACA,cAAI,eAAe,KAAK,IAAI,YAAY,QAAQ,YAAY,MAAM;AAClE,cAAI,YAAY,SAAS,MAAM,SAAS,SAAS,YAAY;AAC7D,cAAI,YAAY,SAAS,MAAM,SAAS,SAAS,YAAY;AAC7D,cAAI,cAAc,WAAW;AAC3B,kBAAM;AAAA,UACR;AACA,cAAI,YAAY,SAAS,MAAM,GAAG,SAAS,SAAS,YAAY;AAChE,cAAI,YAAY,SAAS,MAAM,GAAG,SAAS,SAAS,YAAY;AAChE,iBAAO,iBAAiB,WAAW,WAAW,WAAW,SAAS;AAAA,QACpE;AAAA,MACF;AACA,UAAI,SAAS,SAAS,KAAK,YAAY,SAAS,WAAW,GAAG;AAC5D,sBAAc;AAEZ,cAAI,YAAY,QAAQ,MAAM,GAAG,SAAS,KAAK;AAC/C,cAAI,YAAY,QAAQ,MAAM,SAAS,QAAQ,SAAS,MAAM;AAC9D,cAAI,eAAe,UAAU;AAC7B,cAAI,eAAe,UAAU;AAC7B,cAAI,YAAY,eAAe,cAAc;AAC3C,kBAAM;AAAA,UACR;AACA,cAAI,YAAY,QAAQ,MAAM,GAAG,YAAY;AAC7C,cAAI,YAAY,QAAQ,MAAM,YAAY,YAAY;AACtD,cAAI,cAAc,aAAa,cAAc,WAAW;AACtD,kBAAM;AAAA,UACR;AACA,cAAI,YAAY,QAAQ,MAAM,cAAc,YAAY,YAAY;AACpE,cAAI,YAAY,QAAQ,MAAM,cAAc,YAAY,YAAY;AACpE,iBAAO,iBAAiB,WAAW,WAAW,WAAW,SAAS;AAAA,QACpE;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,KAAK,OAAO,OAAO,YAAY,SAAS;AAG/C,aAAO,UAAU,OAAO,OAAO,YAAY,SAAS,IAAI;AAAA,IAC1D;AAEA,SAAK,SAAS;AACd,SAAK,SAAS;AACd,SAAK,QAAQ;AAEb,WAAO,UAAU;AAAA;AAAA;;;ACjnCjB;AAAA;AAUA,QAAI,mBAAmB;AAGvB,QAAI,iBAAiB;AAGrB,QAAI,mBAAmB;AAGvB,QAAI,UAAU;AAAd,QACI,WAAW;AADf,QAEI,UAAU;AAFd,QAGI,UAAU;AAHd,QAII,WAAW;AAJf,QAKI,UAAU;AALd,QAMI,SAAS;AANb,QAOI,SAAS;AAPb,QAQI,YAAY;AARhB,QASI,YAAY;AAThB,QAUI,aAAa;AAVjB,QAWI,YAAY;AAXhB,QAYI,SAAS;AAZb,QAaI,YAAY;AAbhB,QAcI,YAAY;AAdhB,QAeI,aAAa;AAEjB,QAAI,iBAAiB;AAArB,QACI,cAAc;AADlB,QAEI,aAAa;AAFjB,QAGI,aAAa;AAHjB,QAII,UAAU;AAJd,QAKI,WAAW;AALf,QAMI,WAAW;AANf,QAOI,WAAW;AAPf,QAQI,kBAAkB;AARtB,QASI,YAAY;AAThB,QAUI,YAAY;AAMhB,QAAI,eAAe;AAGnB,QAAI,UAAU;AAGd,QAAI,eAAe;AAGnB,QAAI,WAAW;AAGf,QAAI,gBAAgB,CAAC;AACrB,kBAAc,OAAO,IAAI,cAAc,QAAQ,IAC/C,cAAc,cAAc,IAAI,cAAc,WAAW,IACzD,cAAc,OAAO,IAAI,cAAc,OAAO,IAC9C,cAAc,UAAU,IAAI,cAAc,UAAU,IACpD,cAAc,OAAO,IAAI,cAAc,QAAQ,IAC/C,cAAc,QAAQ,IAAI,cAAc,MAAM,IAC9C,cAAc,SAAS,IAAI,cAAc,SAAS,IAClD,cAAc,SAAS,IAAI,cAAc,MAAM,IAC/C,cAAc,SAAS,IAAI,cAAc,SAAS,IAClD,cAAc,QAAQ,IAAI,cAAc,eAAe,IACvD,cAAc,SAAS,IAAI,cAAc,SAAS,IAAI;AACtD,kBAAc,QAAQ,IAAI,cAAc,OAAO,IAC/C,cAAc,UAAU,IAAI;AAG5B,QAAI,aAAa,OAAO,UAAU,YAAY,UAAU,OAAO,WAAW,UAAU;AAGpF,QAAI,WAAW,OAAO,QAAQ,YAAY,QAAQ,KAAK,WAAW,UAAU;AAG5E,QAAI,OAAO,cAAc,YAAY,SAAS,aAAa,EAAE;AAG7D,QAAI,cAAc,OAAO,WAAW,YAAY,WAAW,CAAC,QAAQ,YAAY;AAGhF,QAAI,aAAa,eAAe,OAAO,UAAU,YAAY,UAAU,CAAC,OAAO,YAAY;AAG3F,QAAI,gBAAgB,cAAc,WAAW,YAAY;AAUzD,aAAS,YAAY,KAAK,MAAM;AAE9B,UAAI,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AACxB,aAAO;AAAA,IACT;AAUA,aAAS,YAAY,KAAK,OAAO;AAE/B,UAAI,IAAI,KAAK;AACb,aAAO;AAAA,IACT;AAWA,aAAS,UAAU,OAAO,UAAU;AAClC,UAAI,QAAQ,IACR,SAAS,QAAQ,MAAM,SAAS;AAEpC,aAAO,EAAE,QAAQ,QAAQ;AACvB,YAAI,SAAS,MAAM,KAAK,GAAG,OAAO,KAAK,MAAM,OAAO;AAClD;AAAA,QACF;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAUA,aAAS,UAAU,OAAO,QAAQ;AAChC,UAAI,QAAQ,IACR,SAAS,OAAO,QAChB,SAAS,MAAM;AAEnB,aAAO,EAAE,QAAQ,QAAQ;AACvB,cAAM,SAAS,KAAK,IAAI,OAAO,KAAK;AAAA,MACtC;AACA,aAAO;AAAA,IACT;AAcA,aAAS,YAAY,OAAO,UAAU,aAAa,WAAW;AAC5D,UAAI,QAAQ,IACR,SAAS,QAAQ,MAAM,SAAS;AAEpC,UAAI,aAAa,QAAQ;AACvB,sBAAc,MAAM,EAAE,KAAK;AAAA,MAC7B;AACA,aAAO,EAAE,QAAQ,QAAQ;AACvB,sBAAc,SAAS,aAAa,MAAM,KAAK,GAAG,OAAO,KAAK;AAAA,MAChE;AACA,aAAO;AAAA,IACT;AAWA,aAAS,UAAU,GAAG,UAAU;AAC9B,UAAI,QAAQ,IACR,SAAS,MAAM,CAAC;AAEpB,aAAO,EAAE,QAAQ,GAAG;AAClB,eAAO,KAAK,IAAI,SAAS,KAAK;AAAA,MAChC;AACA,aAAO;AAAA,IACT;AAUA,aAAS,SAAS,QAAQ,KAAK;AAC7B,aAAO,UAAU,OAAO,SAAY,OAAO,GAAG;AAAA,IAChD;AASA,aAAS,aAAa,OAAO;AAG3B,UAAI,SAAS;AACb,UAAI,SAAS,QAAQ,OAAO,MAAM,YAAY,YAAY;AACxD,YAAI;AACF,mBAAS,CAAC,EAAE,QAAQ;AAAA,QACtB,SAAS,GAAG;AAAA,QAAC;AAAA,MACf;AACA,aAAO;AAAA,IACT;AASA,aAAS,WAAW,KAAK;AACvB,UAAI,QAAQ,IACR,SAAS,MAAM,IAAI,IAAI;AAE3B,UAAI,QAAQ,SAAS,OAAO,KAAK;AAC/B,eAAO,EAAE,KAAK,IAAI,CAAC,KAAK,KAAK;AAAA,MAC/B,CAAC;AACD,aAAO;AAAA,IACT;AAUA,aAAS,QAAQ,MAAM,WAAW;AAChC,aAAO,SAAS,KAAK;AACnB,eAAO,KAAK,UAAU,GAAG,CAAC;AAAA,MAC5B;AAAA,IACF;AASA,aAAS,WAAW,KAAK;AACvB,UAAI,QAAQ,IACR,SAAS,MAAM,IAAI,IAAI;AAE3B,UAAI,QAAQ,SAAS,OAAO;AAC1B,eAAO,EAAE,KAAK,IAAI;AAAA,MACpB,CAAC;AACD,aAAO;AAAA,IACT;AAGA,QAAI,aAAa,MAAM;AAAvB,QACI,YAAY,SAAS;AADzB,QAEI,cAAc,OAAO;AAGzB,QAAI,aAAa,KAAK,oBAAoB;AAG1C,QAAI,aAAc,WAAW;AAC3B,UAAI,MAAM,SAAS,KAAK,cAAc,WAAW,QAAQ,WAAW,KAAK,YAAY,EAAE;AACvF,aAAO,MAAO,mBAAmB,MAAO;AAAA,IAC1C,EAAE;AAGF,QAAI,eAAe,UAAU;AAG7B,QAAI,iBAAiB,YAAY;AAOjC,QAAI,iBAAiB,YAAY;AAGjC,QAAI,aAAa;AAAA,MAAO,MACtB,aAAa,KAAK,cAAc,EAAE,QAAQ,cAAc,MAAM,EAC7D,QAAQ,0DAA0D,OAAO,IAAI;AAAA,IAChF;AAGA,QAAI,SAAS,gBAAgB,KAAK,SAAS;AAA3C,QACI,SAAS,KAAK;AADlB,QAEI,aAAa,KAAK;AAFtB,QAGI,eAAe,QAAQ,OAAO,gBAAgB,MAAM;AAHxD,QAII,eAAe,OAAO;AAJ1B,QAKI,uBAAuB,YAAY;AALvC,QAMI,SAAS,WAAW;AAGxB,QAAI,mBAAmB,OAAO;AAA9B,QACI,iBAAiB,SAAS,OAAO,WAAW;AADhD,QAEI,aAAa,QAAQ,OAAO,MAAM,MAAM;AAG5C,QAAI,WAAW,UAAU,MAAM,UAAU;AAAzC,QACI,MAAM,UAAU,MAAM,KAAK;AAD/B,QAEIE,WAAU,UAAU,MAAM,SAAS;AAFvC,QAGI,MAAM,UAAU,MAAM,KAAK;AAH/B,QAIIC,WAAU,UAAU,MAAM,SAAS;AAJvC,QAKI,eAAe,UAAU,QAAQ,QAAQ;AAG7C,QAAI,qBAAqB,SAAS,QAAQ;AAA1C,QACI,gBAAgB,SAAS,GAAG;AADhC,QAEI,oBAAoB,SAASD,QAAO;AAFxC,QAGI,gBAAgB,SAAS,GAAG;AAHhC,QAII,oBAAoB,SAASC,QAAO;AAGxC,QAAI,cAAc,SAAS,OAAO,YAAY;AAA9C,QACI,gBAAgB,cAAc,YAAY,UAAU;AASxD,aAAS,KAAK,SAAS;AACrB,UAAI,QAAQ,IACR,SAAS,UAAU,QAAQ,SAAS;AAExC,WAAK,MAAM;AACX,aAAO,EAAE,QAAQ,QAAQ;AACvB,YAAI,QAAQ,QAAQ,KAAK;AACzB,aAAK,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,MAC7B;AAAA,IACF;AASA,aAAS,YAAY;AACnB,WAAK,WAAW,eAAe,aAAa,IAAI,IAAI,CAAC;AAAA,IACvD;AAYA,aAAS,WAAW,KAAK;AACvB,aAAO,KAAK,IAAI,GAAG,KAAK,OAAO,KAAK,SAAS,GAAG;AAAA,IAClD;AAWA,aAAS,QAAQ,KAAK;AACpB,UAAI,OAAO,KAAK;AAChB,UAAI,cAAc;AAChB,YAAI,SAAS,KAAK,GAAG;AACrB,eAAO,WAAW,iBAAiB,SAAY;AAAA,MACjD;AACA,aAAO,eAAe,KAAK,MAAM,GAAG,IAAI,KAAK,GAAG,IAAI;AAAA,IACtD;AAWA,aAAS,QAAQ,KAAK;AACpB,UAAI,OAAO,KAAK;AAChB,aAAO,eAAe,KAAK,GAAG,MAAM,SAAY,eAAe,KAAK,MAAM,GAAG;AAAA,IAC/E;AAYA,aAAS,QAAQ,KAAK,OAAO;AAC3B,UAAI,OAAO,KAAK;AAChB,WAAK,GAAG,IAAK,gBAAgB,UAAU,SAAa,iBAAiB;AACrE,aAAO;AAAA,IACT;AAGA,SAAK,UAAU,QAAQ;AACvB,SAAK,UAAU,QAAQ,IAAI;AAC3B,SAAK,UAAU,MAAM;AACrB,SAAK,UAAU,MAAM;AACrB,SAAK,UAAU,MAAM;AASrB,aAAS,UAAU,SAAS;AAC1B,UAAI,QAAQ,IACR,SAAS,UAAU,QAAQ,SAAS;AAExC,WAAK,MAAM;AACX,aAAO,EAAE,QAAQ,QAAQ;AACvB,YAAI,QAAQ,QAAQ,KAAK;AACzB,aAAK,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,MAC7B;AAAA,IACF;AASA,aAAS,iBAAiB;AACxB,WAAK,WAAW,CAAC;AAAA,IACnB;AAWA,aAAS,gBAAgB,KAAK;AAC5B,UAAI,OAAO,KAAK,UACZ,QAAQ,aAAa,MAAM,GAAG;AAElC,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACT;AACA,UAAI,YAAY,KAAK,SAAS;AAC9B,UAAI,SAAS,WAAW;AACtB,aAAK,IAAI;AAAA,MACX,OAAO;AACL,eAAO,KAAK,MAAM,OAAO,CAAC;AAAA,MAC5B;AACA,aAAO;AAAA,IACT;AAWA,aAAS,aAAa,KAAK;AACzB,UAAI,OAAO,KAAK,UACZ,QAAQ,aAAa,MAAM,GAAG;AAElC,aAAO,QAAQ,IAAI,SAAY,KAAK,KAAK,EAAE,CAAC;AAAA,IAC9C;AAWA,aAAS,aAAa,KAAK;AACzB,aAAO,aAAa,KAAK,UAAU,GAAG,IAAI;AAAA,IAC5C;AAYA,aAAS,aAAa,KAAK,OAAO;AAChC,UAAI,OAAO,KAAK,UACZ,QAAQ,aAAa,MAAM,GAAG;AAElC,UAAI,QAAQ,GAAG;AACb,aAAK,KAAK,CAAC,KAAK,KAAK,CAAC;AAAA,MACxB,OAAO;AACL,aAAK,KAAK,EAAE,CAAC,IAAI;AAAA,MACnB;AACA,aAAO;AAAA,IACT;AAGA,cAAU,UAAU,QAAQ;AAC5B,cAAU,UAAU,QAAQ,IAAI;AAChC,cAAU,UAAU,MAAM;AAC1B,cAAU,UAAU,MAAM;AAC1B,cAAU,UAAU,MAAM;AAS1B,aAAS,SAAS,SAAS;AACzB,UAAI,QAAQ,IACR,SAAS,UAAU,QAAQ,SAAS;AAExC,WAAK,MAAM;AACX,aAAO,EAAE,QAAQ,QAAQ;AACvB,YAAI,QAAQ,QAAQ,KAAK;AACzB,aAAK,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,MAC7B;AAAA,IACF;AASA,aAAS,gBAAgB;AACvB,WAAK,WAAW;AAAA,QACd,QAAQ,IAAI;AAAA,QACZ,OAAO,KAAK,OAAO;AAAA,QACnB,UAAU,IAAI;AAAA,MAChB;AAAA,IACF;AAWA,aAAS,eAAe,KAAK;AAC3B,aAAO,WAAW,MAAM,GAAG,EAAE,QAAQ,EAAE,GAAG;AAAA,IAC5C;AAWA,aAAS,YAAY,KAAK;AACxB,aAAO,WAAW,MAAM,GAAG,EAAE,IAAI,GAAG;AAAA,IACtC;AAWA,aAAS,YAAY,KAAK;AACxB,aAAO,WAAW,MAAM,GAAG,EAAE,IAAI,GAAG;AAAA,IACtC;AAYA,aAAS,YAAY,KAAK,OAAO;AAC/B,iBAAW,MAAM,GAAG,EAAE,IAAI,KAAK,KAAK;AACpC,aAAO;AAAA,IACT;AAGA,aAAS,UAAU,QAAQ;AAC3B,aAAS,UAAU,QAAQ,IAAI;AAC/B,aAAS,UAAU,MAAM;AACzB,aAAS,UAAU,MAAM;AACzB,aAAS,UAAU,MAAM;AASzB,aAAS,MAAM,SAAS;AACtB,WAAK,WAAW,IAAI,UAAU,OAAO;AAAA,IACvC;AASA,aAAS,aAAa;AACpB,WAAK,WAAW,IAAI;AAAA,IACtB;AAWA,aAAS,YAAY,KAAK;AACxB,aAAO,KAAK,SAAS,QAAQ,EAAE,GAAG;AAAA,IACpC;AAWA,aAAS,SAAS,KAAK;AACrB,aAAO,KAAK,SAAS,IAAI,GAAG;AAAA,IAC9B;AAWA,aAAS,SAAS,KAAK;AACrB,aAAO,KAAK,SAAS,IAAI,GAAG;AAAA,IAC9B;AAYA,aAAS,SAAS,KAAK,OAAO;AAC5B,UAAI,QAAQ,KAAK;AACjB,UAAI,iBAAiB,WAAW;AAC9B,YAAI,QAAQ,MAAM;AAClB,YAAI,CAAC,OAAQ,MAAM,SAAS,mBAAmB,GAAI;AACjD,gBAAM,KAAK,CAAC,KAAK,KAAK,CAAC;AACvB,iBAAO;AAAA,QACT;AACA,gBAAQ,KAAK,WAAW,IAAI,SAAS,KAAK;AAAA,MAC5C;AACA,YAAM,IAAI,KAAK,KAAK;AACpB,aAAO;AAAA,IACT;AAGA,UAAM,UAAU,QAAQ;AACxB,UAAM,UAAU,QAAQ,IAAI;AAC5B,UAAM,UAAU,MAAM;AACtB,UAAM,UAAU,MAAM;AACtB,UAAM,UAAU,MAAM;AAUtB,aAAS,cAAc,OAAO,WAAW;AAGvC,UAAI,SAAU,QAAQ,KAAK,KAAK,YAAY,KAAK,IAC7C,UAAU,MAAM,QAAQ,MAAM,IAC9B,CAAC;AAEL,UAAI,SAAS,OAAO,QAChB,cAAc,CAAC,CAAC;AAEpB,eAAS,OAAO,OAAO;AACrB,aAAK,aAAa,eAAe,KAAK,OAAO,GAAG,MAC5C,EAAE,gBAAgB,OAAO,YAAY,QAAQ,KAAK,MAAM,KAAK;AAC/D,iBAAO,KAAK,GAAG;AAAA,QACjB;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAYA,aAAS,YAAY,QAAQ,KAAK,OAAO;AACvC,UAAI,WAAW,OAAO,GAAG;AACzB,UAAI,EAAE,eAAe,KAAK,QAAQ,GAAG,KAAK,GAAG,UAAU,KAAK,MACvD,UAAU,UAAa,EAAE,OAAO,SAAU;AAC7C,eAAO,GAAG,IAAI;AAAA,MAChB;AAAA,IACF;AAUA,aAAS,aAAa,OAAO,KAAK;AAChC,UAAI,SAAS,MAAM;AACnB,aAAO,UAAU;AACf,YAAI,GAAG,MAAM,MAAM,EAAE,CAAC,GAAG,GAAG,GAAG;AAC7B,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAWA,aAAS,WAAW,QAAQ,QAAQ;AAClC,aAAO,UAAU,WAAW,QAAQ,KAAK,MAAM,GAAG,MAAM;AAAA,IAC1D;AAgBA,aAAS,UAAU,OAAO,QAAQ,QAAQ,YAAY,KAAK,QAAQ,OAAO;AACxE,UAAI;AACJ,UAAI,YAAY;AACd,iBAAS,SAAS,WAAW,OAAO,KAAK,QAAQ,KAAK,IAAI,WAAW,KAAK;AAAA,MAC5E;AACA,UAAI,WAAW,QAAW;AACxB,eAAO;AAAA,MACT;AACA,UAAI,CAAC,SAAS,KAAK,GAAG;AACpB,eAAO;AAAA,MACT;AACA,UAAI,QAAQ,QAAQ,KAAK;AACzB,UAAI,OAAO;AACT,iBAAS,eAAe,KAAK;AAC7B,YAAI,CAAC,QAAQ;AACX,iBAAO,UAAU,OAAO,MAAM;AAAA,QAChC;AAAA,MACF,OAAO;AACL,YAAI,MAAM,OAAO,KAAK,GAClB,SAAS,OAAO,WAAW,OAAO;AAEtC,YAAI,SAAS,KAAK,GAAG;AACnB,iBAAO,YAAY,OAAO,MAAM;AAAA,QAClC;AACA,YAAI,OAAO,aAAa,OAAO,WAAY,UAAU,CAAC,QAAS;AAC7D,cAAI,aAAa,KAAK,GAAG;AACvB,mBAAO,SAAS,QAAQ,CAAC;AAAA,UAC3B;AACA,mBAAS,gBAAgB,SAAS,CAAC,IAAI,KAAK;AAC5C,cAAI,CAAC,QAAQ;AACX,mBAAO,YAAY,OAAO,WAAW,QAAQ,KAAK,CAAC;AAAA,UACrD;AAAA,QACF,OAAO;AACL,cAAI,CAAC,cAAc,GAAG,GAAG;AACvB,mBAAO,SAAS,QAAQ,CAAC;AAAA,UAC3B;AACA,mBAAS,eAAe,OAAO,KAAK,WAAW,MAAM;AAAA,QACvD;AAAA,MACF;AAEA,gBAAU,QAAQ,IAAI;AACtB,UAAI,UAAU,MAAM,IAAI,KAAK;AAC7B,UAAI,SAAS;AACX,eAAO;AAAA,MACT;AACA,YAAM,IAAI,OAAO,MAAM;AAEvB,UAAI,CAAC,OAAO;AACV,YAAI,QAAQ,SAAS,WAAW,KAAK,IAAI,KAAK,KAAK;AAAA,MACrD;AACA,gBAAU,SAAS,OAAO,SAAS,UAAUC,MAAK;AAChD,YAAI,OAAO;AACT,UAAAA,OAAM;AACN,qBAAW,MAAMA,IAAG;AAAA,QACtB;AAEA,oBAAY,QAAQA,MAAK,UAAU,UAAU,QAAQ,QAAQ,YAAYA,MAAK,OAAO,KAAK,CAAC;AAAA,MAC7F,CAAC;AACD,aAAO;AAAA,IACT;AAUA,aAAS,WAAW,OAAO;AACzB,aAAO,SAAS,KAAK,IAAI,aAAa,KAAK,IAAI,CAAC;AAAA,IAClD;AAaA,aAAS,eAAe,QAAQ,UAAU,aAAa;AACrD,UAAI,SAAS,SAAS,MAAM;AAC5B,aAAO,QAAQ,MAAM,IAAI,SAAS,UAAU,QAAQ,YAAY,MAAM,CAAC;AAAA,IACzE;AASA,aAAS,WAAW,OAAO;AACzB,aAAO,eAAe,KAAK,KAAK;AAAA,IAClC;AAUA,aAAS,aAAa,OAAO;AAC3B,UAAI,CAAC,SAAS,KAAK,KAAK,SAAS,KAAK,GAAG;AACvC,eAAO;AAAA,MACT;AACA,UAAI,UAAW,WAAW,KAAK,KAAK,aAAa,KAAK,IAAK,aAAa;AACxE,aAAO,QAAQ,KAAK,SAAS,KAAK,CAAC;AAAA,IACrC;AASA,aAAS,SAAS,QAAQ;AACxB,UAAI,CAAC,YAAY,MAAM,GAAG;AACxB,eAAO,WAAW,MAAM;AAAA,MAC1B;AACA,UAAI,SAAS,CAAC;AACd,eAAS,OAAO,OAAO,MAAM,GAAG;AAC9B,YAAI,eAAe,KAAK,QAAQ,GAAG,KAAK,OAAO,eAAe;AAC5D,iBAAO,KAAK,GAAG;AAAA,QACjB;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAUA,aAAS,YAAY,QAAQ,QAAQ;AACnC,UAAI,QAAQ;AACV,eAAO,OAAO,MAAM;AAAA,MACtB;AACA,UAAI,SAAS,IAAI,OAAO,YAAY,OAAO,MAAM;AACjD,aAAO,KAAK,MAAM;AAClB,aAAO;AAAA,IACT;AASA,aAAS,iBAAiB,aAAa;AACrC,UAAI,SAAS,IAAI,YAAY,YAAY,YAAY,UAAU;AAC/D,UAAI,WAAW,MAAM,EAAE,IAAI,IAAI,WAAW,WAAW,CAAC;AACtD,aAAO;AAAA,IACT;AAUA,aAAS,cAAc,UAAU,QAAQ;AACvC,UAAI,SAAS,SAAS,iBAAiB,SAAS,MAAM,IAAI,SAAS;AACnE,aAAO,IAAI,SAAS,YAAY,QAAQ,SAAS,YAAY,SAAS,UAAU;AAAA,IAClF;AAWA,aAAS,SAAS,KAAK,QAAQ,WAAW;AACxC,UAAI,QAAQ,SAAS,UAAU,WAAW,GAAG,GAAG,IAAI,IAAI,WAAW,GAAG;AACtE,aAAO,YAAY,OAAO,aAAa,IAAI,IAAI,aAAW;AAAA,IAC5D;AASA,aAAS,YAAY,QAAQ;AAC3B,UAAI,SAAS,IAAI,OAAO,YAAY,OAAO,QAAQ,QAAQ,KAAK,MAAM,CAAC;AACvE,aAAO,YAAY,OAAO;AAC1B,aAAO;AAAA,IACT;AAWA,aAAS,SAAS,KAAK,QAAQ,WAAW;AACxC,UAAI,QAAQ,SAAS,UAAU,WAAW,GAAG,GAAG,IAAI,IAAI,WAAW,GAAG;AACtE,aAAO,YAAY,OAAO,aAAa,IAAI,IAAI,aAAW;AAAA,IAC5D;AASA,aAAS,YAAY,QAAQ;AAC3B,aAAO,gBAAgB,OAAO,cAAc,KAAK,MAAM,CAAC,IAAI,CAAC;AAAA,IAC/D;AAUA,aAAS,gBAAgB,YAAY,QAAQ;AAC3C,UAAI,SAAS,SAAS,iBAAiB,WAAW,MAAM,IAAI,WAAW;AACvE,aAAO,IAAI,WAAW,YAAY,QAAQ,WAAW,YAAY,WAAW,MAAM;AAAA,IACpF;AAUA,aAAS,UAAU,QAAQ,OAAO;AAChC,UAAI,QAAQ,IACR,SAAS,OAAO;AAEpB,gBAAU,QAAQ,MAAM,MAAM;AAC9B,aAAO,EAAE,QAAQ,QAAQ;AACvB,cAAM,KAAK,IAAI,OAAO,KAAK;AAAA,MAC7B;AACA,aAAO;AAAA,IACT;AAYA,aAAS,WAAW,QAAQ,OAAO,QAAQ,YAAY;AACrD,iBAAW,SAAS,CAAC;AAErB,UAAI,QAAQ,IACR,SAAS,MAAM;AAEnB,aAAO,EAAE,QAAQ,QAAQ;AACvB,YAAI,MAAM,MAAM,KAAK;AAErB,YAAI,WAAW,aACX,WAAW,OAAO,GAAG,GAAG,OAAO,GAAG,GAAG,KAAK,QAAQ,MAAM,IACxD;AAEJ,oBAAY,QAAQ,KAAK,aAAa,SAAY,OAAO,GAAG,IAAI,QAAQ;AAAA,MAC1E;AACA,aAAO;AAAA,IACT;AAUA,aAAS,YAAY,QAAQ,QAAQ;AACnC,aAAO,WAAW,QAAQ,WAAW,MAAM,GAAG,MAAM;AAAA,IACtD;AASA,aAAS,WAAW,QAAQ;AAC1B,aAAO,eAAe,QAAQ,MAAM,UAAU;AAAA,IAChD;AAUA,aAAS,WAAW,KAAK,KAAK;AAC5B,UAAI,OAAO,IAAI;AACf,aAAO,UAAU,GAAG,IAChB,KAAK,OAAO,OAAO,WAAW,WAAW,MAAM,IAC/C,KAAK;AAAA,IACX;AAUA,aAAS,UAAU,QAAQ,KAAK;AAC9B,UAAI,QAAQ,SAAS,QAAQ,GAAG;AAChC,aAAO,aAAa,KAAK,IAAI,QAAQ;AAAA,IACvC;AASA,QAAI,aAAa,mBAAmB,QAAQ,kBAAkB,MAAM,IAAI;AASxE,QAAI,SAAS;AAIb,QAAK,YAAY,OAAO,IAAI,SAAS,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,eACxD,OAAO,OAAO,IAAI,KAAG,KAAK,UAC1BF,YAAW,OAAOA,SAAQ,QAAQ,CAAC,KAAK,cACxC,OAAO,OAAO,IAAI,KAAG,KAAK,UAC1BC,YAAW,OAAO,IAAIA,UAAO,KAAK,YAAa;AAClD,eAAS,SAAS,OAAO;AACvB,YAAI,SAAS,eAAe,KAAK,KAAK,GAClC,OAAO,UAAU,YAAY,MAAM,cAAc,QACjD,aAAa,OAAO,SAAS,IAAI,IAAI;AAEzC,YAAI,YAAY;AACd,kBAAQ,YAAY;AAAA,YAClB,KAAK;AAAoB,qBAAO;AAAA,YAChC,KAAK;AAAe,qBAAO;AAAA,YAC3B,KAAK;AAAmB,qBAAO;AAAA,YAC/B,KAAK;AAAe,qBAAO;AAAA,YAC3B,KAAK;AAAmB,qBAAO;AAAA,UACjC;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,IACF;AASA,aAAS,eAAe,OAAO;AAC7B,UAAI,SAAS,MAAM,QACf,SAAS,MAAM,YAAY,MAAM;AAGrC,UAAI,UAAU,OAAO,MAAM,CAAC,KAAK,YAAY,eAAe,KAAK,OAAO,OAAO,GAAG;AAChF,eAAO,QAAQ,MAAM;AACrB,eAAO,QAAQ,MAAM;AAAA,MACvB;AACA,aAAO;AAAA,IACT;AASA,aAAS,gBAAgB,QAAQ;AAC/B,aAAQ,OAAO,OAAO,eAAe,cAAc,CAAC,YAAY,MAAM,IAClE,WAAW,aAAa,MAAM,CAAC,IAC/B,CAAC;AAAA,IACP;AAeA,aAAS,eAAe,QAAQ,KAAK,WAAW,QAAQ;AACtD,UAAI,OAAO,OAAO;AAClB,cAAQ,KAAK;AAAA,QACX,KAAK;AACH,iBAAO,iBAAiB,MAAM;AAAA,QAEhC,KAAK;AAAA,QACL,KAAK;AACH,iBAAO,IAAI,KAAK,CAAC,MAAM;AAAA,QAEzB,KAAK;AACH,iBAAO,cAAc,QAAQ,MAAM;AAAA,QAErC,KAAK;AAAA,QAAY,KAAK;AAAA,QACtB,KAAK;AAAA,QAAS,KAAK;AAAA,QAAU,KAAK;AAAA,QAClC,KAAK;AAAA,QAAU,KAAK;AAAA,QAAiB,KAAK;AAAA,QAAW,KAAK;AACxD,iBAAO,gBAAgB,QAAQ,MAAM;AAAA,QAEvC,KAAK;AACH,iBAAO,SAAS,QAAQ,QAAQ,SAAS;AAAA,QAE3C,KAAK;AAAA,QACL,KAAK;AACH,iBAAO,IAAI,KAAK,MAAM;AAAA,QAExB,KAAK;AACH,iBAAO,YAAY,MAAM;AAAA,QAE3B,KAAK;AACH,iBAAO,SAAS,QAAQ,QAAQ,SAAS;AAAA,QAE3C,KAAK;AACH,iBAAO,YAAY,MAAM;AAAA,MAC7B;AAAA,IACF;AAUA,aAAS,QAAQ,OAAO,QAAQ;AAC9B,eAAS,UAAU,OAAO,mBAAmB;AAC7C,aAAO,CAAC,CAAC,WACN,OAAO,SAAS,YAAY,SAAS,KAAK,KAAK,OAC/C,QAAQ,MAAM,QAAQ,KAAK,KAAK,QAAQ;AAAA,IAC7C;AASA,aAAS,UAAU,OAAO;AACxB,UAAI,OAAO,OAAO;AAClB,aAAQ,QAAQ,YAAY,QAAQ,YAAY,QAAQ,YAAY,QAAQ,YACvE,UAAU,cACV,UAAU;AAAA,IACjB;AASA,aAAS,SAAS,MAAM;AACtB,aAAO,CAAC,CAAC,cAAe,cAAc;AAAA,IACxC;AASA,aAAS,YAAY,OAAO;AAC1B,UAAI,OAAO,SAAS,MAAM,aACtB,QAAS,OAAO,QAAQ,cAAc,KAAK,aAAc;AAE7D,aAAO,UAAU;AAAA,IACnB;AASA,aAAS,SAAS,MAAM;AACtB,UAAI,QAAQ,MAAM;AAChB,YAAI;AACF,iBAAO,aAAa,KAAK,IAAI;AAAA,QAC/B,SAAS,GAAG;AAAA,QAAC;AACb,YAAI;AACF,iBAAQ,OAAO;AAAA,QACjB,SAAS,GAAG;AAAA,QAAC;AAAA,MACf;AACA,aAAO;AAAA,IACT;AAoBA,aAAS,UAAU,OAAO;AACxB,aAAO,UAAU,OAAO,MAAM,IAAI;AAAA,IACpC;AAkCA,aAAS,GAAG,OAAO,OAAO;AACxB,aAAO,UAAU,SAAU,UAAU,SAAS,UAAU;AAAA,IAC1D;AAoBA,aAAS,YAAY,OAAO;AAE1B,aAAO,kBAAkB,KAAK,KAAK,eAAe,KAAK,OAAO,QAAQ,MACnE,CAAC,qBAAqB,KAAK,OAAO,QAAQ,KAAK,eAAe,KAAK,KAAK,KAAK;AAAA,IAClF;AAyBA,QAAI,UAAU,MAAM;AA2BpB,aAAS,YAAY,OAAO;AAC1B,aAAO,SAAS,QAAQ,SAAS,MAAM,MAAM,KAAK,CAAC,WAAW,KAAK;AAAA,IACrE;AA2BA,aAAS,kBAAkB,OAAO;AAChC,aAAO,aAAa,KAAK,KAAK,YAAY,KAAK;AAAA,IACjD;AAmBA,QAAI,WAAW,kBAAkB;AAmBjC,aAAS,WAAW,OAAO;AAGzB,UAAI,MAAM,SAAS,KAAK,IAAI,eAAe,KAAK,KAAK,IAAI;AACzD,aAAO,OAAO,WAAW,OAAO;AAAA,IAClC;AA4BA,aAAS,SAAS,OAAO;AACvB,aAAO,OAAO,SAAS,YACrB,QAAQ,MAAM,QAAQ,KAAK,KAAK,SAAS;AAAA,IAC7C;AA2BA,aAAS,SAAS,OAAO;AACvB,UAAI,OAAO,OAAO;AAClB,aAAO,CAAC,CAAC,UAAU,QAAQ,YAAY,QAAQ;AAAA,IACjD;AA0BA,aAAS,aAAa,OAAO;AAC3B,aAAO,CAAC,CAAC,SAAS,OAAO,SAAS;AAAA,IACpC;AA8BA,aAAS,KAAK,QAAQ;AACpB,aAAO,YAAY,MAAM,IAAI,cAAc,MAAM,IAAI,SAAS,MAAM;AAAA,IACtE;AAoBA,aAAS,YAAY;AACnB,aAAO,CAAC;AAAA,IACV;AAeA,aAAS,YAAY;AACnB,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACntDjB,IAAAE,kBAAA;AAAA;AAUA,QAAI,mBAAmB;AAGvB,QAAI,iBAAiB;AAGrB,QAAI,uBAAuB;AAA3B,QACI,yBAAyB;AAG7B,QAAI,mBAAmB;AAGvB,QAAI,UAAU;AAAd,QACI,WAAW;AADf,QAEI,WAAW;AAFf,QAGI,UAAU;AAHd,QAII,UAAU;AAJd,QAKI,WAAW;AALf,QAMI,UAAU;AANd,QAOI,SAAS;AAPb,QAQI,SAAS;AARb,QASI,YAAY;AAThB,QAUI,UAAU;AAVd,QAWI,YAAY;AAXhB,QAYI,aAAa;AAZjB,QAaI,WAAW;AAbf,QAcI,YAAY;AAdhB,QAeI,SAAS;AAfb,QAgBI,YAAY;AAhBhB,QAiBI,YAAY;AAjBhB,QAkBI,eAAe;AAlBnB,QAmBI,aAAa;AAEjB,QAAI,iBAAiB;AAArB,QACI,cAAc;AADlB,QAEI,aAAa;AAFjB,QAGI,aAAa;AAHjB,QAII,UAAU;AAJd,QAKI,WAAW;AALf,QAMI,WAAW;AANf,QAOI,WAAW;AAPf,QAQI,kBAAkB;AARtB,QASI,YAAY;AAThB,QAUI,YAAY;AAMhB,QAAI,eAAe;AAGnB,QAAI,eAAe;AAGnB,QAAI,WAAW;AAGf,QAAI,iBAAiB,CAAC;AACtB,mBAAe,UAAU,IAAI,eAAe,UAAU,IACtD,eAAe,OAAO,IAAI,eAAe,QAAQ,IACjD,eAAe,QAAQ,IAAI,eAAe,QAAQ,IAClD,eAAe,eAAe,IAAI,eAAe,SAAS,IAC1D,eAAe,SAAS,IAAI;AAC5B,mBAAe,OAAO,IAAI,eAAe,QAAQ,IACjD,eAAe,cAAc,IAAI,eAAe,OAAO,IACvD,eAAe,WAAW,IAAI,eAAe,OAAO,IACpD,eAAe,QAAQ,IAAI,eAAe,OAAO,IACjD,eAAe,MAAM,IAAI,eAAe,SAAS,IACjD,eAAe,SAAS,IAAI,eAAe,SAAS,IACpD,eAAe,MAAM,IAAI,eAAe,SAAS,IACjD,eAAe,UAAU,IAAI;AAG7B,QAAI,aAAa,OAAO,UAAU,YAAY,UAAU,OAAO,WAAW,UAAU;AAGpF,QAAI,WAAW,OAAO,QAAQ,YAAY,QAAQ,KAAK,WAAW,UAAU;AAG5E,QAAI,OAAO,cAAc,YAAY,SAAS,aAAa,EAAE;AAG7D,QAAI,cAAc,OAAO,WAAW,YAAY,WAAW,CAAC,QAAQ,YAAY;AAGhF,QAAI,aAAa,eAAe,OAAO,UAAU,YAAY,UAAU,CAAC,OAAO,YAAY;AAG3F,QAAI,gBAAgB,cAAc,WAAW,YAAY;AAGzD,QAAI,cAAc,iBAAiB,WAAW;AAG9C,QAAI,WAAY,WAAW;AACzB,UAAI;AACF,eAAO,eAAe,YAAY,WAAW,YAAY,QAAQ,MAAM;AAAA,MACzE,SAAS,GAAG;AAAA,MAAC;AAAA,IACf,EAAE;AAGF,QAAI,mBAAmB,YAAY,SAAS;AAW5C,aAAS,YAAY,OAAO,WAAW;AACrC,UAAI,QAAQ,IACR,SAAS,SAAS,OAAO,IAAI,MAAM,QACnC,WAAW,GACX,SAAS,CAAC;AAEd,aAAO,EAAE,QAAQ,QAAQ;AACvB,YAAI,QAAQ,MAAM,KAAK;AACvB,YAAI,UAAU,OAAO,OAAO,KAAK,GAAG;AAClC,iBAAO,UAAU,IAAI;AAAA,QACvB;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAUA,aAAS,UAAU,OAAO,QAAQ;AAChC,UAAI,QAAQ,IACR,SAAS,OAAO,QAChB,SAAS,MAAM;AAEnB,aAAO,EAAE,QAAQ,QAAQ;AACvB,cAAM,SAAS,KAAK,IAAI,OAAO,KAAK;AAAA,MACtC;AACA,aAAO;AAAA,IACT;AAYA,aAAS,UAAU,OAAO,WAAW;AACnC,UAAI,QAAQ,IACR,SAAS,SAAS,OAAO,IAAI,MAAM;AAEvC,aAAO,EAAE,QAAQ,QAAQ;AACvB,YAAI,UAAU,MAAM,KAAK,GAAG,OAAO,KAAK,GAAG;AACzC,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAWA,aAAS,UAAU,GAAG,UAAU;AAC9B,UAAI,QAAQ,IACR,SAAS,MAAM,CAAC;AAEpB,aAAO,EAAE,QAAQ,GAAG;AAClB,eAAO,KAAK,IAAI,SAAS,KAAK;AAAA,MAChC;AACA,aAAO;AAAA,IACT;AASA,aAAS,UAAU,MAAM;AACvB,aAAO,SAAS,OAAO;AACrB,eAAO,KAAK,KAAK;AAAA,MACnB;AAAA,IACF;AAUA,aAAS,SAAS,OAAO,KAAK;AAC5B,aAAO,MAAM,IAAI,GAAG;AAAA,IACtB;AAUA,aAAS,SAAS,QAAQ,KAAK;AAC7B,aAAO,UAAU,OAAO,SAAY,OAAO,GAAG;AAAA,IAChD;AASA,aAAS,WAAW,KAAK;AACvB,UAAI,QAAQ,IACR,SAAS,MAAM,IAAI,IAAI;AAE3B,UAAI,QAAQ,SAAS,OAAO,KAAK;AAC/B,eAAO,EAAE,KAAK,IAAI,CAAC,KAAK,KAAK;AAAA,MAC/B,CAAC;AACD,aAAO;AAAA,IACT;AAUA,aAAS,QAAQ,MAAM,WAAW;AAChC,aAAO,SAAS,KAAK;AACnB,eAAO,KAAK,UAAU,GAAG,CAAC;AAAA,MAC5B;AAAA,IACF;AASA,aAAS,WAAW,KAAK;AACvB,UAAI,QAAQ,IACR,SAAS,MAAM,IAAI,IAAI;AAE3B,UAAI,QAAQ,SAAS,OAAO;AAC1B,eAAO,EAAE,KAAK,IAAI;AAAA,MACpB,CAAC;AACD,aAAO;AAAA,IACT;AAGA,QAAI,aAAa,MAAM;AAAvB,QACI,YAAY,SAAS;AADzB,QAEI,cAAc,OAAO;AAGzB,QAAI,aAAa,KAAK,oBAAoB;AAG1C,QAAI,eAAe,UAAU;AAG7B,QAAI,iBAAiB,YAAY;AAGjC,QAAI,aAAc,WAAW;AAC3B,UAAI,MAAM,SAAS,KAAK,cAAc,WAAW,QAAQ,WAAW,KAAK,YAAY,EAAE;AACvF,aAAO,MAAO,mBAAmB,MAAO;AAAA,IAC1C,EAAE;AAOF,QAAI,uBAAuB,YAAY;AAGvC,QAAI,aAAa;AAAA,MAAO,MACtB,aAAa,KAAK,cAAc,EAAE,QAAQ,cAAc,MAAM,EAC7D,QAAQ,0DAA0D,OAAO,IAAI;AAAA,IAChF;AAGA,QAAI,SAAS,gBAAgB,KAAK,SAAS;AAA3C,QACI,SAAS,KAAK;AADlB,QAEI,aAAa,KAAK;AAFtB,QAGI,uBAAuB,YAAY;AAHvC,QAII,SAAS,WAAW;AAJxB,QAKI,iBAAiB,SAAS,OAAO,cAAc;AAGnD,QAAI,mBAAmB,OAAO;AAA9B,QACI,iBAAiB,SAAS,OAAO,WAAW;AADhD,QAEI,aAAa,QAAQ,OAAO,MAAM,MAAM;AAG5C,QAAI,WAAW,UAAU,MAAM,UAAU;AAAzC,QACI,MAAM,UAAU,MAAM,KAAK;AAD/B,QAEIC,WAAU,UAAU,MAAM,SAAS;AAFvC,QAGI,MAAM,UAAU,MAAM,KAAK;AAH/B,QAIIC,WAAU,UAAU,MAAM,SAAS;AAJvC,QAKI,eAAe,UAAU,QAAQ,QAAQ;AAG7C,QAAI,qBAAqB,SAAS,QAAQ;AAA1C,QACI,gBAAgB,SAAS,GAAG;AADhC,QAEI,oBAAoB,SAASD,QAAO;AAFxC,QAGI,gBAAgB,SAAS,GAAG;AAHhC,QAII,oBAAoB,SAASC,QAAO;AAGxC,QAAI,cAAc,SAAS,OAAO,YAAY;AAA9C,QACI,gBAAgB,cAAc,YAAY,UAAU;AASxD,aAAS,KAAK,SAAS;AACrB,UAAI,QAAQ,IACR,SAAS,WAAW,OAAO,IAAI,QAAQ;AAE3C,WAAK,MAAM;AACX,aAAO,EAAE,QAAQ,QAAQ;AACvB,YAAI,QAAQ,QAAQ,KAAK;AACzB,aAAK,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,MAC7B;AAAA,IACF;AASA,aAAS,YAAY;AACnB,WAAK,WAAW,eAAe,aAAa,IAAI,IAAI,CAAC;AACrD,WAAK,OAAO;AAAA,IACd;AAYA,aAAS,WAAW,KAAK;AACvB,UAAI,SAAS,KAAK,IAAI,GAAG,KAAK,OAAO,KAAK,SAAS,GAAG;AACtD,WAAK,QAAQ,SAAS,IAAI;AAC1B,aAAO;AAAA,IACT;AAWA,aAAS,QAAQ,KAAK;AACpB,UAAI,OAAO,KAAK;AAChB,UAAI,cAAc;AAChB,YAAI,SAAS,KAAK,GAAG;AACrB,eAAO,WAAW,iBAAiB,SAAY;AAAA,MACjD;AACA,aAAO,eAAe,KAAK,MAAM,GAAG,IAAI,KAAK,GAAG,IAAI;AAAA,IACtD;AAWA,aAAS,QAAQ,KAAK;AACpB,UAAI,OAAO,KAAK;AAChB,aAAO,eAAgB,KAAK,GAAG,MAAM,SAAa,eAAe,KAAK,MAAM,GAAG;AAAA,IACjF;AAYA,aAAS,QAAQ,KAAK,OAAO;AAC3B,UAAI,OAAO,KAAK;AAChB,WAAK,QAAQ,KAAK,IAAI,GAAG,IAAI,IAAI;AACjC,WAAK,GAAG,IAAK,gBAAgB,UAAU,SAAa,iBAAiB;AACrE,aAAO;AAAA,IACT;AAGA,SAAK,UAAU,QAAQ;AACvB,SAAK,UAAU,QAAQ,IAAI;AAC3B,SAAK,UAAU,MAAM;AACrB,SAAK,UAAU,MAAM;AACrB,SAAK,UAAU,MAAM;AASrB,aAAS,UAAU,SAAS;AAC1B,UAAI,QAAQ,IACR,SAAS,WAAW,OAAO,IAAI,QAAQ;AAE3C,WAAK,MAAM;AACX,aAAO,EAAE,QAAQ,QAAQ;AACvB,YAAI,QAAQ,QAAQ,KAAK;AACzB,aAAK,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,MAC7B;AAAA,IACF;AASA,aAAS,iBAAiB;AACxB,WAAK,WAAW,CAAC;AACjB,WAAK,OAAO;AAAA,IACd;AAWA,aAAS,gBAAgB,KAAK;AAC5B,UAAI,OAAO,KAAK,UACZ,QAAQ,aAAa,MAAM,GAAG;AAElC,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACT;AACA,UAAI,YAAY,KAAK,SAAS;AAC9B,UAAI,SAAS,WAAW;AACtB,aAAK,IAAI;AAAA,MACX,OAAO;AACL,eAAO,KAAK,MAAM,OAAO,CAAC;AAAA,MAC5B;AACA,QAAE,KAAK;AACP,aAAO;AAAA,IACT;AAWA,aAAS,aAAa,KAAK;AACzB,UAAI,OAAO,KAAK,UACZ,QAAQ,aAAa,MAAM,GAAG;AAElC,aAAO,QAAQ,IAAI,SAAY,KAAK,KAAK,EAAE,CAAC;AAAA,IAC9C;AAWA,aAAS,aAAa,KAAK;AACzB,aAAO,aAAa,KAAK,UAAU,GAAG,IAAI;AAAA,IAC5C;AAYA,aAAS,aAAa,KAAK,OAAO;AAChC,UAAI,OAAO,KAAK,UACZ,QAAQ,aAAa,MAAM,GAAG;AAElC,UAAI,QAAQ,GAAG;AACb,UAAE,KAAK;AACP,aAAK,KAAK,CAAC,KAAK,KAAK,CAAC;AAAA,MACxB,OAAO;AACL,aAAK,KAAK,EAAE,CAAC,IAAI;AAAA,MACnB;AACA,aAAO;AAAA,IACT;AAGA,cAAU,UAAU,QAAQ;AAC5B,cAAU,UAAU,QAAQ,IAAI;AAChC,cAAU,UAAU,MAAM;AAC1B,cAAU,UAAU,MAAM;AAC1B,cAAU,UAAU,MAAM;AAS1B,aAAS,SAAS,SAAS;AACzB,UAAI,QAAQ,IACR,SAAS,WAAW,OAAO,IAAI,QAAQ;AAE3C,WAAK,MAAM;AACX,aAAO,EAAE,QAAQ,QAAQ;AACvB,YAAI,QAAQ,QAAQ,KAAK;AACzB,aAAK,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,MAC7B;AAAA,IACF;AASA,aAAS,gBAAgB;AACvB,WAAK,OAAO;AACZ,WAAK,WAAW;AAAA,QACd,QAAQ,IAAI;AAAA,QACZ,OAAO,KAAK,OAAO;AAAA,QACnB,UAAU,IAAI;AAAA,MAChB;AAAA,IACF;AAWA,aAAS,eAAe,KAAK;AAC3B,UAAI,SAAS,WAAW,MAAM,GAAG,EAAE,QAAQ,EAAE,GAAG;AAChD,WAAK,QAAQ,SAAS,IAAI;AAC1B,aAAO;AAAA,IACT;AAWA,aAAS,YAAY,KAAK;AACxB,aAAO,WAAW,MAAM,GAAG,EAAE,IAAI,GAAG;AAAA,IACtC;AAWA,aAAS,YAAY,KAAK;AACxB,aAAO,WAAW,MAAM,GAAG,EAAE,IAAI,GAAG;AAAA,IACtC;AAYA,aAAS,YAAY,KAAK,OAAO;AAC/B,UAAI,OAAO,WAAW,MAAM,GAAG,GAC3B,OAAO,KAAK;AAEhB,WAAK,IAAI,KAAK,KAAK;AACnB,WAAK,QAAQ,KAAK,QAAQ,OAAO,IAAI;AACrC,aAAO;AAAA,IACT;AAGA,aAAS,UAAU,QAAQ;AAC3B,aAAS,UAAU,QAAQ,IAAI;AAC/B,aAAS,UAAU,MAAM;AACzB,aAAS,UAAU,MAAM;AACzB,aAAS,UAAU,MAAM;AAUzB,aAAS,SAAS,QAAQ;AACxB,UAAI,QAAQ,IACR,SAAS,UAAU,OAAO,IAAI,OAAO;AAEzC,WAAK,WAAW,IAAI;AACpB,aAAO,EAAE,QAAQ,QAAQ;AACvB,aAAK,IAAI,OAAO,KAAK,CAAC;AAAA,MACxB;AAAA,IACF;AAYA,aAAS,YAAY,OAAO;AAC1B,WAAK,SAAS,IAAI,OAAO,cAAc;AACvC,aAAO;AAAA,IACT;AAWA,aAAS,YAAY,OAAO;AAC1B,aAAO,KAAK,SAAS,IAAI,KAAK;AAAA,IAChC;AAGA,aAAS,UAAU,MAAM,SAAS,UAAU,OAAO;AACnD,aAAS,UAAU,MAAM;AASzB,aAAS,MAAM,SAAS;AACtB,UAAI,OAAO,KAAK,WAAW,IAAI,UAAU,OAAO;AAChD,WAAK,OAAO,KAAK;AAAA,IACnB;AASA,aAAS,aAAa;AACpB,WAAK,WAAW,IAAI;AACpB,WAAK,OAAO;AAAA,IACd;AAWA,aAAS,YAAY,KAAK;AACxB,UAAI,OAAO,KAAK,UACZ,SAAS,KAAK,QAAQ,EAAE,GAAG;AAE/B,WAAK,OAAO,KAAK;AACjB,aAAO;AAAA,IACT;AAWA,aAAS,SAAS,KAAK;AACrB,aAAO,KAAK,SAAS,IAAI,GAAG;AAAA,IAC9B;AAWA,aAAS,SAAS,KAAK;AACrB,aAAO,KAAK,SAAS,IAAI,GAAG;AAAA,IAC9B;AAYA,aAAS,SAAS,KAAK,OAAO;AAC5B,UAAI,OAAO,KAAK;AAChB,UAAI,gBAAgB,WAAW;AAC7B,YAAI,QAAQ,KAAK;AACjB,YAAI,CAAC,OAAQ,MAAM,SAAS,mBAAmB,GAAI;AACjD,gBAAM,KAAK,CAAC,KAAK,KAAK,CAAC;AACvB,eAAK,OAAO,EAAE,KAAK;AACnB,iBAAO;AAAA,QACT;AACA,eAAO,KAAK,WAAW,IAAI,SAAS,KAAK;AAAA,MAC3C;AACA,WAAK,IAAI,KAAK,KAAK;AACnB,WAAK,OAAO,KAAK;AACjB,aAAO;AAAA,IACT;AAGA,UAAM,UAAU,QAAQ;AACxB,UAAM,UAAU,QAAQ,IAAI;AAC5B,UAAM,UAAU,MAAM;AACtB,UAAM,UAAU,MAAM;AACtB,UAAM,UAAU,MAAM;AAUtB,aAAS,cAAc,OAAO,WAAW;AACvC,UAAI,QAAQ,QAAQ,KAAK,GACrB,QAAQ,CAAC,SAAS,YAAY,KAAK,GACnC,SAAS,CAAC,SAAS,CAAC,SAAS,SAAS,KAAK,GAC3C,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,aAAa,KAAK,GAC1D,cAAc,SAAS,SAAS,UAAU,QAC1C,SAAS,cAAc,UAAU,MAAM,QAAQ,MAAM,IAAI,CAAC,GAC1D,SAAS,OAAO;AAEpB,eAAS,OAAO,OAAO;AACrB,aAAK,aAAa,eAAe,KAAK,OAAO,GAAG,MAC5C,EAAE;AAAA,SAEC,OAAO;AAAA,QAEN,WAAW,OAAO,YAAY,OAAO;AAAA,QAErC,WAAW,OAAO,YAAY,OAAO,gBAAgB,OAAO;AAAA,QAE7D,QAAQ,KAAK,MAAM,KAClB;AACN,iBAAO,KAAK,GAAG;AAAA,QACjB;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAUA,aAAS,aAAa,OAAO,KAAK;AAChC,UAAI,SAAS,MAAM;AACnB,aAAO,UAAU;AACf,YAAI,GAAG,MAAM,MAAM,EAAE,CAAC,GAAG,GAAG,GAAG;AAC7B,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAaA,aAAS,eAAe,QAAQ,UAAU,aAAa;AACrD,UAAI,SAAS,SAAS,MAAM;AAC5B,aAAO,QAAQ,MAAM,IAAI,SAAS,UAAU,QAAQ,YAAY,MAAM,CAAC;AAAA,IACzE;AASA,aAAS,WAAW,OAAO;AACzB,UAAI,SAAS,MAAM;AACjB,eAAO,UAAU,SAAY,eAAe;AAAA,MAC9C;AACA,aAAQ,kBAAkB,kBAAkB,OAAO,KAAK,IACpD,UAAU,KAAK,IACf,eAAe,KAAK;AAAA,IAC1B;AASA,aAAS,gBAAgB,OAAO;AAC9B,aAAO,aAAa,KAAK,KAAK,WAAW,KAAK,KAAK;AAAA,IACrD;AAgBA,aAAS,YAAY,OAAO,OAAO,SAAS,YAAY,OAAO;AAC7D,UAAI,UAAU,OAAO;AACnB,eAAO;AAAA,MACT;AACA,UAAI,SAAS,QAAQ,SAAS,QAAS,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,KAAK,GAAI;AACpF,eAAO,UAAU,SAAS,UAAU;AAAA,MACtC;AACA,aAAO,gBAAgB,OAAO,OAAO,SAAS,YAAY,aAAa,KAAK;AAAA,IAC9E;AAgBA,aAAS,gBAAgB,QAAQ,OAAO,SAAS,YAAY,WAAW,OAAO;AAC7E,UAAI,WAAW,QAAQ,MAAM,GACzB,WAAW,QAAQ,KAAK,GACxB,SAAS,WAAW,WAAW,OAAO,MAAM,GAC5C,SAAS,WAAW,WAAW,OAAO,KAAK;AAE/C,eAAS,UAAU,UAAU,YAAY;AACzC,eAAS,UAAU,UAAU,YAAY;AAEzC,UAAI,WAAW,UAAU,WACrB,WAAW,UAAU,WACrB,YAAY,UAAU;AAE1B,UAAI,aAAa,SAAS,MAAM,GAAG;AACjC,YAAI,CAAC,SAAS,KAAK,GAAG;AACpB,iBAAO;AAAA,QACT;AACA,mBAAW;AACX,mBAAW;AAAA,MACb;AACA,UAAI,aAAa,CAAC,UAAU;AAC1B,kBAAU,QAAQ,IAAI;AACtB,eAAQ,YAAY,aAAa,MAAM,IACnC,YAAY,QAAQ,OAAO,SAAS,YAAY,WAAW,KAAK,IAChE,WAAW,QAAQ,OAAO,QAAQ,SAAS,YAAY,WAAW,KAAK;AAAA,MAC7E;AACA,UAAI,EAAE,UAAU,uBAAuB;AACrC,YAAI,eAAe,YAAY,eAAe,KAAK,QAAQ,aAAa,GACpE,eAAe,YAAY,eAAe,KAAK,OAAO,aAAa;AAEvE,YAAI,gBAAgB,cAAc;AAChC,cAAI,eAAe,eAAe,OAAO,MAAM,IAAI,QAC/C,eAAe,eAAe,MAAM,MAAM,IAAI;AAElD,oBAAU,QAAQ,IAAI;AACtB,iBAAO,UAAU,cAAc,cAAc,SAAS,YAAY,KAAK;AAAA,QACzE;AAAA,MACF;AACA,UAAI,CAAC,WAAW;AACd,eAAO;AAAA,MACT;AACA,gBAAU,QAAQ,IAAI;AACtB,aAAO,aAAa,QAAQ,OAAO,SAAS,YAAY,WAAW,KAAK;AAAA,IAC1E;AAUA,aAAS,aAAa,OAAO;AAC3B,UAAI,CAAC,SAAS,KAAK,KAAK,SAAS,KAAK,GAAG;AACvC,eAAO;AAAA,MACT;AACA,UAAI,UAAU,WAAW,KAAK,IAAI,aAAa;AAC/C,aAAO,QAAQ,KAAK,SAAS,KAAK,CAAC;AAAA,IACrC;AASA,aAAS,iBAAiB,OAAO;AAC/B,aAAO,aAAa,KAAK,KACvB,SAAS,MAAM,MAAM,KAAK,CAAC,CAAC,eAAe,WAAW,KAAK,CAAC;AAAA,IAChE;AASA,aAAS,SAAS,QAAQ;AACxB,UAAI,CAAC,YAAY,MAAM,GAAG;AACxB,eAAO,WAAW,MAAM;AAAA,MAC1B;AACA,UAAI,SAAS,CAAC;AACd,eAAS,OAAO,OAAO,MAAM,GAAG;AAC9B,YAAI,eAAe,KAAK,QAAQ,GAAG,KAAK,OAAO,eAAe;AAC5D,iBAAO,KAAK,GAAG;AAAA,QACjB;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAeA,aAAS,YAAY,OAAO,OAAO,SAAS,YAAY,WAAW,OAAO;AACxE,UAAI,YAAY,UAAU,sBACtB,YAAY,MAAM,QAClB,YAAY,MAAM;AAEtB,UAAI,aAAa,aAAa,EAAE,aAAa,YAAY,YAAY;AACnE,eAAO;AAAA,MACT;AAEA,UAAI,UAAU,MAAM,IAAI,KAAK;AAC7B,UAAI,WAAW,MAAM,IAAI,KAAK,GAAG;AAC/B,eAAO,WAAW;AAAA,MACpB;AACA,UAAI,QAAQ,IACR,SAAS,MACT,OAAQ,UAAU,yBAA0B,IAAI,aAAW;AAE/D,YAAM,IAAI,OAAO,KAAK;AACtB,YAAM,IAAI,OAAO,KAAK;AAGtB,aAAO,EAAE,QAAQ,WAAW;AAC1B,YAAI,WAAW,MAAM,KAAK,GACtB,WAAW,MAAM,KAAK;AAE1B,YAAI,YAAY;AACd,cAAI,WAAW,YACX,WAAW,UAAU,UAAU,OAAO,OAAO,OAAO,KAAK,IACzD,WAAW,UAAU,UAAU,OAAO,OAAO,OAAO,KAAK;AAAA,QAC/D;AACA,YAAI,aAAa,QAAW;AAC1B,cAAI,UAAU;AACZ;AAAA,UACF;AACA,mBAAS;AACT;AAAA,QACF;AAEA,YAAI,MAAM;AACR,cAAI,CAAC,UAAU,OAAO,SAASC,WAAU,UAAU;AAC7C,gBAAI,CAAC,SAAS,MAAM,QAAQ,MACvB,aAAaA,aAAY,UAAU,UAAUA,WAAU,SAAS,YAAY,KAAK,IAAI;AACxF,qBAAO,KAAK,KAAK,QAAQ;AAAA,YAC3B;AAAA,UACF,CAAC,GAAG;AACN,qBAAS;AACT;AAAA,UACF;AAAA,QACF,WAAW,EACL,aAAa,YACX,UAAU,UAAU,UAAU,SAAS,YAAY,KAAK,IACzD;AACL,mBAAS;AACT;AAAA,QACF;AAAA,MACF;AACA,YAAM,QAAQ,EAAE,KAAK;AACrB,YAAM,QAAQ,EAAE,KAAK;AACrB,aAAO;AAAA,IACT;AAmBA,aAAS,WAAW,QAAQ,OAAO,KAAK,SAAS,YAAY,WAAW,OAAO;AAC7E,cAAQ,KAAK;AAAA,QACX,KAAK;AACH,cAAK,OAAO,cAAc,MAAM,cAC3B,OAAO,cAAc,MAAM,YAAa;AAC3C,mBAAO;AAAA,UACT;AACA,mBAAS,OAAO;AAChB,kBAAQ,MAAM;AAAA,QAEhB,KAAK;AACH,cAAK,OAAO,cAAc,MAAM,cAC5B,CAAC,UAAU,IAAI,WAAW,MAAM,GAAG,IAAI,WAAW,KAAK,CAAC,GAAG;AAC7D,mBAAO;AAAA,UACT;AACA,iBAAO;AAAA,QAET,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAGH,iBAAO,GAAG,CAAC,QAAQ,CAAC,KAAK;AAAA,QAE3B,KAAK;AACH,iBAAO,OAAO,QAAQ,MAAM,QAAQ,OAAO,WAAW,MAAM;AAAA,QAE9D,KAAK;AAAA,QACL,KAAK;AAIH,iBAAO,UAAW,QAAQ;AAAA,QAE5B,KAAK;AACH,cAAI,UAAU;AAAA,QAEhB,KAAK;AACH,cAAI,YAAY,UAAU;AAC1B,sBAAY,UAAU;AAEtB,cAAI,OAAO,QAAQ,MAAM,QAAQ,CAAC,WAAW;AAC3C,mBAAO;AAAA,UACT;AAEA,cAAI,UAAU,MAAM,IAAI,MAAM;AAC9B,cAAI,SAAS;AACX,mBAAO,WAAW;AAAA,UACpB;AACA,qBAAW;AAGX,gBAAM,IAAI,QAAQ,KAAK;AACvB,cAAI,SAAS,YAAY,QAAQ,MAAM,GAAG,QAAQ,KAAK,GAAG,SAAS,YAAY,WAAW,KAAK;AAC/F,gBAAM,QAAQ,EAAE,MAAM;AACtB,iBAAO;AAAA,QAET,KAAK;AACH,cAAI,eAAe;AACjB,mBAAO,cAAc,KAAK,MAAM,KAAK,cAAc,KAAK,KAAK;AAAA,UAC/D;AAAA,MACJ;AACA,aAAO;AAAA,IACT;AAeA,aAAS,aAAa,QAAQ,OAAO,SAAS,YAAY,WAAW,OAAO;AAC1E,UAAI,YAAY,UAAU,sBACtB,WAAW,WAAW,MAAM,GAC5B,YAAY,SAAS,QACrB,WAAW,WAAW,KAAK,GAC3B,YAAY,SAAS;AAEzB,UAAI,aAAa,aAAa,CAAC,WAAW;AACxC,eAAO;AAAA,MACT;AACA,UAAI,QAAQ;AACZ,aAAO,SAAS;AACd,YAAI,MAAM,SAAS,KAAK;AACxB,YAAI,EAAE,YAAY,OAAO,QAAQ,eAAe,KAAK,OAAO,GAAG,IAAI;AACjE,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,UAAI,UAAU,MAAM,IAAI,MAAM;AAC9B,UAAI,WAAW,MAAM,IAAI,KAAK,GAAG;AAC/B,eAAO,WAAW;AAAA,MACpB;AACA,UAAI,SAAS;AACb,YAAM,IAAI,QAAQ,KAAK;AACvB,YAAM,IAAI,OAAO,MAAM;AAEvB,UAAI,WAAW;AACf,aAAO,EAAE,QAAQ,WAAW;AAC1B,cAAM,SAAS,KAAK;AACpB,YAAI,WAAW,OAAO,GAAG,GACrB,WAAW,MAAM,GAAG;AAExB,YAAI,YAAY;AACd,cAAI,WAAW,YACX,WAAW,UAAU,UAAU,KAAK,OAAO,QAAQ,KAAK,IACxD,WAAW,UAAU,UAAU,KAAK,QAAQ,OAAO,KAAK;AAAA,QAC9D;AAEA,YAAI,EAAE,aAAa,SACV,aAAa,YAAY,UAAU,UAAU,UAAU,SAAS,YAAY,KAAK,IAClF,WACD;AACL,mBAAS;AACT;AAAA,QACF;AACA,qBAAa,WAAW,OAAO;AAAA,MACjC;AACA,UAAI,UAAU,CAAC,UAAU;AACvB,YAAI,UAAU,OAAO,aACjB,UAAU,MAAM;AAGpB,YAAI,WAAW,YACV,iBAAiB,UAAU,iBAAiB,UAC7C,EAAE,OAAO,WAAW,cAAc,mBAAmB,WACnD,OAAO,WAAW,cAAc,mBAAmB,UAAU;AACjE,mBAAS;AAAA,QACX;AAAA,MACF;AACA,YAAM,QAAQ,EAAE,MAAM;AACtB,YAAM,QAAQ,EAAE,KAAK;AACrB,aAAO;AAAA,IACT;AASA,aAAS,WAAW,QAAQ;AAC1B,aAAO,eAAe,QAAQ,MAAM,UAAU;AAAA,IAChD;AAUA,aAAS,WAAW,KAAK,KAAK;AAC5B,UAAI,OAAO,IAAI;AACf,aAAO,UAAU,GAAG,IAChB,KAAK,OAAO,OAAO,WAAW,WAAW,MAAM,IAC/C,KAAK;AAAA,IACX;AAUA,aAAS,UAAU,QAAQ,KAAK;AAC9B,UAAI,QAAQ,SAAS,QAAQ,GAAG;AAChC,aAAO,aAAa,KAAK,IAAI,QAAQ;AAAA,IACvC;AASA,aAAS,UAAU,OAAO;AACxB,UAAI,QAAQ,eAAe,KAAK,OAAO,cAAc,GACjD,MAAM,MAAM,cAAc;AAE9B,UAAI;AACF,cAAM,cAAc,IAAI;AACxB,YAAI,WAAW;AAAA,MACjB,SAAS,GAAG;AAAA,MAAC;AAEb,UAAI,SAAS,qBAAqB,KAAK,KAAK;AAC5C,UAAI,UAAU;AACZ,YAAI,OAAO;AACT,gBAAM,cAAc,IAAI;AAAA,QAC1B,OAAO;AACL,iBAAO,MAAM,cAAc;AAAA,QAC7B;AAAA,MACF;AACA,aAAO;AAAA,IACT;AASA,QAAI,aAAa,CAAC,mBAAmB,YAAY,SAAS,QAAQ;AAChE,UAAI,UAAU,MAAM;AAClB,eAAO,CAAC;AAAA,MACV;AACA,eAAS,OAAO,MAAM;AACtB,aAAO,YAAY,iBAAiB,MAAM,GAAG,SAAS,QAAQ;AAC5D,eAAO,qBAAqB,KAAK,QAAQ,MAAM;AAAA,MACjD,CAAC;AAAA,IACH;AASA,QAAI,SAAS;AAGb,QAAK,YAAY,OAAO,IAAI,SAAS,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,eACxD,OAAO,OAAO,IAAI,KAAG,KAAK,UAC1BF,YAAW,OAAOA,SAAQ,QAAQ,CAAC,KAAK,cACxC,OAAO,OAAO,IAAI,KAAG,KAAK,UAC1BC,YAAW,OAAO,IAAIA,UAAO,KAAK,YAAa;AAClD,eAAS,SAAS,OAAO;AACvB,YAAI,SAAS,WAAW,KAAK,GACzB,OAAO,UAAU,YAAY,MAAM,cAAc,QACjD,aAAa,OAAO,SAAS,IAAI,IAAI;AAEzC,YAAI,YAAY;AACd,kBAAQ,YAAY;AAAA,YAClB,KAAK;AAAoB,qBAAO;AAAA,YAChC,KAAK;AAAe,qBAAO;AAAA,YAC3B,KAAK;AAAmB,qBAAO;AAAA,YAC/B,KAAK;AAAe,qBAAO;AAAA,YAC3B,KAAK;AAAmB,qBAAO;AAAA,UACjC;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAUA,aAAS,QAAQ,OAAO,QAAQ;AAC9B,eAAS,UAAU,OAAO,mBAAmB;AAC7C,aAAO,CAAC,CAAC,WACN,OAAO,SAAS,YAAY,SAAS,KAAK,KAAK,OAC/C,QAAQ,MAAM,QAAQ,KAAK,KAAK,QAAQ;AAAA,IAC7C;AASA,aAAS,UAAU,OAAO;AACxB,UAAI,OAAO,OAAO;AAClB,aAAQ,QAAQ,YAAY,QAAQ,YAAY,QAAQ,YAAY,QAAQ,YACvE,UAAU,cACV,UAAU;AAAA,IACjB;AASA,aAAS,SAAS,MAAM;AACtB,aAAO,CAAC,CAAC,cAAe,cAAc;AAAA,IACxC;AASA,aAAS,YAAY,OAAO;AAC1B,UAAI,OAAO,SAAS,MAAM,aACtB,QAAS,OAAO,QAAQ,cAAc,KAAK,aAAc;AAE7D,aAAO,UAAU;AAAA,IACnB;AASA,aAAS,eAAe,OAAO;AAC7B,aAAO,qBAAqB,KAAK,KAAK;AAAA,IACxC;AASA,aAAS,SAAS,MAAM;AACtB,UAAI,QAAQ,MAAM;AAChB,YAAI;AACF,iBAAO,aAAa,KAAK,IAAI;AAAA,QAC/B,SAAS,GAAG;AAAA,QAAC;AACb,YAAI;AACF,iBAAQ,OAAO;AAAA,QACjB,SAAS,GAAG;AAAA,QAAC;AAAA,MACf;AACA,aAAO;AAAA,IACT;AAkCA,aAAS,GAAG,OAAO,OAAO;AACxB,aAAO,UAAU,SAAU,UAAU,SAAS,UAAU;AAAA,IAC1D;AAoBA,QAAI,cAAc,gBAAgB,2BAAW;AAAE,aAAO;AAAA,IAAW,EAAE,CAAC,IAAI,kBAAkB,SAAS,OAAO;AACxG,aAAO,aAAa,KAAK,KAAK,eAAe,KAAK,OAAO,QAAQ,KAC/D,CAAC,qBAAqB,KAAK,OAAO,QAAQ;AAAA,IAC9C;AAyBA,QAAI,UAAU,MAAM;AA2BpB,aAAS,YAAY,OAAO;AAC1B,aAAO,SAAS,QAAQ,SAAS,MAAM,MAAM,KAAK,CAAC,WAAW,KAAK;AAAA,IACrE;AAmBA,QAAI,WAAW,kBAAkB;AA8BjC,aAASE,SAAQ,OAAO,OAAO;AAC7B,aAAO,YAAY,OAAO,KAAK;AAAA,IACjC;AAmBA,aAAS,WAAW,OAAO;AACzB,UAAI,CAAC,SAAS,KAAK,GAAG;AACpB,eAAO;AAAA,MACT;AAGA,UAAI,MAAM,WAAW,KAAK;AAC1B,aAAO,OAAO,WAAW,OAAO,UAAU,OAAO,YAAY,OAAO;AAAA,IACtE;AA4BA,aAAS,SAAS,OAAO;AACvB,aAAO,OAAO,SAAS,YACrB,QAAQ,MAAM,QAAQ,KAAK,KAAK,SAAS;AAAA,IAC7C;AA2BA,aAAS,SAAS,OAAO;AACvB,UAAI,OAAO,OAAO;AAClB,aAAO,SAAS,SAAS,QAAQ,YAAY,QAAQ;AAAA,IACvD;AA0BA,aAAS,aAAa,OAAO;AAC3B,aAAO,SAAS,QAAQ,OAAO,SAAS;AAAA,IAC1C;AAmBA,QAAI,eAAe,mBAAmB,UAAU,gBAAgB,IAAI;AA8BpE,aAAS,KAAK,QAAQ;AACpB,aAAO,YAAY,MAAM,IAAI,cAAc,MAAM,IAAI,SAAS,MAAM;AAAA,IACtE;AAoBA,aAAS,YAAY;AACnB,aAAO,CAAC;AAAA,IACV;AAeA,aAAS,YAAY;AACnB,aAAO;AAAA,IACT;AAEA,WAAO,UAAUA;AAAA;AAAA;;;;;;;ACvzDjB,QAAA,YAAA;AACA,QAAAC,WAAA;AAMA,QAAUC;AAAV,KAAA,SAAUA,eAAY;AACpB,eAAgB,QACd,IAAkB,CAAA,GAClB,IAAkB,CAAA,GAClB,WAAW,OAAK;AAEhB,YAAI,OAAO,MAAM,UAAU;AACzB,cAAI,CAAA;;AAEN,YAAI,OAAO,MAAM,UAAU;AACzB,cAAI,CAAA;;AAEN,YAAI,aAAa,UAAU,CAAC;AAC5B,YAAI,CAAC,UAAU;AACb,uBAAa,OAAO,KAAK,UAAU,EAAE,OAAqB,CAAC,MAAM,QAAO;AACtE,gBAAI,WAAW,GAAG,KAAK,MAAM;AAC3B,mBAAK,GAAG,IAAI,WAAW,GAAG;;AAE5B,mBAAO;UACT,GAAG,CAAA,CAAE;;AAEP,mBAAW,OAAO,GAAG;AACnB,cAAI,EAAE,GAAG,MAAM,UAAa,EAAE,GAAG,MAAM,QAAW;AAChD,uBAAW,GAAG,IAAI,EAAE,GAAG;;;AAG3B,eAAO,OAAO,KAAK,UAAU,EAAE,SAAS,IAAI,aAAa;MAC3D;AA1BgB,MAAAA,cAAA,UAAO;AA4BvB,eAAgB,KACd,IAAkB,CAAA,GAClB,IAAkB,CAAA,GAAE;AAEpB,YAAI,OAAO,MAAM,UAAU;AACzB,cAAI,CAAA;;AAEN,YAAI,OAAO,MAAM,UAAU;AACzB,cAAI,CAAA;;AAEN,cAAM,aAAa,OAAO,KAAK,CAAC,EAC7B,OAAO,OAAO,KAAK,CAAC,CAAC,EACrB,OAAqB,CAAC,OAAO,QAAO;AACnC,cAAI,CAACD,SAAQ,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG;AAC5B,kBAAM,GAAG,IAAI,EAAE,GAAG,MAAM,SAAY,OAAO,EAAE,GAAG;;AAElD,iBAAO;QACT,GAAG,CAAA,CAAE;AACP,eAAO,OAAO,KAAK,UAAU,EAAE,SAAS,IAAI,aAAa;MAC3D;AAnBgB,MAAAC,cAAA,OAAI;AAqBpB,eAAgB,OACd,OAAqB,CAAA,GACrB,OAAqB,CAAA,GAAE;AAEvB,eAAO,QAAQ,CAAA;AACf,cAAM,eAAe,OAAO,KAAK,IAAI,EAAE,OAAqB,CAAC,MAAM,QAAO;AACxE,cAAI,KAAK,GAAG,MAAM,KAAK,GAAG,KAAK,KAAK,GAAG,MAAM,QAAW;AACtD,iBAAK,GAAG,IAAI,KAAK,GAAG;;AAEtB,iBAAO;QACT,GAAG,CAAA,CAAE;AACL,eAAO,OAAO,KAAK,IAAI,EAAE,OAAqB,CAAC,MAAM,QAAO;AAC1D,cAAI,KAAK,GAAG,MAAM,KAAK,GAAG,KAAK,KAAK,GAAG,MAAM,QAAW;AACtD,iBAAK,GAAG,IAAI;;AAEd,iBAAO;QACT,GAAG,YAAY;MACjB;AAjBgB,MAAAA,cAAA,SAAM;AAmBtB,eAAgB,UACd,GACA,GACA,WAAW,OAAK;AAEhB,YAAI,OAAO,MAAM,UAAU;AACzB,iBAAO;;AAET,YAAI,OAAO,MAAM,UAAU;AACzB,iBAAO;;AAET,YAAI,CAAC,UAAU;AACb,iBAAO;;AAET,cAAM,aAAa,OAAO,KAAK,CAAC,EAAE,OAAqB,CAAC,OAAO,QAAO;AACpE,cAAI,EAAE,GAAG,MAAM,QAAW;AACxB,kBAAM,GAAG,IAAI,EAAE,GAAG;;AAEpB,iBAAO;QACT,GAAG,CAAA,CAAE;AACL,eAAO,OAAO,KAAK,UAAU,EAAE,SAAS,IAAI,aAAa;MAC3D;AArBgB,MAAAA,cAAA,YAAS;IAsB3B,GA3FUA,kBAAAA,gBAAY,CAAA,EAAA;AA6FtB,YAAA,UAAeA;;;;;;;;;ACzFf,QAAUC;AAAV,KAAA,SAAUA,KAAE;AACV,eAAgB,OAAO,IAAM;AAC3B,YAAI,OAAO,GAAG,WAAW,UAAU;AACjC,iBAAO,GAAG;mBACD,OAAO,GAAG,WAAW,UAAU;AACxC,iBAAO,GAAG;mBACD,OAAO,GAAG,WAAW,YAAY,GAAG,WAAW,MAAM;AAC9D,iBAAO;eACF;AACL,iBAAO,OAAO,GAAG,WAAW,WAAW,GAAG,OAAO,SAAS;;MAE9D;AAVgB,MAAAA,IAAA,SAAM;IAWxB,GAZUA,QAAAA,MAAE,CAAA,EAAA;AAcZ,YAAA,UAAeA;;;;;;;;;ACzBf,QAAA,OAAA;AAEA,QAAqB,WAArB,MAA6B;MAK3B,YAAY,KAAS;AACnB,aAAK,MAAM;AACX,aAAK,QAAQ;AACb,aAAK,SAAS;MAChB;MAEA,UAAO;AACL,eAAO,KAAK,WAAU,IAAK;MAC7B;MAEA,KAAK,QAAe;AAClB,YAAI,CAAC,QAAQ;AACX,mBAAS;;AAEX,cAAM,SAAS,KAAK,IAAI,KAAK,KAAK;AAClC,YAAI,QAAQ;AACV,gBAAM,SAAS,KAAK;AACpB,gBAAM,WAAW,KAAA,QAAG,OAAO,MAAM;AACjC,cAAI,UAAU,WAAW,QAAQ;AAC/B,qBAAS,WAAW;AACpB,iBAAK,SAAS;AACd,iBAAK,SAAS;iBACT;AACL,iBAAK,UAAU;;AAEjB,cAAI,OAAO,OAAO,WAAW,UAAU;AACrC,mBAAO,EAAE,QAAQ,OAAM;iBAClB;AACL,kBAAM,QAAY,CAAA;AAClB,gBAAI,OAAO,YAAY;AACrB,oBAAM,aAAa,OAAO;;AAE5B,gBAAI,OAAO,OAAO,WAAW,UAAU;AACrC,oBAAM,SAAS;uBAEf,OAAO,OAAO,WAAW,YACzB,OAAO,WAAW,MAClB;AAEA,oBAAM,SAAS,OAAO;uBACb,OAAO,OAAO,WAAW,UAAU;AAC5C,oBAAM,SAAS,OAAO,OAAO,OAAO,QAAQ,MAAM;mBAC7C;AAEL,oBAAM,SAAS,OAAO;;AAExB,mBAAO;;eAEJ;AACL,iBAAO,EAAE,QAAQ,SAAQ;;MAE7B;MAEA,OAAI;AACF,eAAO,KAAK,IAAI,KAAK,KAAK;MAC5B;MAEA,aAAU;AACR,YAAI,KAAK,IAAI,KAAK,KAAK,GAAG;AAExB,iBAAO,KAAA,QAAG,OAAO,KAAK,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK;eACzC;AACL,iBAAO;;MAEX;MAEA,WAAQ;AACN,cAAM,KAAK,KAAK,IAAI,KAAK,KAAK;AAC9B,YAAI,IAAI;AACN,cAAI,OAAO,GAAG,WAAW,UAAU;AACjC,mBAAO;qBAEP,OAAO,GAAG,WAAW,YACpB,OAAO,GAAG,WAAW,YAAY,GAAG,WAAW,MAChD;AACA,mBAAO;iBACF;AACL,mBAAO;;;AAGX,eAAO;MACT;MAEA,OAAI;AACF,YAAI,CAAC,KAAK,QAAO,GAAI;AACnB,iBAAO,CAAA;mBACE,KAAK,WAAW,GAAG;AAC5B,iBAAO,KAAK,IAAI,MAAM,KAAK,KAAK;eAC3B;AACL,gBAAM,SAAS,KAAK;AACpB,gBAAM,QAAQ,KAAK;AACnB,gBAAM,OAAO,KAAK,KAAI;AACtB,gBAAM,OAAO,KAAK,IAAI,MAAM,KAAK,KAAK;AACtC,eAAK,SAAS;AACd,eAAK,QAAQ;AACb,iBAAO,CAAC,IAAI,EAAE,OAAO,IAAI;;MAE7B;;AAtGF,YAAA,UAAA;;;;;;;;;;ACFA,QAAA,OAAA;AACA,QAAA,YAAA;AACA,QAAAC,WAAA;AACA,QAAA,iBAAA;AAojByB,YAAA,eApjBlB,eAAA;AACP,QAAA,OAAA;AAmjBS,YAAA,KAnjBF,KAAA;AACP,QAAA,eAAA;AAkjBa,YAAA,aAljBN,aAAA;AAEP,QAAM,iBAAiB,OAAO,aAAa,CAAC;AAQ5C,QAAM,sBAAsB,CAC1B,GACA,MAC8B;AAC9B,UAAI,OAAO,MAAM,YAAY,MAAM,MAAM;AACvC,cAAM,IAAI,MAAM,mBAAmB,OAAO,CAAC,EAAE;;AAE/C,UAAI,OAAO,MAAM,YAAY,MAAM,MAAM;AACvC,cAAM,IAAI,MAAM,mBAAmB,OAAO,CAAC,EAAE;;AAE/C,YAAM,YAAY,OAAO,KAAK,CAAC,EAAE,CAAC;AAClC,UAAI,CAAC,aAAa,cAAc,OAAO,KAAK,CAAC,EAAE,CAAC,GAAG;AACjD,cAAM,IAAI,MACR,4BAA4B,SAAS,OAAO,OAAO,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;;AAGnE,aAAO,CAAC,WAAW,EAAE,SAAS,GAAG,EAAE,SAAS,CAAC;IAC/C;AAEA,QAAMC,UAAN,MAAM,OAAK;MAuBT,YAAY,KAA0B;AAEpC,YAAI,MAAM,QAAQ,GAAG,GAAG;AACtB,eAAK,MAAM;mBACF,OAAO,QAAQ,MAAM,QAAQ,IAAI,GAAG,GAAG;AAChD,eAAK,MAAM,IAAI;eACV;AACL,eAAK,MAAM,CAAA;;MAEf;MA1BA,OAAO,cAAiB,WAAmB,SAAwB;AACjE,aAAK,SAAS,SAAS,IAAI;MAC7B;MAEA,OAAO,gBAAgB,WAAiB;AACtC,eAAO,KAAK,SAAS,SAAS;MAChC;MAEQ,OAAO,WAAW,WAAiB;AACzC,cAAM,UAAU,KAAK,SAAS,SAAS;AACvC,YAAI,CAAC,SAAS;AACZ,gBAAM,IAAI,MAAM,+BAA+B,SAAS,GAAG;;AAE7D,eAAO;MACT;MAcA,OACE,KACA,YAAgC;AAEhC,cAAM,QAAY,CAAA;AAClB,YAAI,OAAO,QAAQ,YAAY,IAAI,WAAW,GAAG;AAC/C,iBAAO;;AAET,cAAM,SAAS;AACf,YACE,cAAc,QACd,OAAO,eAAe,YACtB,OAAO,KAAK,UAAU,EAAE,SAAS,GACjC;AACA,gBAAM,aAAa;;AAErB,eAAO,KAAK,KAAK,KAAK;MACxB;MAEA,OAAO,QAAc;AACnB,YAAI,UAAU,GAAG;AACf,iBAAO;;AAET,eAAO,KAAK,KAAK,EAAE,QAAQ,OAAM,CAAE;MACrC;MAEA,OACE,QACA,YAAgC;AAEhC,YAAI,OAAO,WAAW,YAAY,UAAU,GAAG;AAC7C,iBAAO;;AAET,cAAM,QAAY,EAAE,QAAQ,OAAM;AAClC,YACE,cAAc,QACd,OAAO,eAAe,YACtB,OAAO,KAAK,UAAU,EAAE,SAAS,GACjC;AACA,gBAAM,aAAa;;AAErB,eAAO,KAAK,KAAK,KAAK;MACxB;MAEA,KAAK,OAAS;AACZ,YAAI,QAAQ,KAAK,IAAI;AACrB,YAAI,SAAS,KAAK,IAAI,QAAQ,CAAC;AAC/B,gBAAQ,UAAU,KAAK;AACvB,YAAI,OAAO,WAAW,UAAU;AAC9B,cACE,OAAO,MAAM,WAAW,YACxB,OAAO,OAAO,WAAW,UACzB;AACA,iBAAK,IAAI,QAAQ,CAAC,IAAI,EAAE,QAAQ,OAAO,SAAS,MAAM,OAAM;AAC5D,mBAAO;;AAIT,cAAI,OAAO,OAAO,WAAW,YAAY,MAAM,UAAU,MAAM;AAC7D,qBAAS;AACT,qBAAS,KAAK,IAAI,QAAQ,CAAC;AAC3B,gBAAI,OAAO,WAAW,UAAU;AAC9B,mBAAK,IAAI,QAAQ,KAAK;AACtB,qBAAO;;;AAGX,cAAID,SAAQ,MAAM,YAAY,OAAO,UAAU,GAAG;AAChD,gBACE,OAAO,MAAM,WAAW,YACxB,OAAO,OAAO,WAAW,UACzB;AACA,mBAAK,IAAI,QAAQ,CAAC,IAAI,EAAE,QAAQ,OAAO,SAAS,MAAM,OAAM;AAC5D,kBAAI,OAAO,MAAM,eAAe,UAAU;AACxC,qBAAK,IAAI,QAAQ,CAAC,EAAE,aAAa,MAAM;;AAEzC,qBAAO;uBAEP,OAAO,MAAM,WAAW,YACxB,OAAO,OAAO,WAAW,UACzB;AACA,mBAAK,IAAI,QAAQ,CAAC,IAAI,EAAE,QAAQ,OAAO,SAAS,MAAM,OAAM;AAC5D,kBAAI,OAAO,MAAM,eAAe,UAAU;AACxC,qBAAK,IAAI,QAAQ,CAAC,EAAE,aAAa,MAAM;;AAEzC,qBAAO;;;;AAIb,YAAI,UAAU,KAAK,IAAI,QAAQ;AAC7B,eAAK,IAAI,KAAK,KAAK;eACd;AACL,eAAK,IAAI,OAAO,OAAO,GAAG,KAAK;;AAEjC,eAAO;MACT;MAEA,OAAI;AACF,cAAM,SAAS,KAAK,IAAI,KAAK,IAAI,SAAS,CAAC;AAC3C,YAAI,UAAU,OAAO,OAAO,WAAW,YAAY,CAAC,OAAO,YAAY;AACrE,eAAK,IAAI,IAAG;;AAEd,eAAO;MACT;MAEA,OAAO,WAA6C;AAClD,eAAO,KAAK,IAAI,OAAO,SAAS;MAClC;MAEA,QAAQ,WAA0C;AAChD,aAAK,IAAI,QAAQ,SAAS;MAC5B;MAEA,IAAO,WAAuC;AAC5C,eAAO,KAAK,IAAI,IAAI,SAAS;MAC/B;MAEA,UAAU,WAA8B;AACtC,cAAM,SAAe,CAAA;AACrB,cAAM,SAAe,CAAA;AACrB,aAAK,QAAQ,CAAC,OAAM;AAClB,gBAAM,SAAS,UAAU,EAAE,IAAI,SAAS;AACxC,iBAAO,KAAK,EAAE;QAChB,CAAC;AACD,eAAO,CAAC,QAAQ,MAAM;MACxB;MAEA,OACE,WACA,cAAe;AAEf,eAAO,KAAK,IAAI,OAAO,WAAW,YAAY;MAChD;MAEA,eAAY;AACV,eAAO,KAAK,OAAO,CAAC,QAAQ,SAAQ;AAClC,cAAI,KAAK,QAAQ;AACf,mBAAO,SAAS,KAAA,QAAG,OAAO,IAAI;qBACrB,KAAK,QAAQ;AACtB,mBAAO,SAAS,KAAK;;AAEvB,iBAAO;QACT,GAAG,CAAC;MACN;MAEA,SAAM;AACJ,eAAO,KAAK,OAAO,CAAC,QAAQ,SAAQ;AAClC,iBAAO,SAAS,KAAA,QAAG,OAAO,IAAI;QAChC,GAAG,CAAC;MACN;MAEA,MAAM,QAAQ,GAAG,MAAM,UAAQ;AAC7B,cAAM,MAAM,CAAA;AACZ,cAAM,OAAO,IAAI,aAAA,QAAW,KAAK,GAAG;AACpC,YAAI,QAAQ;AACZ,eAAO,QAAQ,OAAO,KAAK,QAAO,GAAI;AACpC,cAAI;AACJ,cAAI,QAAQ,OAAO;AACjB,qBAAS,KAAK,KAAK,QAAQ,KAAK;iBAC3B;AACL,qBAAS,KAAK,KAAK,MAAM,KAAK;AAC9B,gBAAI,KAAK,MAAM;;AAEjB,mBAAS,KAAA,QAAG,OAAO,MAAM;;AAE3B,eAAO,IAAI,OAAM,GAAG;MACtB;MAEA,QAAQ,OAAY;AAClB,cAAM,WAAW,IAAI,aAAA,QAAW,KAAK,GAAG;AACxC,cAAM,YAAY,IAAI,aAAA,QAAW,MAAM,GAAG;AAC1C,cAAM,MAAM,CAAA;AACZ,cAAM,aAAa,UAAU,KAAI;AACjC,YACE,cAAc,QACd,OAAO,WAAW,WAAW,YAC7B,WAAW,cAAc,MACzB;AACA,cAAI,YAAY,WAAW;AAC3B,iBACE,SAAS,SAAQ,MAAO,YACxB,SAAS,WAAU,KAAM,WACzB;AACA,yBAAa,SAAS,WAAU;AAChC,gBAAI,KAAK,SAAS,KAAI,CAAE;;AAE1B,cAAI,WAAW,SAAS,YAAY,GAAG;AACrC,sBAAU,KAAK,WAAW,SAAS,SAAS;;;AAGhD,cAAM,QAAQ,IAAI,OAAM,GAAG;AAC3B,eAAO,SAAS,QAAO,KAAM,UAAU,QAAO,GAAI;AAChD,cAAI,UAAU,SAAQ,MAAO,UAAU;AACrC,kBAAM,KAAK,UAAU,KAAI,CAAE;qBAClB,SAAS,SAAQ,MAAO,UAAU;AAC3C,kBAAM,KAAK,SAAS,KAAI,CAAE;iBACrB;AACL,kBAAM,SAAS,KAAK,IAAI,SAAS,WAAU,GAAI,UAAU,WAAU,CAAE;AACrE,kBAAM,SAAS,SAAS,KAAK,MAAM;AACnC,kBAAM,UAAU,UAAU,KAAK,MAAM;AACrC,gBAAI,QAAQ,QAAQ;AAClB,oBAAM,QAAY,CAAA;AAClB,kBAAI,OAAO,OAAO,WAAW,UAAU;AACrC,sBAAM,SACJ,OAAO,QAAQ,WAAW,WAAW,SAAS,QAAQ;qBACnD;AACL,oBAAI,OAAO,QAAQ,WAAW,UAAU;AACtC,sBAAI,OAAO,UAAU,MAAM;AACzB,0BAAM,SAAS,OAAO;yBACjB;AACL,0BAAM,SAAS,OAAO;;uBAEnB;AACL,wBAAM,SAAS,OAAO,UAAU,OAAO,WAAW;AAClD,wBAAM,CAAC,WAAW,UAAU,SAAS,IAAI,oBACvC,OAAO,MAAM,GACb,QAAQ,MAAM;AAEhB,wBAAM,UAAU,OAAM,WAAW,SAAS;AAC1C,wBAAM,MAAM,IAAI;oBACd,CAAC,SAAS,GAAG,QAAQ,QACnB,UACA,WACA,WAAW,QAAQ;;;;AAM3B,oBAAM,aAAa,eAAA,QAAa,QAC9B,OAAO,YACP,QAAQ,YACR,OAAO,OAAO,WAAW,QAAQ;AAEnC,kBAAI,YAAY;AACd,sBAAM,aAAa;;AAErB,oBAAM,KAAK,KAAK;AAGhB,kBACE,CAAC,UAAU,QAAO,KAClBA,SAAQ,MAAM,IAAI,MAAM,IAAI,SAAS,CAAC,GAAG,KAAK,GAC9C;AACA,sBAAM,OAAO,IAAI,OAAM,SAAS,KAAI,CAAE;AACtC,uBAAO,MAAM,OAAO,IAAI,EAAE,KAAI;;uBAMhC,OAAO,QAAQ,WAAW,aACzB,OAAO,OAAO,WAAW,YACvB,OAAO,OAAO,WAAW,YAAY,OAAO,WAAW,OAC1D;AACA,oBAAM,KAAK,OAAO;;;;AAIxB,eAAO,MAAM,KAAI;MACnB;MAEA,OAAO,OAAY;AACjB,cAAM,QAAQ,IAAI,OAAM,KAAK,IAAI,MAAK,CAAE;AACxC,YAAI,MAAM,IAAI,SAAS,GAAG;AACxB,gBAAM,KAAK,MAAM,IAAI,CAAC,CAAC;AACvB,gBAAM,MAAM,MAAM,IAAI,OAAO,MAAM,IAAI,MAAM,CAAC,CAAC;;AAEjD,eAAO;MACT;MAEA,KAAK,OAAc,QAAiC;AAClD,YAAI,KAAK,QAAQ,MAAM,KAAK;AAC1B,iBAAO,IAAI,OAAK;;AAElB,cAAM,UAAU,CAAC,MAAM,KAAK,EAAE,IAAI,CAAC,UAAS;AAC1C,iBAAO,MACJ,IAAI,CAAC,OAAM;AACV,gBAAI,GAAG,UAAU,MAAM;AACrB,qBAAO,OAAO,GAAG,WAAW,WAAW,GAAG,SAAS;;AAErD,kBAAM,OAAO,UAAU,QAAQ,OAAO;AACtC,kBAAM,IAAI,MAAM,mBAAmB,OAAO,eAAe;UAC3D,CAAC,EACA,KAAK,EAAE;QACZ,CAAC;AACD,cAAM,WAAW,IAAI,OAAK;AAC1B,cAAM,aAAa,KAAK,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,QAAQ,IAAI;AAC5D,cAAM,WAAW,IAAI,aAAA,QAAW,KAAK,GAAG;AACxC,cAAM,YAAY,IAAI,aAAA,QAAW,MAAM,GAAG;AAC1C,mBAAW,QAAQ,CAAC,cAAwB;AAC1C,cAAI,SAAS,UAAU,CAAC,EAAE;AAC1B,iBAAO,SAAS,GAAG;AACjB,gBAAI,WAAW;AACf,oBAAQ,UAAU,CAAC,GAAG;cACpB,KAAK,KAAK;AACR,2BAAW,KAAK,IAAI,UAAU,WAAU,GAAI,MAAM;AAClD,yBAAS,KAAK,UAAU,KAAK,QAAQ,CAAC;AACtC;cACF,KAAK,KAAK;AACR,2BAAW,KAAK,IAAI,QAAQ,SAAS,WAAU,CAAE;AACjD,yBAAS,KAAK,QAAQ;AACtB,yBAAS,OAAO,QAAQ;AACxB;cACF,KAAK,KAAK;AACR,2BAAW,KAAK,IACd,SAAS,WAAU,GACnB,UAAU,WAAU,GACpB,MAAM;AAER,sBAAM,SAAS,SAAS,KAAK,QAAQ;AACrC,sBAAM,UAAU,UAAU,KAAK,QAAQ;AACvC,oBAAIA,SAAQ,OAAO,QAAQ,QAAQ,MAAM,GAAG;AAC1C,2BAAS,OACP,UACA,eAAA,QAAa,KAAK,OAAO,YAAY,QAAQ,UAAU,CAAC;uBAErD;AACL,2BAAS,KAAK,OAAO,EAAE,OAAO,QAAQ;;AAExC;;AAEJ,sBAAU;;QAEd,CAAC;AACD,eAAO,SAAS,KAAI;MACtB;MAEA,SACE,WAKA,UAAU,MAAI;AAEd,cAAM,OAAO,IAAI,aAAA,QAAW,KAAK,GAAG;AACpC,YAAI,OAAO,IAAI,OAAK;AACpB,YAAI,IAAI;AACR,eAAO,KAAK,QAAO,GAAI;AACrB,cAAI,KAAK,SAAQ,MAAO,UAAU;AAChC;;AAEF,gBAAM,SAAS,KAAK,KAAI;AACxB,gBAAM,QAAQ,KAAA,QAAG,OAAO,MAAM,IAAI,KAAK,WAAU;AACjD,gBAAM,QACJ,OAAO,OAAO,WAAW,WACrB,OAAO,OAAO,QAAQ,SAAS,KAAK,IAAI,QACxC;AACN,cAAI,QAAQ,GAAG;AACb,iBAAK,KAAK,KAAK,KAAI,CAAE;qBACZ,QAAQ,GAAG;AACpB,iBAAK,KAAK,KAAK,KAAK,KAAK,CAAC;iBACrB;AACL,gBAAI,UAAU,MAAM,KAAK,KAAK,CAAC,EAAE,cAAc,CAAA,GAAI,CAAC,MAAM,OAAO;AAC/D;;AAEF,iBAAK;AACL,mBAAO,IAAI,OAAK;;;AAGpB,YAAI,KAAK,OAAM,IAAK,GAAG;AACrB,oBAAU,MAAM,CAAA,GAAI,CAAC;;MAEzB;MAEA,OAAO,MAAW;AAChB,cAAM,WAAW,IAAI,OAAK;AAC1B,aAAK,OAAO,CAAC,WAAW,OAAM;AAC5B,cAAI,GAAG,QAAQ;AACb,qBAAS,OAAO,KAAA,QAAG,OAAO,EAAE,CAAC;qBACpB,OAAO,GAAG,WAAW,YAAY,GAAG,cAAc,MAAM;AACjE,qBAAS,OAAO,GAAG,MAAM;AACzB,mBAAO,YAAY,GAAG;qBACb,GAAG,UAAU,OAAO,GAAG,WAAW,UAAU;AACrD,kBAAM,SAAU,GAAG,UAAU,GAAG;AAChC,kBAAM,QAAQ,KAAK,MAAM,WAAW,YAAY,MAAM;AACtD,kBAAM,QAAQ,CAAC,WAAU;AACvB,kBAAI,GAAG,QAAQ;AACb,yBAAS,KAAK,MAAM;yBACX,GAAG,UAAU,GAAG,YAAY;AACrC,yBAAS,OACP,KAAA,QAAG,OAAO,MAAM,GAChB,eAAA,QAAa,OAAO,GAAG,YAAY,OAAO,UAAU,CAAC;;YAG3D,CAAC;AACD,mBAAO,YAAY;qBACV,OAAO,GAAG,WAAW,YAAY,GAAG,WAAW,MAAM;AAC9D,kBAAM,QAAQ,KAAK,MAAM,WAAW,YAAY,CAAC;AACjD,kBAAM,SAAS,IAAI,aAAA,QAAW,MAAM,GAAG,EAAE,KAAI;AAC7C,kBAAM,CAAC,WAAW,QAAQ,UAAU,IAAI,oBACtC,GAAG,QACH,OAAO,MAAM;AAEf,kBAAM,UAAU,OAAM,WAAW,SAAS;AAC1C,qBAAS,OACP,EAAE,CAAC,SAAS,GAAG,QAAQ,OAAO,QAAQ,UAAU,EAAC,GACjD,eAAA,QAAa,OAAO,GAAG,YAAY,OAAO,UAAU,CAAC;AAEvD,mBAAO,YAAY;;AAErB,iBAAO;QACT,GAAG,CAAC;AACJ,eAAO,SAAS,KAAI;MACtB;MAIA,UAAU,KAAqB,WAAW,OAAK;AAC7C,mBAAW,CAAC,CAAC;AACb,YAAI,OAAO,QAAQ,UAAU;AAC3B,iBAAO,KAAK,kBAAkB,KAAK,QAAQ;;AAE7C,cAAM,QAAe;AACrB,cAAM,WAAW,IAAI,aAAA,QAAW,KAAK,GAAG;AACxC,cAAM,YAAY,IAAI,aAAA,QAAW,MAAM,GAAG;AAC1C,cAAM,QAAQ,IAAI,OAAK;AACvB,eAAO,SAAS,QAAO,KAAM,UAAU,QAAO,GAAI;AAChD,cACE,SAAS,SAAQ,MAAO,aACvB,YAAY,UAAU,SAAQ,MAAO,WACtC;AACA,kBAAM,OAAO,KAAA,QAAG,OAAO,SAAS,KAAI,CAAE,CAAC;qBAC9B,UAAU,SAAQ,MAAO,UAAU;AAC5C,kBAAM,KAAK,UAAU,KAAI,CAAE;iBACtB;AACL,kBAAM,SAAS,KAAK,IAAI,SAAS,WAAU,GAAI,UAAU,WAAU,CAAE;AACrE,kBAAM,SAAS,SAAS,KAAK,MAAM;AACnC,kBAAM,UAAU,UAAU,KAAK,MAAM;AACrC,gBAAI,OAAO,QAAQ;AAEjB;uBACS,QAAQ,QAAQ;AACzB,oBAAM,KAAK,OAAO;mBACb;AACL,oBAAM,WAAW,OAAO;AACxB,oBAAM,YAAY,QAAQ;AAC1B,kBAAI,kBACF,OAAO,cAAc,YAAY,cAAc,OAC3C,YACA;AACN,kBACE,OAAO,aAAa,YACpB,aAAa,QACb,OAAO,cAAc,YACrB,cAAc,MACd;AACA,sBAAM,YAAY,OAAO,KAAK,QAAQ,EAAE,CAAC;AACzC,oBAAI,cAAc,OAAO,KAAK,SAAS,EAAE,CAAC,GAAG;AAC3C,wBAAM,UAAU,OAAM,WAAW,SAAS;AAC1C,sBAAI,SAAS;AACX,sCAAkB;sBAChB,CAAC,SAAS,GAAG,QAAQ,UACnB,SAAS,SAAS,GAClB,UAAU,SAAS,GACnB,QAAQ;;;;;AAQlB,oBAAM,OACJ,iBACA,eAAA,QAAa,UACX,OAAO,YACP,QAAQ,YACR,QAAQ,CACT;;;;AAKT,eAAO,MAAM,KAAI;MACnB;MAEA,kBAAkB,OAAe,WAAW,OAAK;AAC/C,mBAAW,CAAC,CAAC;AACb,cAAM,WAAW,IAAI,aAAA,QAAW,KAAK,GAAG;AACxC,YAAI,SAAS;AACb,eAAO,SAAS,QAAO,KAAM,UAAU,OAAO;AAC5C,gBAAM,SAAS,SAAS,WAAU;AAClC,gBAAM,WAAW,SAAS,SAAQ;AAClC,mBAAS,KAAI;AACb,cAAI,aAAa,UAAU;AACzB,qBAAS,KAAK,IAAI,QAAQ,QAAQ,MAAM;AACxC;qBACS,aAAa,aAAa,SAAS,SAAS,CAAC,WAAW;AACjE,qBAAS;;AAEX,oBAAU;;AAEZ,eAAO;MACT;;AA/gBO,IAAAC,QAAA,KAAK,KAAA;AACL,IAAAA,QAAA,aAAa,aAAA;AACb,IAAAA,QAAA,eAAe,eAAA;AACP,IAAAA,QAAA,WAA2D,CAAA;AA+gB5E,YAAA,UAAeA;AAIf,QAAI,OAAO,WAAW,UAAU;AAC9B,aAAO,UAAUA;AACjB,aAAO,QAAQ,UAAUA;;;;;;AC3jB3B;AAAA;AAAA;AAEA,QAAI,MAAM,OAAO,UAAU;AAA3B,QACI,SAAS;AASb,aAAS,SAAS;AAAA,IAAC;AASnB,QAAI,OAAO,QAAQ;AACjB,aAAO,YAAY,uBAAO,OAAO,IAAI;AAMrC,UAAI,CAAC,IAAI,OAAO,EAAE;AAAW,iBAAS;AAAA,IACxC;AAWA,aAAS,GAAG,IAAI,SAAS,MAAM;AAC7B,WAAK,KAAK;AACV,WAAK,UAAU;AACf,WAAK,OAAO,QAAQ;AAAA,IACtB;AAaA,aAAS,YAAY,SAAS,OAAO,IAAI,SAAS,MAAM;AACtD,UAAI,OAAO,OAAO,YAAY;AAC5B,cAAM,IAAI,UAAU,iCAAiC;AAAA,MACvD;AAEA,UAAI,WAAW,IAAI,GAAG,IAAI,WAAW,SAAS,IAAI,GAC9C,MAAM,SAAS,SAAS,QAAQ;AAEpC,UAAI,CAAC,QAAQ,QAAQ,GAAG;AAAG,gBAAQ,QAAQ,GAAG,IAAI,UAAU,QAAQ;AAAA,eAC3D,CAAC,QAAQ,QAAQ,GAAG,EAAE;AAAI,gBAAQ,QAAQ,GAAG,EAAE,KAAK,QAAQ;AAAA;AAChE,gBAAQ,QAAQ,GAAG,IAAI,CAAC,QAAQ,QAAQ,GAAG,GAAG,QAAQ;AAE3D,aAAO;AAAA,IACT;AASA,aAAS,WAAW,SAAS,KAAK;AAChC,UAAI,EAAE,QAAQ,iBAAiB;AAAG,gBAAQ,UAAU,IAAI,OAAO;AAAA;AAC1D,eAAO,QAAQ,QAAQ,GAAG;AAAA,IACjC;AASA,aAASC,gBAAe;AACtB,WAAK,UAAU,IAAI,OAAO;AAC1B,WAAK,eAAe;AAAA,IACtB;AASA,IAAAA,cAAa,UAAU,aAAa,SAAS,aAAa;AACxD,UAAI,QAAQ,CAAC,GACT,QACA;AAEJ,UAAI,KAAK,iBAAiB;AAAG,eAAO;AAEpC,WAAK,QAAS,SAAS,KAAK,SAAU;AACpC,YAAI,IAAI,KAAK,QAAQ,IAAI;AAAG,gBAAM,KAAK,SAAS,KAAK,MAAM,CAAC,IAAI,IAAI;AAAA,MACtE;AAEA,UAAI,OAAO,uBAAuB;AAChC,eAAO,MAAM,OAAO,OAAO,sBAAsB,MAAM,CAAC;AAAA,MAC1D;AAEA,aAAO;AAAA,IACT;AASA,IAAAA,cAAa,UAAU,YAAY,SAAS,UAAU,OAAO;AAC3D,UAAI,MAAM,SAAS,SAAS,QAAQ,OAChC,WAAW,KAAK,QAAQ,GAAG;AAE/B,UAAI,CAAC;AAAU,eAAO,CAAC;AACvB,UAAI,SAAS;AAAI,eAAO,CAAC,SAAS,EAAE;AAEpC,eAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK,IAAI,MAAM,CAAC,GAAG,IAAI,GAAG,KAAK;AAClE,WAAG,CAAC,IAAI,SAAS,CAAC,EAAE;AAAA,MACtB;AAEA,aAAO;AAAA,IACT;AASA,IAAAA,cAAa,UAAU,gBAAgB,SAAS,cAAc,OAAO;AACnE,UAAI,MAAM,SAAS,SAAS,QAAQ,OAChC,YAAY,KAAK,QAAQ,GAAG;AAEhC,UAAI,CAAC;AAAW,eAAO;AACvB,UAAI,UAAU;AAAI,eAAO;AACzB,aAAO,UAAU;AAAA,IACnB;AASA,IAAAA,cAAa,UAAU,OAAO,SAAS,KAAK,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI;AACrE,UAAI,MAAM,SAAS,SAAS,QAAQ;AAEpC,UAAI,CAAC,KAAK,QAAQ,GAAG;AAAG,eAAO;AAE/B,UAAI,YAAY,KAAK,QAAQ,GAAG,GAC5B,MAAM,UAAU,QAChB,MACA;AAEJ,UAAI,UAAU,IAAI;AAChB,YAAI,UAAU;AAAM,eAAK,eAAe,OAAO,UAAU,IAAI,QAAW,IAAI;AAE5E,gBAAQ,KAAK;AAAA,UACX,KAAK;AAAG,mBAAO,UAAU,GAAG,KAAK,UAAU,OAAO,GAAG;AAAA,UACrD,KAAK;AAAG,mBAAO,UAAU,GAAG,KAAK,UAAU,SAAS,EAAE,GAAG;AAAA,UACzD,KAAK;AAAG,mBAAO,UAAU,GAAG,KAAK,UAAU,SAAS,IAAI,EAAE,GAAG;AAAA,UAC7D,KAAK;AAAG,mBAAO,UAAU,GAAG,KAAK,UAAU,SAAS,IAAI,IAAI,EAAE,GAAG;AAAA,UACjE,KAAK;AAAG,mBAAO,UAAU,GAAG,KAAK,UAAU,SAAS,IAAI,IAAI,IAAI,EAAE,GAAG;AAAA,UACrE,KAAK;AAAG,mBAAO,UAAU,GAAG,KAAK,UAAU,SAAS,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG;AAAA,QAC3E;AAEA,aAAK,IAAI,GAAG,OAAO,IAAI,MAAM,MAAK,CAAC,GAAG,IAAI,KAAK,KAAK;AAClD,eAAK,IAAI,CAAC,IAAI,UAAU,CAAC;AAAA,QAC3B;AAEA,kBAAU,GAAG,MAAM,UAAU,SAAS,IAAI;AAAA,MAC5C,OAAO;AACL,YAAI,SAAS,UAAU,QACnB;AAEJ,aAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,cAAI,UAAU,CAAC,EAAE;AAAM,iBAAK,eAAe,OAAO,UAAU,CAAC,EAAE,IAAI,QAAW,IAAI;AAElF,kBAAQ,KAAK;AAAA,YACX,KAAK;AAAG,wBAAU,CAAC,EAAE,GAAG,KAAK,UAAU,CAAC,EAAE,OAAO;AAAG;AAAA,YACpD,KAAK;AAAG,wBAAU,CAAC,EAAE,GAAG,KAAK,UAAU,CAAC,EAAE,SAAS,EAAE;AAAG;AAAA,YACxD,KAAK;AAAG,wBAAU,CAAC,EAAE,GAAG,KAAK,UAAU,CAAC,EAAE,SAAS,IAAI,EAAE;AAAG;AAAA,YAC5D,KAAK;AAAG,wBAAU,CAAC,EAAE,GAAG,KAAK,UAAU,CAAC,EAAE,SAAS,IAAI,IAAI,EAAE;AAAG;AAAA,YAChE;AACE,kBAAI,CAAC;AAAM,qBAAK,IAAI,GAAG,OAAO,IAAI,MAAM,MAAK,CAAC,GAAG,IAAI,KAAK,KAAK;AAC7D,uBAAK,IAAI,CAAC,IAAI,UAAU,CAAC;AAAA,gBAC3B;AAEA,wBAAU,CAAC,EAAE,GAAG,MAAM,UAAU,CAAC,EAAE,SAAS,IAAI;AAAA,UACpD;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAWA,IAAAA,cAAa,UAAU,KAAK,SAAS,GAAG,OAAO,IAAI,SAAS;AAC1D,aAAO,YAAY,MAAM,OAAO,IAAI,SAAS,KAAK;AAAA,IACpD;AAWA,IAAAA,cAAa,UAAU,OAAO,SAAS,KAAK,OAAO,IAAI,SAAS;AAC9D,aAAO,YAAY,MAAM,OAAO,IAAI,SAAS,IAAI;AAAA,IACnD;AAYA,IAAAA,cAAa,UAAU,iBAAiB,SAAS,eAAe,OAAO,IAAI,SAAS,MAAM;AACxF,UAAI,MAAM,SAAS,SAAS,QAAQ;AAEpC,UAAI,CAAC,KAAK,QAAQ,GAAG;AAAG,eAAO;AAC/B,UAAI,CAAC,IAAI;AACP,mBAAW,MAAM,GAAG;AACpB,eAAO;AAAA,MACT;AAEA,UAAI,YAAY,KAAK,QAAQ,GAAG;AAEhC,UAAI,UAAU,IAAI;AAChB,YACE,UAAU,OAAO,OAChB,CAAC,QAAQ,UAAU,UACnB,CAAC,WAAW,UAAU,YAAY,UACnC;AACA,qBAAW,MAAM,GAAG;AAAA,QACtB;AAAA,MACF,OAAO;AACL,iBAAS,IAAI,GAAG,SAAS,CAAC,GAAG,SAAS,UAAU,QAAQ,IAAI,QAAQ,KAAK;AACvE,cACE,UAAU,CAAC,EAAE,OAAO,MACnB,QAAQ,CAAC,UAAU,CAAC,EAAE,QACtB,WAAW,UAAU,CAAC,EAAE,YAAY,SACrC;AACA,mBAAO,KAAK,UAAU,CAAC,CAAC;AAAA,UAC1B;AAAA,QACF;AAKA,YAAI,OAAO;AAAQ,eAAK,QAAQ,GAAG,IAAI,OAAO,WAAW,IAAI,OAAO,CAAC,IAAI;AAAA;AACpE,qBAAW,MAAM,GAAG;AAAA,MAC3B;AAEA,aAAO;AAAA,IACT;AASA,IAAAA,cAAa,UAAU,qBAAqB,SAAS,mBAAmB,OAAO;AAC7E,UAAI;AAEJ,UAAI,OAAO;AACT,cAAM,SAAS,SAAS,QAAQ;AAChC,YAAI,KAAK,QAAQ,GAAG;AAAG,qBAAW,MAAM,GAAG;AAAA,MAC7C,OAAO;AACL,aAAK,UAAU,IAAI,OAAO;AAC1B,aAAK,eAAe;AAAA,MACtB;AAEA,aAAO;AAAA,IACT;AAKA,IAAAA,cAAa,UAAU,MAAMA,cAAa,UAAU;AACpD,IAAAA,cAAa,UAAU,cAAcA,cAAa,UAAU;AAK5D,IAAAA,cAAa,WAAW;AAKxB,IAAAA,cAAa,eAAeA;AAK5B,QAAI,gBAAgB,OAAO,QAAQ;AACjC,aAAO,UAAUA;AAAA,IACnB;AAAA;AAAA;;;AC/UK;;;;;;;;;;;;;;;;;IAAA,SAAA,CAAAC,YACHA,OAAAA,OAAA,OAAQ,CAAR,IAAA,QACAA,OAAAA,OAAA,QAAU,EAAV,IAAA,SAEAA,OAAAA,OAAA,YAAa,EAAb,IAAA,aACAA,OAAAA,OAAA,OAAQ,EAAR,IAAA,QACAA,OAAAA,OAAA,SAAU,CAAV,IAAA,UACAA,OAAAA,OAAA,QAAS,EAAT,IAAA,SAEAA,OAAAA,OAAA,aAAa,EAAb,IAAA,cACAA,OAAAA,OAAA,cAAc,CAAd,IAAA,eACAA,OAAAA,OAAA,kBAAkB,CAAlB,IAAA,mBACAA,OAAAA,OAAA,mBAAmB,CAAnB,IAAA,oBAEAA,OAAAA,OAAA,MAAM,EAAN,IAAA,OAdGA,SAAA,SAAA,CAAA,CAAA;ACOL,IAAqB,aAArB,MAAgC;EAQ9B,YACkB,UACA,SAChB,UAA6B,CAAA,GAC7B;AAHgB,SAAA,WAAA,UACA,KAAA,UAAA;AAGV,UAAA,eAAe,MAAM,OAAO,MAAM;AACnC,SAAA,QACH,QAAQ,SAAS;;MAEZ,QAAQ,QAAQ,MAAM,QAAS;QAChC,MAAM,WACR,QAAQ,aAAa,SACvB,KAAK,YAAY,QAAQ;EAE7B;EArBA,OAAc,KAAK,MAA6B;AACvC,WAAA,MAAM,KAAK,KAAK,UAAU,EAAE,IAAI,CAAC,SAAe,KAAK,IAAI;EAClE;EAqBO,IAAI,MAAmB,OAAqB;AACjD,WAAK,KAAK,OAAO,MAAM,KAAK,KAGvB,KAAA,aAAa,KAAK,SAAS,KAAK,GAC9B,QAHE;EAIX;EAEO,OAAO,OAAoB,OAAqB;AACjD,WAAA,KAAK,aAAa,OACb,OAEL,OAAO,SAAU,WACZ,KAAK,UAAU,QAAQ,MAAM,QAAQ,SAAS,EAAE,CAAC,IAAI,KAErD,KAAK,UAAU,QAAQ,KAAK,IAAI;EAE3C;EAEO,OAAO,MAAyB;AAChC,SAAA,gBAAgB,KAAK,OAAO;EACnC;EAEO,MAAM,MAAwB;AACnC,UAAM,QAAQ,KAAK,aAAa,KAAK,OAAO;AAC5C,WAAI,KAAK,OAAO,MAAM,KAAK,KAAK,QACvB,QAEF;EACT;AACF;AC7DA,IAAqB,iBAArB,cAA4C,MAAM;EAKhD,YAAY,SAAiB;AAC3B,cAAU,iBAAiB,SAC3B,MAAM,OAAO,GACb,KAAK,UAAU,SACV,KAAA,OAAO,KAAK,YAAY;EAC/B;AACF;ACMA,IAAqB,YAArB,MAAqBC,WAAsC;EAA3D,cAAA;AA0BE,SAAQ,aAA4C,CAAA,GACpD,KAAQ,UAA8C,CAAA,GACtD,KAAQ,OAA2C,CAAA,GACnD,KAAQ,QAA+C,CAAA;EAAC;EA1BxD,OAAc,KAAK,MAAoB,SAAS,OAAoB;AAClE,QAAI,QAAQ;AACH,aAAA;AAET,QAAI,KAAK,MAAM,IAAI,IAAI;AACrB,aAAO,KAAK,MAAM,IAAI,IAAI,KAAK;AAEjC,QAAI,QAAQ;AACV,UAAI,aAA0B;AAC1B,UAAA;AACF,qBAAa,KAAK;MAAA,QACN;AAKL,eAAA;MACT;AACO,aAAA,KAAK,KAAK,YAAY,MAAM;IACrC;AACO,WAAA;EACT;EAOO,OAAO,QAAc,OAA8B,OAAmB;AACrE,UAAAC,SAAQ,KAAK,MAAM,KAAK;AAC9B,QAAIA,UAAS;AACX,YAAM,IAAI,eAAe,oBAAoB,KAAK,OAAO;AAE3D,UAAM,YAAYA,QACZ;;MAEJ,iBAAiB,QAAQ,MAAM,aAAa,KAAK,YAC7C,QACA,UAAU,OAAO,KAAK;OAEtB,OAAO,IAAI,UAAU,QAAQ,MAAc,KAAK;AACtD,WAAAD,WAAS,MAAM,IAAI,KAAK,SAAS,IAAI,GAC9B;EACT;EAEO,KAAK,MAAmB,SAAS,OAAoB;AACnD,WAAAA,WAAS,KAAK,MAAM,MAAM;EACnC;EAEO,MACL,OACA,QAAe,MAAM,KACM;AACvB,QAAAC;AAuBJ,WAtBI,OAAO,SAAU,WACnBA,SAAQ,KAAK,MAAM,KAAK,KAAK,KAAK,WAAW,KAAK,IAEzC,iBAAiB,QAAQ,MAAM,aAAa,KAAK,YAC1DA,SAAQ,KAAK,MAAM,OACV,OAAO,SAAU,WACtB,QAAQ,MAAM,QAAQ,MAAM,QAC9BA,SAAQ,KAAK,MAAM,QACV,QAAQ,MAAM,QAAQ,MAAM,WACrCA,SAAQ,KAAK,MAAM,UAEZ,iBAAiB,aACX,MAAM,aAAa,OAAO,KAAK,IAAI,MAAM,KAAK,EACvD,KAAK,CAAC,UACFA,SAAA,KAAK,QAAQ,IAAI,GACrB,CAAA,CAAAA,OAIL,GACDA,SAAQA,UAAS,KAAK,KAAK,MAAM,OAAO,IAEtCA,UAAS,OACJ,OAGP,WAAWA,UACX,QAAQ,MAAM,QAAQA,OAAM,SAC5B,QAAQ,MAAM,OAAOA,OAAM,QAEpBA,SAEF;EACT;EAEO,YAAY,aAAyD;AACnE,WAAA,YAAY,IAAI,CAAC,eAAe;AACrC,YAAM,SAAS,cAAc,YACvB,SAAS,cAAc;AACzB,UAAA,CAAC,UAAU,CAAC;AACR,cAAA,IAAI,eAAe,oBAAoB;AACpC,UAAA,UAAU,WAAW,aAAa;AACrC,cAAA,IAAI,eAAe,gCAAgC;AAE3D,YAAM,MAAM,SACR,WAAW,WACX,SACE,WAAW,WACV;AACF,aAAA,KAAA,MAAM,GAAG,IAAI,YAEd,SACE,OAAO,WAAW,WAAY,aAC3B,KAAA,WAAW,WAAW,OAAO,IAAI,cAE/B,WACL,WAAW,cACR,KAAA,QAAQ,WAAW,SAAS,IAAI,aAEnC,WAAW,YACT,MAAM,QAAQ,WAAW,OAAO,IAClC,WAAW,UAAU,WAAW,QAAQ,IAAI,CAAC,YACpC,QAAQ,YAAA,CAChB,IAEU,WAAA,UAAU,WAAW,QAAQ,YAAY,IAErC,MAAM,QAAQ,WAAW,OAAO,IAC7C,WAAW,UACX,CAAC,WAAW,OAAO,GACd,QAAQ,CAAC,QAAgB;AAChC,SAAI,KAAK,KAAK,GAAG,KAAK,QAAQ,WAAW,aAAa,UAC/C,KAAA,KAAK,GAAG,IAAI;MACnB,CACD,KAGE;IAAA,CACR;EACH;AACF;AAxIgB,UAAA,QAAA,oBAAY,QAAA;AAD5B,IAAqB,WAArB;ACfA,SAAS,MAAM,MAAmB,QAA0B;AAE1D,UADkB,KAAK,aAAa,OAAO,KAAK,IAE7C,MAAM,KAAK,EACX,OAAO,CAAC,SAAS,KAAK,QAAQ,GAAG,MAAM,GAAG,MAAM,CAAC;AACtD;AAEA,IAAM,kBAAN,cAA8B,WAAW;EACvC,OAAc,KAAK,MAA6B;AACtC,YAAA,KAAK,aAAa,OAAO,KAAK,IACnC,MAAM,KAAK,EACX,IAAI,CAAC,SAAS,KAAK,MAAM,GAAG,EAAE,MAAM,GAAG,EAAE,EAAE,KAAK,GAAG,CAAC;EACzD;EAEO,IAAI,MAAmB,OAAqB;AACjD,WAAK,KAAK,OAAO,MAAM,KAAK,KAG5B,KAAK,OAAO,IAAI,GAChB,KAAK,UAAU,IAAI,GAAG,KAAK,OAAO,IAAI,KAAK,EAAE,GACtC,QAJE;EAKX;EAEO,OAAO,MAAyB;AACrB,UAAM,MAAM,KAAK,OAAO,EAChC,QAAQ,CAAC,SAAS;AACnB,WAAA,UAAU,OAAO,IAAI;IAAA,CAC3B,GACG,KAAK,UAAU,WAAW,KAC5B,KAAK,gBAAgB,OAAO;EAEhC;EAEO,MAAM,MAAwB;AAEnC,UAAM,SADS,MAAM,MAAM,KAAK,OAAO,EAAE,CAAC,KAAK,IAC1B,MAAM,KAAK,QAAQ,SAAS,CAAC;AAClD,WAAO,KAAK,OAAO,MAAM,KAAK,IAAI,QAAQ;EAC5C;AACF;AAEA,IAAA,oBAAe;ACxCf,SAAS,SAAS,MAAsB;AAChC,QAAA,QAAQ,KAAK,MAAM,GAAG,GACtB,OAAO,MACV,MAAM,CAAC,EACP,IAAI,CAAC,SAAiB,KAAK,CAAC,EAAE,YAAA,IAAgB,KAAK,MAAM,CAAC,CAAC,EAC3D,KAAK,EAAE;AACH,SAAA,MAAM,CAAC,IAAI;AACpB;AAEA,IAAM,kBAAN,cAA8B,WAAW;EACvC,OAAc,KAAK,MAA6B;AACtC,YAAA,KAAK,aAAa,OAAO,KAAK,IAAI,MAAM,GAAG,EAAE,IAAI,CAAC,UAC5C,MAAM,MAAM,GAAG,EAChB,CAAC,EAAE,KAAA,CACf;EACH;EAEO,IAAI,MAAmB,OAAqB;AACjD,WAAK,KAAK,OAAO,MAAM,KAAK,KAI5B,KAAK,MAAM,SAAS,KAAK,OAAO,CAAC,IAAI,OAC9B,QAJE;EAKX;EAEO,OAAO,MAAyB;AAErC,SAAK,MAAM,SAAS,KAAK,OAAO,CAAC,IAAI,IAChC,KAAK,aAAa,OAAO,KAC5B,KAAK,gBAAgB,OAAO;EAEhC;EAEO,MAAM,MAAwB;AAEnC,UAAM,QAAQ,KAAK,MAAM,SAAS,KAAK,OAAO,CAAC;AAC/C,WAAO,KAAK,OAAO,MAAM,KAAK,IAAI,QAAQ;EAC5C;AACF;AAEA,IAAA,oBAAe;ACpCf,IAAM,kBAAN,MAAsB;EAIpB,YAAY,SAAsB;AAHlC,SAAQ,aAA4C,CAAA,GAIlD,KAAK,UAAU,SACf,KAAK,MAAM;EACb;EAEO,UAAU,WAAuB,OAAkB;AAEpD,YACE,UAAU,IAAI,KAAK,SAAS,KAAK,MAC/B,UAAU,MAAM,KAAK,OAAO,KAAK,OAC9B,KAAA,WAAW,UAAU,QAAQ,IAAI,YAE/B,OAAA,KAAK,WAAW,UAAU,QAAQ,MAInC,UAAA,OAAO,KAAK,OAAO,GACtB,OAAA,KAAK,WAAW,UAAU,QAAQ;EAE7C;EAEO,QAAc;AACnB,SAAK,aAAa,CAAA;AAClB,UAAM,OAAO,SAAS,KAAK,KAAK,OAAO;AACvC,QAAI,QAAQ;AACV;AAEF,UAAM,aAAa,WAAW,KAAK,KAAK,OAAO,GACzC,UAAUC,kBAAgB,KAAK,KAAK,OAAO,GAC3C,SAASC,kBAAgB,KAAK,KAAK,OAAO;AAE7C,eAAA,OAAO,OAAO,EACd,OAAO,MAAM,EACb,QAAQ,CAAC,SAAS;AACjB,YAAM,OAAO,KAAK,OAAO,MAAM,MAAM,MAAM,SAAS;AAChD,sBAAgB,eACb,KAAA,WAAW,KAAK,QAAQ,IAAI;IACnC,CACD;EACL;EAEO,KAAK,QAA2B;AACrC,WAAO,KAAK,KAAK,UAAU,EAAE,QAAQ,CAAC,QAAQ;AAC5C,YAAM,QAAQ,KAAK,WAAW,GAAG,EAAE,MAAM,KAAK,OAAO;AAC9C,aAAA,OAAO,KAAK,KAAK;IAAA,CACzB;EACH;EAEO,KAAK,QAA2B;AACrC,SAAK,KAAK,MAAM,GAChB,OAAO,KAAK,KAAK,UAAU,EAAE,QAAQ,CAAC,QAAQ;AAC5C,WAAK,WAAW,GAAG,EAAE,OAAO,KAAK,OAAO;IAAA,CACzC,GACD,KAAK,aAAa,CAAA;EACpB;EAEO,SAAiC;AACtC,WAAO,OAAO,KAAK,KAAK,UAAU,EAAE;MAClC,CAAC,YAAoC,UACxB,WAAA,IAAI,IAAI,KAAK,WAAW,IAAI,EAAE,MAAM,KAAK,OAAO,GACpD;MAET,CAAC;IAAA;EAEL;AACF;AAEA,IAAA,oBAAe;AAAf,ICnEM,cAAN,MAAMC,aAA2B;EA+C/B,YACS,QACA,SACP;AAFO,SAAA,SAAA,QACA,KAAA,UAAA,SAEE,SAAA,MAAM,IAAI,SAAS,IAAI,GAChC,KAAK,OAAO,MACZ,KAAK,OAAO;EACd;EA/CA,OAAc,OAAO,UAA0B;AACzC,QAAA,KAAK,WAAW;AACZ,YAAA,IAAI,eAAe,iCAAiC;AAExD,QAAA,MACA;AACJ,WAAI,MAAM,QAAQ,KAAK,OAAO,KACxB,OAAO,YAAa,YACtB,QAAQ,SAAS,YAAA,GACb,SAAS,OAAO,EAAE,EAAE,SAAA,MAAe,UAC7B,QAAA,SAAS,OAAO,EAAE,MAEnB,OAAO,YAAa,aACrB,QAAA,WAEN,OAAO,SAAU,WACnB,OAAO,SAAS,cAAc,KAAK,QAAQ,QAAQ,CAAC,CAAC,IAC5C,SAAS,KAAK,QAAQ,QAAQ,KAAK,IAAI,KACzC,OAAA,SAAS,cAAc,KAAK,IAEnC,OAAO,SAAS,cAAc,KAAK,QAAQ,CAAC,CAAC,KAGxC,OAAA,SAAS,cAAc,KAAK,OAAO,GAExC,KAAK,aACF,KAAA,UAAU,IAAI,KAAK,SAAS,GAE5B;EACT;;EAQA,IAAI,UAAe;AACjB,WAAO,KAAK;EACd;EAUO,SAAe;EAEtB;EAEO,QAAc;AACnB,UAAM,UAAU,KAAK,QAAQ,UAAU,KAAK;AACrC,WAAA,KAAK,OAAO,OAAO,OAAO;EACnC;EAEO,SAAe;AAChB,SAAK,UAAU,QACZ,KAAA,OAAO,YAAY,IAAI,GAErB,SAAA,MAAM,OAAO,KAAK,OAAO;EACpC;EAEO,SAAS,OAAe,QAAsB;AACtC,SAAK,QAAQ,OAAO,MAAM,EAClC,OAAO;EACd;EAEO,SACL,OACA,QACA,MACA,OACM;AACN,UAAM,OAAO,KAAK,QAAQ,OAAO,MAAM;AACnC,QAAA,KAAK,OAAO,MAAM,MAAM,MAAM,IAAI,KAAK,QAAQ;AAC5C,WAAA,KAAK,MAAM,KAAK;aACZ,KAAK,OAAO,MAAM,MAAM,MAAM,SAAS,KAAK,MAAM;AAC3D,YAAM,SAAS,KAAK,OAAO,OAAO,KAAK,QAAQ,KAAK;AAEpD,WAAK,KAAK,MAAM,GACT,OAAA,OAAO,MAAM,KAAK;IAC3B;EACF;EAEO,SAAS,OAAe,OAAe,KAAiB;AAC7D,UAAM,OACJ,OAAO,OACH,KAAK,OAAO,OAAO,QAAQ,KAAK,IAChC,KAAK,OAAO,OAAO,OAAO,GAAG,GAC7B,MAAM,KAAK,MAAM,KAAK;AAC5B,SAAK,OAAO,aAAa,MAAM,OAAO,MAAS;EACjD;EAEO,QAAQ,OAAe,QAAsB;AAC5C,UAAA,SAAS,KAAK,MAAM,KAAK;AAC/B,QAAI,UAAU;AACN,YAAA,IAAI,MAAM,2BAA2B;AAE7C,WAAA,OAAO,MAAM,MAAM,GACZ;EACT;EAEO,SAAiB;AACf,WAAA;EACT;EAEO,OAAO,OAAa,KAAK,QAAgB;AAC9C,WAAI,KAAK,UAAU,QAAQ,SAAS,OAC3B,IAEF,KAAK,OAAO,SAAS,OAAO,IAAI,IAAI,KAAK,OAAO,OAAO,IAAI;EACpE;EAEO,SAAS,UAAyC;AAErD,SAAK,QAAQ,qBACb,EAAE,KAAK,kBAAkB,KAAK,QAAQ,sBAEtC,KAAK,KAAK,KAAK,QAAQ,kBAAkB,QAAQ;EAErD;EAEO,SAAe;AAChB,SAAK,QAAQ,cAAc,QAC7B,KAAK,QAAQ,WAAW,YAAY,KAAK,OAAO,GAElD,KAAK,OAAO;EACd;EAEO,YAAY,MAAqB,OAAmB;AACnD,UAAA,cACJ,OAAO,QAAS,WAAW,KAAK,OAAO,OAAO,MAAM,KAAK,IAAI;AAC3D,WAAA,KAAK,UAAU,SACjB,KAAK,OAAO,aAAa,aAAa,KAAK,QAAQ,MAAS,GAC5D,KAAK,OAAO,IAEP;EACT;EAEO,MAAM,OAAe,QAA+B;AAClD,WAAA,UAAU,IAAI,OAAO,KAAK;EACnC;EAEO,OACL,YACA,UACM;EAER;EAEO,KAAK,MAAuB,OAAqB;AAChD,UAAA,UACJ,OAAO,QAAS,WACX,KAAK,OAAO,OAAO,MAAM,KAAK,IAC/B;AAIF,QAHA,KAAK,UAAU,QACjB,KAAK,OAAO,aAAa,SAAS,KAAK,QAAQ,MAAS,GAEtD,OAAO,QAAQ,eAAgB;AACjC,YAAM,IAAI,eAAe,eAAe,IAAI,EAAE;AAEhD,WAAA,QAAQ,YAAY,IAAI,GACjB;EACT;AACF;AA7KE,YAAc,WAAW;AAD3B,IAAM,aAAN;ACPA,IAAM,YAAN,MAAMC,mBAAiB,WAA2B;;;;;;EAQhD,OAAc,MAAM,UAAqB;AAChC,WAAA;EACT;;;;;EAMO,MAAM,MAAY,QAAwB;AAE7C,WAAA,KAAK,YAAY,QACjB,KAAK,QAAQ,wBAAwB,IAAI,IACvC,KAAK,iCAEA,KAAK,IAAI,QAAQ,CAAC,IAEpB;EACT;;;;;EAMO,SAAS,OAAe,YAAsC;AAEnE,QAAI,SADuB,MAAM,KAAK,KAAK,OAAO,QAAQ,UAAU,EAC5C,QAAQ,KAAK,OAAO;AAC5C,WAAI,QAAQ,MACA,UAAA,IAEL,CAAC,KAAK,OAAO,SAAS,MAAM;EACrC;;;;;;EAOO,QAAa;AACX,WAAA;MACL,CAAC,KAAK,QAAQ,QAAQ,GAAG,KAAK,QAAQ,MAAM,KAAK,OAAO,KAAK;IAAA;EAEjE;AACF;AAjDE,UAAc,QAAQ,MAAM;AAD9B,IAAM,WAAN;AAoDA,IAAA,aAAe;ACtDf,IAAM,aAAN,MAAuC;EAKrC,cAAc;AACZ,SAAK,OAAO,MACZ,KAAK,OAAO,MACZ,KAAK,SAAS;EAChB;EAEO,UAAU,OAAkB;AAE7B,QADJ,KAAK,aAAa,MAAM,CAAC,GAAG,IAAI,GAC5B,MAAM,SAAS,GAAG;AACd,YAAA,OAAO,MAAM,MAAM,CAAC;AACrB,WAAA,OAAO,GAAG,IAAI;IACrB;EACF;EAEO,GAAG,OAAyB;AAC3B,UAAA,OAAO,KAAK,SAAA;AAClB,QAAI,MAAM,KAAA;AACH,WAAA,OAAO,QAAQ;AACX,eAAA,GACT,MAAM,KAAK;AAEN,WAAA;EACT;EAEO,SAAS,MAAkB;AAC1B,UAAA,OAAO,KAAK,SAAA;AAClB,QAAI,MAAM,KAAA;AACV,WAAO,OAAK;AACV,UAAI,QAAQ;AACH,eAAA;AAET,YAAM,KAAK;IACb;AACO,WAAA;EACT;EAEO,QAAQ,MAAiB;AACxB,UAAA,OAAO,KAAK,SAAA;AAClB,QAAI,MAAM,KAAA,GACN,QAAQ;AACZ,WAAO,OAAK;AACV,UAAI,QAAQ;AACH,eAAA;AAEA,eAAA,GACT,MAAM,KAAK;IACb;AACO,WAAA;EACT;EAEO,aAAa,MAAgB,SAAyB;AACvD,YAAQ,SAGZ,KAAK,OAAO,IAAI,GAChB,KAAK,OAAO,SACR,WAAW,QACb,KAAK,OAAO,QAAQ,MAChB,QAAQ,QAAQ,SAClB,QAAQ,KAAK,OAAO,OAEtB,QAAQ,OAAO,MACX,YAAY,KAAK,SACnB,KAAK,OAAO,SAEL,KAAK,QAAQ,QACtB,KAAK,KAAK,OAAO,MACjB,KAAK,OAAO,KAAK,MACjB,KAAK,OAAO,SAEZ,KAAK,OAAO,MACP,KAAA,OAAO,KAAK,OAAO,OAE1B,KAAK,UAAU;EACjB;EAEO,OAAO,QAAmB;AAC/B,QAAI,QAAQ,GACR,MAAM,KAAK;AACf,WAAO,OAAO,QAAM;AAClB,UAAI,QAAQ;AACH,eAAA;AAET,eAAS,IAAI,OAAA,GACb,MAAM,IAAI;IACZ;AACO,WAAA;EACT;EAEO,OAAO,MAAe;AACtB,SAAK,SAAS,IAAI,MAGnB,KAAK,QAAQ,SACV,KAAA,KAAK,OAAO,KAAK,OAEpB,KAAK,QAAQ,SACV,KAAA,KAAK,OAAO,KAAK,OAEpB,SAAS,KAAK,SAChB,KAAK,OAAO,KAAK,OAEf,SAAS,KAAK,SAChB,KAAK,OAAO,KAAK,OAEnB,KAAK,UAAU;EACjB;EAEO,SAAS,UAAoB,KAAK,MAAsB;AAE7D,WAAO,MAAgB;AACrB,YAAM,MAAM;AACZ,aAAI,WAAW,SACb,UAAU,QAAQ,OAEb;IAAA;EAEX;EAEO,KAAK,OAAe,YAAY,OAA2B;AAC1D,UAAA,OAAO,KAAK,SAAA;AAClB,QAAI,MAAM,KAAA;AACV,WAAO,OAAK;AACJ,YAAA,SAAS,IAAI,OAAA;AACnB,UACE,QAAQ,UACP,aACC,UAAU,WACT,IAAI,QAAQ,QAAQ,IAAI,KAAK,OAAO,MAAM;AAEtC,eAAA,CAAC,KAAK,KAAK;AAEX,eAAA,QACT,MAAM,KAAK;IACb;AACO,WAAA,CAAC,MAAM,CAAC;EACjB;EAEO,QAAQ,UAAkC;AACzC,UAAA,OAAO,KAAK,SAAA;AAClB,QAAI,MAAM,KAAA;AACV,WAAO;AACL,eAAS,GAAG,GACZ,MAAM,KAAK;EAEf;EAEO,UACL,OACA,QACA,UACM;AACN,QAAI,UAAU;AACZ;AAEF,UAAM,CAAC,WAAW,MAAM,IAAI,KAAK,KAAK,KAAK;AAC3C,QAAI,WAAW,QAAQ;AACjB,UAAA,OAAO,KAAK,SAAS,SAAS;AACpC,QAAI,MAAM,KAAA;AACH,WAAA,OAAO,WAAW,QAAQ,UAAQ;AACjC,YAAA,YAAY,IAAI,OAAA;AAClB,cAAQ,WACV;QACE;QACA,QAAQ;QACR,KAAK,IAAI,QAAQ,WAAW,YAAY,KAAK;MAAA,IAGtC,SAAA,KAAK,GAAG,KAAK,IAAI,WAAW,QAAQ,SAAS,QAAQ,CAAC,GAErD,YAAA,WACZ,MAAM,KAAK;IACb;EACF;EAEO,IAAI,UAAkC;AAC3C,WAAO,KAAK,OAAO,CAAC,MAAW,SACxB,KAAA,KAAK,SAAS,GAAG,CAAC,GAChB,OACN,CAAE,CAAA;EACP;EAEO,OAAU,UAAkC,MAAY;AACvD,UAAA,OAAO,KAAK,SAAA;AAClB,QAAI,MAAM,KAAA;AACV,WAAO;AACE,aAAA,SAAS,MAAM,GAAG,GACzB,MAAM,KAAK;AAEN,WAAA;EACT;AACF;AChMA,SAAS,iBAAiB,MAAY,QAAoB;AAClD,QAAA,QAAQ,OAAO,KAAK,IAAI;AAC1B,MAAA;AAAc,WAAA;AACd,MAAA;AACK,WAAA,OAAO,OAAO,IAAI;EAAA,QACf;AACV,UAAM,OAAO,OAAO,OAAO,MAAM,MAAM;AACvC,WAAA,MAAM,KAAK,KAAK,UAAU,EAAE,QAAQ,CAAC,UAAgB;AAC9C,WAAA,QAAQ,YAAY,KAAK;IAAA,CAC/B,GACG,KAAK,cACP,KAAK,WAAW,aAAa,KAAK,SAAS,IAAI,GAEjD,KAAK,OAAO,GACL;EACT;AACF;AAEA,IAAM,cAAN,MAAMC,qBAAmB,WAA6B;EAgBpD,YAAY,QAAc,SAAe;AACvC,UAAM,QAAQ,OAAO,GAHvB,KAAO,SAA6B,MAIlC,KAAK,MAAM;EACb;EAEO,YAAY,OAAmB;AACpC,SAAK,aAAa,KAAK;EACzB;EAEO,SAAe;AACpB,UAAM,OAAO,GACR,KAAA,SAAS,QAAQ,CAAC,UAAU;AAC/B,YAAM,OAAO;IAAA,CACd;EACH;EAEO,SAAS,MAAyB;AACnC,SAAK,UAAU,QACjB,KAAK,OAAO,OAAA,GAEd,KAAK,SAAS,MACVA,aAAW,WACb,KAAK,OAAO,UAAU,IAAIA,aAAW,OAAO,GAEzC,KAAA,OAAO,aAAa,mBAAmB,OAAO,GACnD,KAAK,QAAQ,aAAa,KAAK,QAAQ,KAAK,QAAQ,UAAU;EAChE;;;;EAKO,QAAc;AACd,SAAA,WAAW,IAAI,WAAA,GAEpB,MAAM,KAAK,KAAK,QAAQ,UAAU,EAC/B,OAAO,CAAC,SAAe,SAAS,KAAK,MAAM,EAC3C,QAAA,EACA,QAAQ,CAAC,SAAe;AACnB,UAAA;AACF,cAAM,QAAQ,iBAAiB,MAAM,KAAK,MAAM;AAChD,aAAK,aAAa,OAAO,KAAK,SAAS,QAAQ,MAAS;MAAA,SACjD,KAAK;AACZ,YAAI,eAAe;AACjB;AAEM,cAAA;MAEV;IAAA,CACD;EACL;EAEO,SAAS,OAAe,QAAsB;AACnD,QAAI,UAAU,KAAK,WAAW,KAAK,OAAA;AACjC,aAAO,KAAK,OAAA;AAEd,SAAK,SAAS,UAAU,OAAO,QAAQ,CAAC,OAAO,QAAQ,gBAAgB;AAC/D,YAAA,SAAS,QAAQ,WAAW;IAAA,CACnC;EACH;EAUO,WAAW,UAAe,QAAQ,GAA0B;AACjE,UAAM,CAAC,OAAO,MAAM,IAAI,KAAK,SAAS,KAAK,KAAK;AAE7C,WAAA,SAAS,YAAY,QAAQ,SAAS,KAAK,KAC3C,SAAS,YAAY,QAAQ,iBAAiB,WAExC,CAAC,OAAc,MAAM,IACnB,iBAAiBA,eACnB,MAAM,WAAW,UAAU,MAAM,IAEjC,CAAC,MAAM,EAAE;EAEpB;EAYO,YACL,UACA,QAAQ,GACR,SAAiB,OAAO,WAChB;AACR,QAAI,cAAsB,CAAA,GACtB,aAAa;AACjB,WAAA,KAAK,SAAS;MACZ;MACA;MACA,CAAC,OAAa,YAAoB,gBAAwB;AAErD,SAAA,SAAS,YAAY,QAAQ,SAAS,KAAK,KAC3C,SAAS,YAAY,QAAQ,iBAAiB,aAE/C,YAAY,KAAK,KAAK,GAEpB,iBAAiBA,iBACnB,cAAc,YAAY;UACxB,MAAM,YAAY,UAAU,YAAY,UAAU;QAAA,IAGxC,cAAA;MAChB;IAAA,GAEK;EACT;EAEO,SAAe;AACf,SAAA,SAAS,QAAQ,CAAC,UAAU;AAC/B,YAAM,OAAO;IAAA,CACd,GACD,MAAM,OAAO;EACf;EAEO,yBAA+B;AACpC,QAAI,OAAO;AACN,SAAA,SAAS,QAAQ,CAAC,UAAgB;AACjC,cAGY,KAAK,QAAQ,gBAAgB;QAC3C,CAAC,QAAyB,iBAAiB;MAAA,MAKzC,MAAM,QAAQ,UAAU,MAAM,cAC5B,MAAM,QAAQ,QAChB,KAAK,WAAW,KAAK,GAEnB,MAAM,QAAQ,QACX,KAAA,WAAW,MAAM,IAAI,GAE5B,MAAM,OAAO,OAAA,GACN,OAAA,QACE,iBAAiBA,eAC1B,MAAM,OAAO,IAEb,MAAM,OAAO;IACf,CACD;EACH;EAEO,SACL,OACA,QACA,MACA,OACM;AACN,SAAK,SAAS,UAAU,OAAO,QAAQ,CAAC,OAAO,QAAQ,gBAAgB;AACrE,YAAM,SAAS,QAAQ,aAAa,MAAM,KAAK;IAAA,CAChD;EACH;EAEO,SAAS,OAAe,OAAe,KAAiB;AAC7D,UAAM,CAAC,OAAO,MAAM,IAAI,KAAK,SAAS,KAAK,KAAK;AAChD,QAAI;AACI,YAAA,SAAS,QAAQ,OAAO,GAAG;SAC5B;AACL,YAAM,OACJ,OAAO,OACH,KAAK,OAAO,OAAO,QAAQ,KAAK,IAChC,KAAK,OAAO,OAAO,OAAO,GAAG;AACnC,WAAK,YAAY,IAAI;IACvB;EACF;EAEO,aAAa,WAAiB,SAA6B;AAC5D,cAAU,UAAU,QACZ,UAAA,OAAO,SAAS,OAAO,SAAS;AAE5C,QAAI,aAA0B;AAC9B,SAAK,SAAS,aAAa,WAAW,WAAW,IAAI,GACrD,UAAU,SAAS,MACf,WAAW,SACb,aAAa,QAAQ,WAGrB,KAAK,QAAQ,eAAe,UAAU,WACtC,KAAK,QAAQ,gBAAgB,eAE7B,KAAK,QAAQ,aAAa,UAAU,SAAS,UAAU,GAEzD,UAAU,OAAO;EACnB;EAEO,SAAiB;AACtB,WAAO,KAAK,SAAS,OAAO,CAAC,MAAM,UAC1B,OAAO,MAAM,OAAA,GACnB,CAAC;EACN;EAEO,aAAa,cAAsB,SAA6B;AAChE,SAAA,SAAS,QAAQ,CAAC,UAAU;AAClB,mBAAA,aAAa,OAAO,OAAO;IAAA,CACzC;EACH;EAEO,SAAS,SAAwC;AAMlD,QALJ,MAAM,SAAS,OAAO,GACtB,KAAK,uBAAuB,GACxB,KAAK,UAAU,QAAQ,KAAK,WAAW,KAAK,QAAQ,cACtD,KAAK,QAAQ,aAAa,KAAK,QAAQ,KAAK,QAAQ,UAAU,GAE5D,KAAK,SAAS,WAAW;AACvB,UAAA,KAAK,QAAQ,gBAAgB,MAAM;AACrC,cAAM,QAAQ,KAAK,OAAO,OAAO,KAAK,QAAQ,aAAa,QAAQ;AACnE,aAAK,YAAY,KAAK;MAAA;AAItB,aAAK,OAAO;EAGlB;EAEO,KAAK,OAAe,YAAY,OAAyB;AACxD,UAAA,CAAC,OAAO,MAAM,IAAI,KAAK,SAAS,KAAK,OAAO,SAAS,GACrD,WAA6B,CAAC,CAAC,MAAM,KAAK,CAAC;AACjD,WAAI,iBAAiBA,eACZ,SAAS,OAAO,MAAM,KAAK,QAAQ,SAAS,CAAC,KAC3C,SAAS,QAClB,SAAS,KAAK,CAAC,OAAO,MAAM,CAAC,GAExB;EACT;EAEO,YAAY,OAAmB;AAC/B,SAAA,SAAS,OAAO,KAAK;EAC5B;EAEO,YAAY,MAAqB,OAAmB;AACnD,UAAA,cACJ,OAAO,QAAS,WAAW,KAAK,OAAO,OAAO,MAAM,KAAK,IAAI;AAC/D,WAAI,uBAAuBA,gBACzB,KAAK,aAAa,WAAW,GAExB,MAAM,YAAY,WAAW;EACtC;EAEO,MAAM,OAAe,QAAQ,OAAoB;AACtD,QAAI,CAAC,OAAO;AACV,UAAI,UAAU;AACL,eAAA;AAEL,UAAA,UAAU,KAAK,OAAA;AACjB,eAAO,KAAK;IAEhB;AACM,UAAA,QAAQ,KAAK,MAAA;AACnB,WAAI,KAAK,UACP,KAAK,OAAO,aAAa,OAAO,KAAK,QAAQ,MAAS,GAEnD,KAAA,SAAS,UAAU,OAAO,KAAK,OAAA,GAAU,CAAC,OAAO,QAAQ,YAAY;AACxE,YAAM,QAAQ,MAAM,MAAM,QAAQ,KAAK;AACnC,eAAS,QACX,MAAM,YAAY,KAAK;IACzB,CACD,GACM;EACT;EAEO,WAAW,OAAqB;AAC/B,UAAA,QAAQ,KAAK,MAAA;AACZ,WAAA,MAAM,QAAQ;AACb,YAAA,YAAY,MAAM,IAAI;AAE9B,WAAI,KAAK,UACP,KAAK,OAAO,aAAa,OAAO,KAAK,QAAQ,MAAS,GAEjD;EACT;EAEO,SAAe;AAChB,SAAK,UACP,KAAK,aAAa,KAAK,QAAQ,KAAK,QAAQ,MAAS,GAEvD,KAAK,OAAO;EACd;EAEO,OACL,WACA,UACM;AACN,UAAM,aAAqB,CAAA,GACrB,eAAuB,CAAA;AACnB,cAAA,QAAQ,CAAC,aAAa;AAC1B,eAAS,WAAW,KAAK,WAAW,SAAS,SAAS,gBAC7C,WAAA,KAAK,GAAG,SAAS,UAAU,GACzB,aAAA,KAAK,GAAG,SAAS,YAAY;IAC5C,CACD,GACY,aAAA,QAAQ,CAAC,SAAe;AAInC,UACE,KAAK,cAAc;MAEnB,KAAK,YAAY,YACjB,SAAS,KAAK,wBAAwB,IAAI,IACxC,KAAK;AAEP;AAEF,YAAM,OAAO,KAAK,OAAO,KAAK,IAAI;AAC9B,cAAQ,SAIV,KAAK,QAAQ,cAAc,QAC3B,KAAK,QAAQ,eAAe,KAAK,YAEjC,KAAK,OAAO;IACd,CACD,GAEE,WAAA,OAAO,CAAC,SACA,KAAK,eAAe,KAAK,WAAW,SAAS,KAAK,MAC1D,EACA,KAAK,CAAC,GAAG,MACJ,MAAM,IACD,IAEL,EAAE,wBAAwB,CAAC,IAAI,KAAK,8BAC/B,IAEF,EACR,EACA,QAAQ,CAAC,SAAS;AACjB,UAAI,UAAuB;AACvB,WAAK,eAAe,SACtB,UAAU,KAAK,OAAO,KAAK,KAAK,WAAW;AAE7C,YAAM,OAAO,iBAAiB,MAAM,KAAK,MAAM;AAC/C,OAAI,KAAK,SAAS,WAAW,KAAK,QAAQ,UACpC,KAAK,UAAU,QACZ,KAAA,OAAO,YAAY,IAAI,GAEzB,KAAA,aAAa,MAAM,WAAW,MAAS;IAC9C,CACD,GACH,KAAK,uBAAuB;EAC9B;AACF;AA3WE,YAAc,UAAU;AAV1B,IAAM,aAAN;AAuXA,IAAA,eAAe;ACjYf,SAAS,QACP,MACA,MACS;AACL,MAAA,OAAO,KAAK,IAAI,EAAE,WAAW,OAAO,KAAK,IAAI,EAAE;AAC1C,WAAA;AAET,aAAW,QAAQ;AACjB,QAAI,KAAK,IAAI,MAAM,KAAK,IAAI;AACnB,aAAA;AAGJ,SAAA;AACT;AAEA,IAAM,cAAN,MAAMC,qBAAmBC,aAAkC;EAMzD,OAAO,OAAO,OAAiB;AACtB,WAAA,MAAM,OAAO,KAAK;EAC3B;EAEA,OAAc,QAAQ,SAAsB,QAAmB;AAC7D,UAAMP,SAAQ,OAAO,MAAMM,aAAW,QAAQ;AAC9C,QACE,EAAAN,UAAS,QACT,QAAQ,YAAaA,OAA0B,UAGtC;AAAA,UAAA,OAAO,KAAK,WAAY;AAC1B,eAAA;AACE,UAAA,MAAM,QAAQ,KAAK,OAAO;AAC5B,eAAA,QAAQ,QAAQ,YAAA;;EAG3B;EAIA,YAAY,QAAc,SAAe;AACvC,UAAM,QAAQ,OAAO,GACrB,KAAK,aAAa,IAAIQ,kBAAgB,KAAK,OAAO;EACpD;EAEO,OAAO,MAAc,OAAkB;AAC5C,QAAI,SAAS,KAAK,QAAQ,YAAY,CAAC;AAChC,WAAA,SAAS,QAAQ,CAAC,UAAU;AACzB,yBAAiBF,iBACrB,QAAQ,MAAM,KAAKA,aAAW,UAAU,IAAI,IAEzC,KAAA,WAAW,KAAK,KAAmB;MAAA,CACzC,GACD,KAAK,OAAO;SACP;AACL,YAAM,SAAS,KAAK,OAAO,MAAM,MAAM,MAAM,MAAM;AACnD,UAAI,UAAU;AACZ;AAEE,wBAAkB,aACf,KAAA,WAAW,UAAU,QAAQ,KAAK,IAEvC,UACC,SAAS,KAAK,QAAQ,YAAY,KAAK,QAAQ,EAAE,IAAI,MAAM,UAEvD,KAAA,YAAY,MAAM,KAAK;IAEhC;EACF;EAEO,UAAoC;AACnC,UAAA,UAAU,KAAK,WAAW,OAAO,GACjC,SAAS,KAAK,QAAQ,QAAQ,KAAK,SAAS,KAAK,MAAM;AAC7D,WAAI,UAAU,SACJ,QAAA,KAAK,QAAQ,QAAQ,IAAI,SAE5B;EACT;EAEO,SACL,OACA,QACA,MACA,OACM;AAEJ,SAAK,QAAA,EAAU,IAAI,KAAK,QACxB,KAAK,OAAO,MAAM,MAAM,MAAM,SAAS,IAE1B,KAAK,QAAQ,OAAO,MAAM,EAClC,OAAO,MAAM,KAAK,IAEvB,MAAM,SAAS,OAAO,QAAQ,MAAM,KAAK;EAE7C;EAEO,SAAS,SAAuC;AACrD,UAAM,SAAS,OAAO;AAChB,UAAA,UAAU,KAAK,QAAA;AACrB,QAAI,OAAO,KAAK,OAAO,EAAE,WAAW;AAClC,aAAO,KAAK,OAAA;AAEd,UAAM,OAAO,KAAK;AAEhB,oBAAgBA,gBAChB,KAAK,SAAS,QACd,QAAQ,SAAS,KAAK,QAAQ,CAAC,MAE/B,KAAK,aAAa,IAAI,GACtB,KAAK,OAAO;EAEhB;EAEO,YAAY,MAAqB,OAAmB;AACzD,UAAM,cAAc,MAAM,YAAY,MAAM,KAAK;AAC5C,WAAA,KAAA,WAAW,KAAK,WAAW,GACzB;EACT;EAEO,OACL,WACA,SACM;AACA,UAAA,OAAO,WAAW,OAAO,GACN,UAAU;MACjC,CAAC,aACC,SAAS,WAAW,KAAK,WAAW,SAAS,SAAS;IAAA,KAGxD,KAAK,WAAW,MAAA;EAEpB;EAEO,KAAK,MAAuB,OAAqB;AACtD,UAAM,UAAU,MAAM,KAAK,MAAM,KAAK;AACtC,WAAI,mBAAmBA,gBAChB,KAAA,WAAW,KAAK,OAAO,GAEvB;EACT;AACF;AA9HgB,YAAA,kBAAqC,CAAC,aAAYG,UAAQ,GACxE,YAAc,WAAW,UACzB,YAAc,QAAQ,MAAM,aAC5B,YAAc,UAA6B;AAJ7C,IAAM,aAAN;AAiIA,IAAA,eAAe;AAAf,ICjJM,aAAN,MAAMC,oBAAkBH,aAAkC;EAUxD,OAAO,OAAO,OAAiB;AACtB,WAAA,MAAM,OAAO,KAAK;EAC3B;EAEA,OAAc,QAAQ,SAAsB,QAAmB;AAC7D,UAAMP,SAAQ,OAAO,MAAMU,YAAU,QAAQ;AAC7C,QACE,EAAAV,UAAS,QACT,QAAQ,YAAaA,OAA0B,UAGtC;AAAA,UAAA,OAAO,KAAK,WAAY;AAC1B,eAAA;AACE,UAAA,MAAM,QAAQ,KAAK,OAAO;AAC5B,eAAA,QAAQ,QAAQ,YAAA;;EAE3B;EAIA,YAAY,QAAc,SAAe;AACvC,UAAM,QAAQ,OAAO,GACrB,KAAK,aAAa,IAAIQ,kBAAgB,KAAK,OAAO;EACpD;EAEO,OAAO,MAAc,OAAkB;AAC5C,UAAM,SAAS,KAAK,OAAO,MAAM,MAAM,MAAM,KAAK;AAC9C,cAAU,SAEH,kBAAkB,aACtB,KAAA,WAAW,UAAU,QAAQ,KAAK,IAC9B,SAAS,KAAK,QAAQ,YAAY,CAAC,QACvC,KAAA,YAAYE,YAAU,QAAQ,IAEnC,UACC,SAAS,KAAK,QAAQ,YAAY,KAAK,QAAQ,EAAE,IAAI,MAAM,UAEvD,KAAA,YAAY,MAAM,KAAK;EAEhC;EAEO,UAAoC;AACnC,UAAA,UAAU,KAAK,WAAW,OAAO,GACjC,SAAS,KAAK,QAAQ,QAAQ,KAAK,SAAS,KAAK,MAAM;AAC7D,WAAI,UAAU,SACJ,QAAA,KAAK,QAAQ,QAAQ,IAAI,SAE5B;EACT;EAEO,SACL,OACA,QACA,MACA,OACM;AACF,SAAK,OAAO,MAAM,MAAM,MAAM,KAAK,KAAK,OACrC,KAAA,OAAO,MAAM,KAAK,IAEvB,MAAM,SAAS,OAAO,QAAQ,MAAM,KAAK;EAE7C;EAEO,SAAS,OAAe,OAAe,KAAiB;AACzD,QAAA,OAAO,QAAQ,KAAK,OAAO,MAAM,OAAO,MAAM,MAAM,KAAK;AAErD,YAAA,SAAS,OAAO,OAAO,GAAG;SAC3B;AACC,YAAA,QAAQ,KAAK,MAAM,KAAK;AAC9B,UAAI,SAAS,MAAM;AACjB,cAAM,OAAO,KAAK,OAAO,OAAO,OAAO,GAAG;AACpC,cAAA,OAAO,aAAa,MAAM,KAAK;MAAA;AAE/B,cAAA,IAAI,MAAM,4CAA4C;IAEhE;EACF;EAEO,YAAY,MAAqB,OAAmB;AACzD,UAAM,cAAc,MAAM,YAAY,MAAM,KAAK;AAC5C,WAAA,KAAA,WAAW,KAAK,WAAW,GACzB;EACT;EAEO,OACL,WACA,SACM;AACA,UAAA,OAAO,WAAW,OAAO,GACN,UAAU;MACjC,CAAC,aACC,SAAS,WAAW,KAAK,WAAW,SAAS,SAAS;IAAA,KAGxD,KAAK,WAAW,MAAA;EAEpB;AACF;AA1GE,WAAc,WAAW,SACzB,WAAc,QAAQ,MAAM,YAC5B,WAAc,UAA6B,KAC3C,WAAc,kBAAqC;EACjDC;EACA;EACAF;AAAA;AAPJ,IAAM,YAAN;AA6GA,IAAA,cAAe;AAAf,ICtHM,iBAAN,MAAMG,wBAAsBL,aAAW;EAQ9B,aAAsB;AAEzB,WAAA,KAAK,SAAS,QAAQ,KAAK,KAAK,QAAQ,aAAa,KAAK,QAAQ;EAEtE;EAEO,SAAS,OAAe,QAAsB;AAC7C,UAAA,SAAS,OAAO,MAAM,GAC5B,KAAK,uBAAuB;EAC9B;EAEO,SACL,OACA,QACA,MACA,OACM;AACN,UAAM,SAAS,OAAO,QAAQ,MAAM,KAAK,GACzC,KAAK,uBAAuB;EAC9B;EAEO,SAAS,OAAe,OAAe,KAAiB;AACvD,UAAA,SAAS,OAAO,OAAO,GAAG,GAChC,KAAK,uBAAuB;EAC9B;EAEO,SAAS,SAAuC;AACrD,UAAM,SAAS,OAAO,GAClB,KAAK,SAAS,SAAS,KAAK,KAAK,QAAQ,QAAQ,KAAK,WAAA,MACnD,KAAA,KAAK,aAAa,IAAI,GAC3B,KAAK,KAAK,OAAA;EAEd;AACF;AAxCE,eAAc,WAAW,aACzB,eAAc,QAAQ,MAAM;AAF9B,IAAM,gBAAN;AA2CA,IAAA,kBAAe;AC5Cf,IAAM,YAAN,cAAwBE,WAAgC;EACtD,OAAc,QAAQ,UAAuB,SAAoB;EAEjE;EAEO,OAAO,MAAc,OAAkB;AAI5C,UAAM,SAAS,GAAG,KAAK,OAAA,GAAU,MAAM,KAAK;EAC9C;EAEO,SACL,OACA,QACA,MACA,OACM;AACF,cAAU,KAAK,WAAW,KAAK,OAAA,IAC5B,KAAA,OAAO,MAAM,KAAK,IAEvB,MAAM,SAAS,OAAO,QAAQ,MAAM,KAAK;EAE7C;EAEO,UAAoC;AACzC,WAAO,KAAK,QAAQ,QAAQ,KAAK,SAAS,KAAK,MAAM;EACvD;AACF;AAEA,IAAA,cAAe;AAAf,IC1BM,kBAAkB;EACtB,YAAY;EACZ,eAAe;EACf,uBAAuB;EACvB,WAAW;EACX,SAAS;AACX;ADoBA,IClBM,0BAA0B;ADkBhC,IChBM,cAAN,MAAMI,qBAAmBN,aAA2B;EASlD,YACS,UACP,MACA;AAEA,UAAM,MAAM,IAAI,GAJT,KAAA,WAAA,UAKP,KAAK,SAAS,MACd,KAAK,MAAM,GACX,KAAK,WAAW,IAAI,iBAAiB,CAAC,cAAgC;AACpE,WAAK,OAAO,SAAS;IAAA,CACtB,GACD,KAAK,SAAS,QAAQ,KAAK,SAAS,eAAe,GACnD,KAAK,OAAO;EACd;EAEO,OAAO,OAA8B,OAAmB;AAC7D,WAAO,KAAK,SAAS,OAAO,MAAM,OAAO,KAAK;EAChD;EAEO,KAAK,MAAmB,SAAS,OAAoB;AAC1D,UAAM,OAAO,KAAK,SAAS,KAAK,MAAM,MAAM;AAC5C,WAAK,OAGD,KAAK,WAAW,OACX,OAEF,SAAS,KAAK,KAAK,KAAK,OAAO,QAAQ,YAAY,IAAI,IAAI,OALzD;EAMX;EAEO,MACL,OACA,QAAe,MAAM,KACM;AAC3B,WAAO,KAAK,SAAS,MAAM,OAAO,KAAK;EACzC;EAEO,YAAY,aAAmC;AACpD,WAAO,KAAK,SAAS,SAAS,GAAG,WAAW;EAC9C;EAEO,QAAc;AACf,SAAK,UAAU,QAGnB,MAAM,MAAM;EACd;EAEO,SAAe;AACpB,UAAM,OAAO,GACb,KAAK,SAAS,WAAA;EAChB;EAEO,SAAS,OAAe,QAAsB;AACnD,SAAK,OAAO,GACR,UAAU,KAAK,WAAW,KAAK,OAAA,IAC5B,KAAA,SAAS,QAAQ,CAAC,UAAU;AAC/B,YAAM,OAAO;IAAA,CACd,IAEK,MAAA,SAAS,OAAO,MAAM;EAEhC;EAEO,SACL,OACA,QACA,MACA,OACM;AACN,SAAK,OAAO,GACZ,MAAM,SAAS,OAAO,QAAQ,MAAM,KAAK;EAC3C;EAEO,SAAS,OAAe,OAAe,KAAiB;AAC7D,SAAK,OAAO,GACN,MAAA,SAAS,OAAO,OAAO,GAAG;EAClC;EAOO,SAAS,YAAiB,CAAA,GAAI,UAAe,CAAA,GAAU;AAC5D,UAAM,SAAS,OAAO;AACtB,UAAM,eAAe,QAAQ,gBAAgB,oBAAI,QAAQ;AAEzD,QAAI,UAAU,MAAM,KAAK,KAAK,SAAS,YAAA,CAAa;AAG7C,WAAA,QAAQ,SAAS;AACZ,gBAAA,KAAK,QAAQ,IAAK,CAAA;AAE9B,UAAM,OAAO,CAAC,MAAmB,aAAa,SAAe;AACvD,cAAQ,QAAQ,SAAS,QAGzB,KAAK,QAAQ,cAAc,SAG1B,aAAa,IAAI,KAAK,OAAO,KAChC,aAAa,IAAI,KAAK,SAAS,CAAE,CAAA,GAE/B,cACF,KAAK,KAAK,MAAM;IAClB,GAEI,WAAW,CAAC,SAAqB;AAEhC,mBAAa,IAAI,KAAK,OAAO,MAG9B,gBAAgBA,gBACb,KAAA,SAAS,QAAQ,QAAQ,GAEnB,aAAA,OAAO,KAAK,OAAO,GAChC,KAAK,SAAS,OAAO;IAAA;AAEvB,QAAI,YAAY;AAChB,aAAS,IAAI,GAAG,UAAU,SAAS,GAAG,KAAK,GAAG;AAC5C,UAAI,KAAK;AACD,cAAA,IAAI,MAAM,iDAAiD;AA4B5D,WA1BG,UAAA,QAAQ,CAAC,aAA6B;AAC9C,cAAM,OAAO,KAAK,KAAK,SAAS,QAAQ,IAAI;AACxC,gBAAQ,SAGR,KAAK,YAAY,SAAS,WACxB,SAAS,SAAS,eACpB,KAAK,KAAK,KAAK,SAAS,iBAAiB,KAAK,CAAC,GAC/C,MAAM,KAAK,SAAS,UAAU,EAAE,QAAQ,CAAC,SAAe;AACtD,gBAAM,QAAQ,KAAK,KAAK,MAAM,KAAK;AACnC,eAAK,OAAO,KAAK,GACb,iBAAiBA,gBACb,MAAA,SAAS,QAAQ,CAAC,eAAqB;AAC3C,iBAAK,YAAY,KAAK;UAAA,CACvB;QACH,CACD,KACQ,SAAS,SAAS,gBAC3B,KAAK,KAAK,IAAI,IAGlB,KAAK,IAAI;MAAA,CACV,GACI,KAAA,SAAS,QAAQ,QAAQ,GAC9B,YAAY,MAAM,KAAK,KAAK,SAAS,YAAA,CAAa,GAClD,UAAU,UAAU,MAAA,GACb,QAAQ,SAAS;AACZ,kBAAA,KAAK,QAAQ,IAAK,CAAA;IAEhC;EACF;EAEO,OACL,WACA,UAAkC,CAAA,GAC5B;AACM,gBAAA,aAAa,KAAK,SAAS,YAAY;AAC7C,UAAA,eAAA,oBAAmB,QAAA;AAEtB,cAAA,IAAI,CAAC,aAA6B;AACjC,YAAM,OAAO,KAAK,KAAK,SAAS,QAAQ,IAAI;AAC5C,aAAI,QAAQ,OACH,OAEL,aAAa,IAAI,KAAK,OAAO,KAC/B,aAAa,IAAI,KAAK,OAAO,EAAE,KAAK,QAAQ,GACrC,SAEP,aAAa,IAAI,KAAK,SAAS,CAAC,QAAQ,CAAC,GAClC;IACT,CACD,EACA,QAAQ,CAAC,SAAsB;AAC1B,cAAQ,QAAQ,SAAS,QAAQ,aAAa,IAAI,KAAK,OAAO,KAC3D,KAAA,OAAO,aAAa,IAAI,KAAK,OAAO,KAAK,CAAA,GAAI,OAAO;IAC3D,CACD,GACH,QAAQ,eAAe,cACnB,aAAa,IAAI,KAAK,OAAO,KAC/B,MAAM,OAAO,aAAa,IAAI,KAAK,OAAO,GAAG,OAAO,GAEjD,KAAA,SAAS,WAAW,OAAO;EAClC;AACF;AAnME,YAAc,WAAW,UACzB,YAAc,eAAeO,aACf,YAAA,kBAAqC,CAACA,aAAWC,eAAa,GAC5E,YAAc,QAAQ,MAAM,YAC5B,YAAc,UAAU;AAL1B,IAAM,aAAN;AAsMA,IAAA,eAAe;AAAf,ICnNM,YAAN,MAAMC,mBAAiBP,WAAyB;EAI9C,OAAc,OAAO,OAAqB;AACjC,WAAA,SAAS,eAAe,KAAK;EACtC;EAEA,OAAc,MAAM,SAAuB;AACzC,WAAO,QAAQ;EACjB;EAKA,YAAY,QAAc,MAAY;AACpC,UAAM,QAAQ,IAAI,GAClB,KAAK,OAAO,KAAK,QAAQ,MAAM,KAAK,OAAO;EAC7C;EAEO,SAAS,OAAe,QAAsB;AACnD,SAAK,QAAQ,OAAO,KAAK,OACvB,KAAK,KAAK,MAAM,GAAG,KAAK,IAAI,KAAK,KAAK,MAAM,QAAQ,MAAM;EAC9D;EAEO,MAAM,MAAY,QAAwB;AAC3C,WAAA,KAAK,YAAY,OACZ,SAEF;EACT;EAEO,SAAS,OAAe,OAAe,KAAiB;AACzD,WAAO,QACJ,KAAA,OAAO,KAAK,KAAK,MAAM,GAAG,KAAK,IAAI,QAAQ,KAAK,KAAK,MAAM,KAAK,GAChE,KAAA,QAAQ,OAAO,KAAK,QAEnB,MAAA,SAAS,OAAO,OAAO,GAAG;EAEpC;EAEO,SAAiB;AACtB,WAAO,KAAK,KAAK;EACnB;EAEO,SAAS,SAAuC;AACrD,UAAM,SAAS,OAAO,GACtB,KAAK,OAAO,KAAK,QAAQ,MAAM,KAAK,OAAO,GACvC,KAAK,KAAK,WAAW,IACvB,KAAK,OAAO,IACH,KAAK,gBAAgBO,cAAY,KAAK,KAAK,SAAS,SAC7D,KAAK,SAAS,KAAK,OAAA,GAAW,KAAK,KAAkB,MAAA,CAAO,GAC5D,KAAK,KAAK,OAAA;EAEd;EAEO,SAAS,OAAe,aAAa,OAAuB;AAC1D,WAAA,CAAC,KAAK,SAAS,KAAK;EAC7B;EAEO,MAAM,OAAe,QAAQ,OAAoB;AACtD,QAAI,CAAC,OAAO;AACV,UAAI,UAAU;AACL,eAAA;AAEL,UAAA,UAAU,KAAK,OAAA;AACjB,eAAO,KAAK;IAEhB;AACM,UAAA,QAAQ,KAAK,OAAO,OAAO,KAAK,QAAQ,UAAU,KAAK,CAAC;AAC9D,WAAA,KAAK,OAAO,aAAa,OAAO,KAAK,QAAQ,MAAS,GACtD,KAAK,OAAO,KAAK,QAAQ,MAAM,KAAK,OAAO,GACpC;EACT;EAEO,OACL,WACA,UACM;AAEJ,cAAU,KAAK,CAAC,aAEZ,SAAS,SAAS,mBAAmB,SAAS,WAAW,KAAK,OAEjE,MAED,KAAK,OAAO,KAAK,QAAQ,MAAM,KAAK,OAAO;EAE/C;EAEO,QAAgB;AACrB,WAAO,KAAK;EACd;AACF;AA5FE,UAAuB,WAAW,QAClC,UAAc,QAAQ,MAAM;AAF9B,IAAM,WAAN;AA+FA,IAAA,aAAe;;;AChGf,IAAAC,sBAAkB;;;ACAlB,IAAAC,sBAAwC;;;ACKxC,yBAAkB;;;ACNlB,IAAMC,QAAN,cAAoBC,YAAU;EAC5B,OAAOC,QAAQ;AACb,WAAOC;EACT;EAEAC,WAAW;AACT,QAAI,KAAKC,QAAQ,KAAKC,MAAM;AAC1B,WAAKC,OAAO;IACd;EACF;EAEAC,SAAS;AACP,WAAO;EACT;EAEAN,QAAQ;AACN,WAAO;EACT;AACF;AACAF,MAAMS,WAAW;AACjBT,MAAMU,UAAU;AAEhB,IAAA,gBAAeV;;;ACtBf,IAAMW,QAAN,cAAmBC,WAAS;AAAA;AAE5B,SAASC,WAAWC,MAAc;AAChC,SAAOA,KAAKC,QAAQ,YAAaC,OAAM;AAErC,UAAMC,YAAoC;MACxC,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;IACP;AACA,WAAOA,UAAUD,CAAC;EACpB,CAAC;AACH;;;ACXA,IAAME,UAAN,MAAMA,gBAAeC,aAAW;EAe9B,OAAOC,QAAQC,OAAcC,OAAe;AAC1C,UAAMC,YAAYL,QAAOM,MAAMC,QAAQJ,KAAI;AAC3C,UAAMK,aAAaR,QAAOM,MAAMC,QAAQH,KAAK;AAC7C,QAAIC,aAAa,KAAKG,cAAc,GAAG;AACrC,aAAOH,YAAYG;IACrB;AACA,QAAIL,UAASC,OAAO;AAClB,aAAO;IACT;AACA,QAAID,QAAOC,OAAO;AAChB,aAAO;IACT;AACA,WAAO;EACT;EAEAK,SAASC,OAAeC,QAAgBC,MAAcC,OAAgB;AACpE,QACEb,QAAOE,QAAQ,KAAKY,QAAQC,UAAUH,IAAI,IAAI,KAC9C,KAAKI,OAAOC,MAAML,MAAMM,MAAMC,IAAI,GAClC;AACA,YAAMC,OAAO,KAAKC,QAAQX,OAAOC,MAAM;AACvC,UAAIE,OAAO;AACTO,aAAKE,KAAKV,MAAMC,KAAK;MACvB;IACF,OAAO;AACL,YAAMJ,SAASC,OAAOC,QAAQC,MAAMC,KAAK;IAC3C;EACF;EAEAU,SAASC,SAAiC;AACxC,UAAMD,SAASC,OAAO;AACtB,QACE,KAAKC,kBAAkBzB,WACvBA,QAAOE,QAAQ,KAAKY,QAAQC,UAAU,KAAKU,OAAOX,QAAQC,QAAQ,IAAI,GACtE;AACA,YAAMU,SAAS,KAAKA,OAAOJ,QAAQ,KAAKK,OAAO,GAAG,KAAKf,OAAO,CAAC;AAE/D,WAAKgB,aAAaF,MAAM;AACxBA,aAAOH,KAAK,IAAI;IAClB;EACF;AACF;AAvDE,cADItB,SACG4B,mBAAqC,CAAC5B,SAAQ6B,eAAOC,aAAWC,KAAI;;AAE3E,cAHI/B,SAGGM,SAAQ;EACb;EACA;;EACA;;EACA;EACA;EACA;EACA;EACA;EACA;;AAAQ;AAZZ,IAAMN,SAAN;AA0DA,IAAA,iBAAeA;;;AHlDf,IAAMgC,iBAAiB;AAEvB,IAAMC,QAAN,cAAoBC,YAAU;EAA9B;;AACEC,iCAAmD,CAAC;;EAEpDC,QAAe;AACb,QAAI,KAAKD,MAAMC,SAAS,MAAM;AAC5B,WAAKD,MAAMC,QAAQC,WAAW,IAAI;IACpC;AACA,WAAO,KAAKF,MAAMC;EACpB;EAEAE,SAASC,OAAeC,QAAgB;AACtC,UAAMF,SAASC,OAAOC,MAAM;AAC5B,SAAKL,QAAQ,CAAC;EAChB;EAEAM,SAASF,OAAeC,QAAgBE,MAAcC,OAAgB;AACpE,QAAIH,UAAU;AAAG;AACjB,QAAI,KAAKI,OAAOC,MAAMH,MAAMI,MAAMC,KAAK,GAAG;AACxC,UAAIR,QAAQC,WAAW,KAAKA,OAAO,GAAG;AACpC,aAAKQ,OAAON,MAAMC,KAAK;MACzB;IACF,OAAO;AACL,YAAMF,SACJF,OACAU,KAAKC,IAAIV,QAAQ,KAAKA,OAAO,IAAID,QAAQ,CAAC,GAC1CG,MACAC,KACF;IACF;AACA,SAAKR,QAAQ,CAAC;EAChB;EAEAgB,SAASZ,OAAeI,OAAeS,KAAe;AACpD,QAAIA,OAAO,MAAM;AACf,YAAMD,SAASZ,OAAOI,OAAOS,GAAG;AAChC,WAAKjB,QAAQ,CAAC;AACd;IACF;AACA,QAAIQ,MAAMH,WAAW;AAAG;AACxB,UAAMa,QAAQV,MAAMW,MAAM,IAAI;AAC9B,UAAMC,OAAOF,MAAMG,MAAM;AACzB,QAAID,KAAKf,SAAS,GAAG;AACnB,UAAID,QAAQ,KAAKC,OAAO,IAAI,KAAK,KAAKiB,SAASC,QAAQ,MAAM;AAC3D,cAAMP,SAASF,KAAKC,IAAIX,OAAO,KAAKC,OAAO,IAAI,CAAC,GAAGe,IAAI;MACzD,OAAO;AACL,aAAKE,SAASC,KAAKP,SAAS,KAAKM,SAASC,KAAKlB,OAAO,GAAGe,IAAI;MAC/D;AACA,WAAKpB,QAAQ,CAAC;IAChB;AAGA,QAAIwB,QAAqB;AACzBN,UAAMO,OAAO,CAACC,WAAWC,SAAS;AAEhCH,cAAQA,MAAML,MAAMO,WAAW,IAAI;AACnCF,YAAMR,SAAS,GAAGW,IAAI;AACtB,aAAOA,KAAKtB;IACd,GAAGD,QAAQgB,KAAKf,MAAM;EACxB;EAEAuB,aAAaC,MAAYC,KAAmB;AAC1C,UAAM;MAAEC;IAAK,IAAI,KAAKT;AACtB,UAAMM,aAAaC,MAAMC,GAAG;AAC5B,QAAIC,gBAAgBC,eAAO;AACzBD,WAAKE,OAAO;IACd;AACA,SAAKjC,QAAQ,CAAC;EAChB;EAEAK,SAAS;AACP,QAAI,KAAKL,MAAMK,UAAU,MAAM;AAC7B,WAAKL,MAAMK,SAAS,MAAMA,OAAO,IAAIR;IACvC;AACA,WAAO,KAAKG,MAAMK;EACpB;EAEA6B,aAAaC,QAAgBL,KAAmB;AAC9C,UAAMI,aAAaC,QAAQL,GAAG;AAC9B,SAAK9B,QAAQ,CAAC;EAChB;EAEAoC,SAASC,SAAiC;AACxC,UAAMD,SAASC,OAAO;AACtB,SAAKrC,QAAQ,CAAC;EAChB;EAEAsC,KAAKlC,OAAe;AAClB,WAAO,MAAMkC,KAAKlC,OAAO,IAAI;EAC/B;EAEAmC,YAAYC,OAAa;AACvB,UAAMD,YAAYC,KAAK;AACvB,SAAKxC,QAAQ,CAAC;EAChB;EAEAmB,MAAMf,OAAgE;AAAA,QAAjDqC,QAA0BC,UAAArC,SAAA,KAAAqC,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG;AAChD,QAAID,UAAUrC,UAAU,KAAKA,SAAS,KAAKC,OAAO,IAAIR,iBAAiB;AACrE,YAAM+C,QAAQ,KAAKA,MAAM;AACzB,UAAIxC,UAAU,GAAG;AACf,aAAKyC,OAAOjB,aAAagB,OAAO,IAAI;AACpC,eAAO;MACT;AACA,WAAKC,OAAOjB,aAAagB,OAAO,KAAKE,IAAI;AACzC,aAAOF;IACT;AACA,UAAME,OAAO,MAAM3B,MAAMf,OAAOqC,KAAK;AACrC,SAAKzC,QAAQ,CAAC;AACd,WAAO8C;EACT;AACF;AACAhD,MAAMiD,WAAW;AACjBjD,MAAMkD,UAAU;AAChBlD,MAAMmD,eAAejB;AACrBlC,MAAMoD,kBAAkB,CAAClB,eAAOmB,gBAAQC,aAAWC,KAAQ;AAE3D,IAAMC,aAAN,cAAyBF,YAAU;EAIjCG,SAAS;AACP,UAAMA,OAAO;AACb,SAAKC,aAAa,IAAIC,kBAAgB,KAAKC,OAAO;EACpD;EAEAzD,QAAQ;AACN,WAAO,IAAI0D,mBAAAA,QAAM,EAAEC,OAAO,KAAKpD,MAAM,GAAG;MACtC,GAAG,KAAKqD,QAAQ;MAChB,GAAG,KAAKL,WAAWM,OAAO;IAC5B,CAAC;EACH;EAEAjD,OAAON,MAAcC,OAAgB;AACnC,UAAMuD,YAAY,KAAKtD,OAAOC,MAAMH,MAAMI,MAAMqD,eAAe;AAC/D,QAAID,aAAa,MAAM;AAErB,WAAKP,WAAWO,UAAUA,WAAWvD,KAAK;IAC5C;EACF;EAEAF,SAASF,OAAeC,QAAgBE,MAAcC,OAAgB;AACpE,SAAKK,OAAON,MAAMC,KAAK;EACzB;EAEAQ,SAASZ,OAAeI,OAAeS,KAAe;AACpD,QAAIA,OAAO,MAAM;AACf,YAAMD,SAASZ,OAAOI,OAAOS,GAAG;AAChC;IACF;AACA,UAAMC,QAAQV,MAAMW,MAAM,IAAI;AAC9B,UAAMC,OAAOF,MAAM+C,IAAI;AACvB,UAAMC,SAAShD,MAAMiD,IAAKxC,UAAS;AACjC,YAAMH,QAAQ,KAAKf,OAAO2D,OAAOtE,MAAMiD,QAAQ;AAC/CvB,YAAMR,SAAS,GAAGW,IAAI;AACtB,aAAOH;IACT,CAAC;AACD,UAAMM,MAAM,KAAKX,MAAMf,KAAK;AAC5B8D,WAAOG,QAAS7C,WAAU;AACxB,WAAKqB,OAAOjB,aAAaJ,OAAOM,GAAG;IACrC,CAAC;AACD,QAAIV,MAAM;AACR,WAAKyB,OAAOjB,aAAa,KAAKnB,OAAO2D,OAAO,QAAQhD,IAAI,GAAGU,GAAG;IAChE;EACF;AACF;AACAwB,WAAWgB,QAAQ3D,MAAM4D;AAGzB,SAASrE,WAAW2B,MAAgC;AAAA,MAAf2C,SAAM9B,UAAArC,SAAA,KAAAqC,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG;AAC5C,SAAOb,KACJ4C,YAAYC,UAAQ,EACpBjD,OAAO,CAACxB,OAAO0E,SAAS;AACvB,QAAIA,KAAKtE,OAAO,MAAM,GAAG;AACvB,aAAOJ;IACT;AACA,WAAOA,MAAM2D,OAAOe,KAAKnE,MAAM,GAAGoE,cAAcD,MAAM,CAAC,GAAGH,MAAM,CAAC;EACnE,GAAG,IAAIb,mBAAAA,QAAM,CAAC,EACbC,OAAO,MAAMgB,cAAc/C,IAAI,CAAC;AACrC;AAEA,SAAS+C,cACP/C,MAGyB;AAAA,MAFzBgC,UAAgCnB,UAAArC,SAAA,KAAAqC,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG,CAAC;AAAC,MACrC8B,SAAM9B,UAAArC,SAAA,KAAAqC,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG;AAET,MAAIb,QAAQ;AAAM,WAAOgC;AACzB,MAAI,aAAahC,QAAQ,OAAOA,KAAKgC,YAAY,YAAY;AAC3DA,cAAU;MACR,GAAGA;MACH,GAAGhC,KAAKgC,QAAQ;IAClB;AACA,QAAIW,QAAQ;AAEV,aAAOX,QAAQ,YAAY;IAC7B;EACF;AACA,MACEhC,KAAKgB,UAAU,QACfhB,KAAKgB,OAAOgC,QAAQ9B,aAAa,YACjClB,KAAKgB,OAAOgC,QAAQP,UAAUzC,KAAKgD,QAAQP,OAC3C;AACA,WAAOT;EACT;AACA,SAAOe,cAAc/C,KAAKgB,QAAQgB,SAASW,MAAM;AACnD;;;AIpNA,IAAMM,UAAN,MAAMA,gBAAeC,YAAU;;EAM7B,OAAOC,QAAQ;AACb,WAAOC;EACT;EAMAC,YAAYC,QAAoBC,SAAsBC,WAAsB;AAC1E,UAAMF,QAAQC,OAAO;AACrB,SAAKC,YAAYA;AACjB,SAAKC,WAAWC,SAASC,eAAeV,QAAOW,QAAQ;AACvD,SAAKL,QAAQM,YAAY,KAAKJ,QAAQ;AACtC,SAAKK,cAAc;EACrB;EAEAC,SAAS;AAEP,QAAI,KAAKC,UAAU;AAAM,WAAKA,OAAOC,YAAY,IAAI;EACvD;EAEAC,OAAOC,MAAchB,OAAgB;AACnC,QAAI,KAAKW,gBAAgB,GAAG;AAC1B,YAAMI,OAAOC,MAAMhB,KAAK;AACxB;IACF;AAGA,QAAIiB,SAAwB;AAC5B,QAAIC,QAAQ;AACZ,WAAOD,UAAU,QAAQA,OAAOE,QAAQC,UAAUC,MAAMC,YAAY;AAClEJ,eAASD,OAAOM,OAAON,OAAOJ,MAAM;AACpCI,eAASA,OAAOJ;IAClB;AACA,QAAII,UAAU,MAAM;AAClB,WAAKN,cAAcb,QAAOW,SAASe;AAEnCP,aAAOQ,SAAS;AAChBR,aAAOS,SAASR,OAAOpB,QAAOW,SAASe,QAAQR,MAAMhB,KAAK;AAC1D,WAAKW,cAAc;IACrB;EACF;EAEAO,MAAMS,MAAYJ,QAAgB;AAChC,QAAII,SAAS,KAAKrB;AAAU,aAAO;AACnC,WAAO,MAAMY,MAAMS,MAAMJ,MAAM;EACjC;EAEAC,SAAS;AACP,WAAO,KAAKb;EACd;EAEAiB,WAA2B;AACzB,WAAO,CAAC,KAAKtB,UAAU,KAAKA,SAASuB,KAAKL,MAAM;EAClD;EAEAM,SAAS;AACP,UAAMA,OAAO;AAEb,SAAKjB,SAAS;EAChB;EAEAkB,UAAoC;AAClC,QAAI,KAAK1B,UAAU2B,aAAa,KAAKnB,UAAU;AAAM,aAAO;AAC5D,UAAMoB,QAAQ,KAAK5B,UAAU6B,eAAe;AAG5C,WACE,KAAK9B,QAAQ+B,aAAa,QAC1B,KAAK/B,QAAQ+B,cAAc,KAAK7B,UAChC;AAEA,WAAKF,QAAQgC,WAAWC,aACtB,KAAKjC,QAAQ+B,WACb,KAAK/B,OACP;IACF;AAEA,UAAMkC,eAAe,KAAKC,gBAAgBC,QAAW,KAAKD,OAAO;AACjE,UAAME,iBAAiBH,eAAeA,aAAad,OAAO,IAAI;AAC9D,UAAMkB,eAAe,KAAKC,gBAAgBH,QAAW,KAAKG,OAAO;AAEjE,UAAMC,WAAWF,eAAeA,aAAaG,OAAO;AACpD,UAAM;MAAEvC;IAAS,IAAI;AAErB,UAAMwC,UAAUxC,SAASuB,KAAKkB,MAAMjD,QAAOW,QAAQ,EAAEuC,KAAK,EAAE;AAC5D1C,aAASuB,OAAO/B,QAAOW;AAMvB,QAAIwC;AACJ,QAAIX,cAAc;AAChBW,uBAAiBX;AACjB,UAAIQ,WAAWJ,cAAc;AAC3BJ,qBAAaY,SAASZ,aAAad,OAAO,GAAGsB,UAAUF,QAAQ;AAC/D,YAAIF,cAAc;AAChBA,uBAAaZ,OAAO;QACtB;MACF;IACF,WAAWY,cAAc;AACvBO,uBAAiBP;AACjBA,mBAAaQ,SAAS,GAAGJ,OAAO;IAClC,OAAO;AACL,YAAMK,cAAc5C,SAASC,eAAesC,OAAO;AACnDG,uBAAiB,KAAK9C,OAAOiD,OAAOD,WAAW;AAC/C,WAAKtC,OAAOwB,aAAaY,gBAAgB,IAAI;IAC/C;AAEA,SAAKnB,OAAO;AACZ,QAAIG,OAAO;AAET,YAAMoB,cAAcA,CAAC1B,MAAYJ,WAAmB;AAClD,YAAIe,gBAAgBX,SAASW,aAAalC,SAAS;AACjD,iBAAOmB;QACT;AACA,YAAII,SAASrB,UAAU;AACrB,iBAAOmC,iBAAiBlB,SAAS;QACnC;AACA,YAAImB,gBAAgBf,SAASe,aAAatC,SAAS;AACjD,iBAAOqC,iBAAiBK,QAAQtB,SAASD;QAC3C;AACA,eAAO;MACT;AAEA,YAAM+B,QAAQD,YAAYpB,MAAMqB,MAAM3B,MAAMM,MAAMqB,MAAM/B,MAAM;AAC9D,YAAMgC,MAAMF,YAAYpB,MAAMsB,IAAI5B,MAAMM,MAAMsB,IAAIhC,MAAM;AACxD,UAAI+B,UAAU,QAAQC,QAAQ,MAAM;AAClC,eAAO;UACLC,WAAWP,eAAe7C;UAC1BqD,aAAaH;UACbI,SAAST,eAAe7C;UACxBuD,WAAWJ;QACb;MACF;IACF;AACA,WAAO;EACT;EAEAK,OAAOC,WAA6BC,SAAkC;AACpE,QACED,UAAUE,KAAMC,cAAa;AAC3B,aACEA,SAASC,SAAS,mBAAmBD,SAAS/C,WAAW,KAAKX;IAElE,CAAC,GACD;AACA,YAAM2B,QAAQ,KAAKF,QAAQ;AAC3B,UAAIE;AAAO6B,gBAAQ7B,QAAQA;IAC7B;EACF;;;;;;;;;;;EAYAR,SAASqC,SAAmB;AAE1B,UAAMrC,SAASqC,OAAO;AAEtB,QAAI;MAAEjD;IAAO,IAAI;AACjB,WAAOA,QAAQ;AACb,UAAIA,OAAOT,QAAQ8D,YAAY,KAAK;AAClC,aAAKvD,cAAcb,QAAOW,SAASe;AAEnCX,eAAOsD,QAAQ,KAAK5C,OAAOV,MAAM,GAAG,KAAKW,OAAO,CAAC,EAAE4C,OAAO;AAC1D,aAAKzD,cAAc;AACnB;MACF;AACAE,eAASA,OAAOA;IAClB;EACF;EAEAb,QAAQ;AACN,WAAO;EACT;AACF;AA5LE,cADIF,SACGuE,YAAW;AAClB,cAFIvE,SAEGwE,aAAY;AACnB,cAHIxE,SAGGoE,WAAU;AACjB,cAJIpE,SAIGW,YAAW;AAJpB,IAAMX,SAAN;AA+LA,IAAA,iBAAeA;;;ACrMf,mBAAyB;;;ACEzB,IAAA,oBAAe,oBAAIyE,QAAqB;;;ACFxC,IAAMC,SAAS,CAAC,SAAS,QAAQ,OAAO,MAAM;AAE9C,IAAIC,QAA4B;AAEhC,SAASC,MAAMC,QAAwC;AACrD,MAAIF,OAAO;AACT,QAAID,OAAOI,QAAQD,MAAM,KAAKH,OAAOI,QAAQH,KAAK,GAAG;AAAA,eAAAI,OAAAC,UAAAC,QAFnBC,OAAI,IAAAC,MAAAJ,OAAA,IAAAA,OAAA,IAAA,CAAA,GAAAK,OAAA,GAAAA,OAAAL,MAAAK,QAAA;AAAJF,aAAIE,OAAA,CAAA,IAAAJ,UAAAI,IAAA;MAAA;AAGpCC,cAAQR,MAAM,EAAE,GAAGK,IAAI;IACzB;EACF;AACF;AAEA,SAASI,UACPC,IACkD;AAClD,SAAOb,OAAOc,OACZ,CAACC,QAAQZ,WAAW;AAClBY,WAAOZ,MAAM,IAAID,MAAMc,KAAKL,SAASR,QAAQU,EAAE;AAC/C,WAAOE;EACT,GACA,CAAC,CACH;AACF;AAEAH,UAAUX,QAASgB,cAAiC;AAClDhB,UAAQgB;AACV;AACAf,MAAMD,QAAQW,UAAUX;AAExB,IAAA,iBAAeW;;;ACzBf,IAAMM,SAAQC,eAAO,cAAc;AACnC,IAAMC,SAAS,CAAC,mBAAmB,aAAa,WAAW,OAAO;AAElEA,OAAOC,QAASC,eAAc;AAC5BC,WAASC,iBAAiBF,WAAW,WAAa;AAAA,aAAAG,OAAAC,UAAAC,QAATC,OAAI,IAAAC,MAAAJ,IAAA,GAAAK,OAAA,GAAAA,OAAAL,MAAAK,QAAA;AAAJF,WAAIE,IAAA,IAAAJ,UAAAI,IAAA;IAAA;AAC3CD,UAAME,KAAKR,SAASS,iBAAiB,eAAe,CAAC,EAAEX,QAASY,UAAS;AACvE,YAAMC,QAAQC,kBAAUC,IAAIH,IAAI;AAChC,UAAIC,SAASA,MAAMG,SAAS;AAC1BH,cAAMG,QAAQC,UAAU,GAAGV,IAAI;MACjC;IACF,CAAC;EACH,CAAC;AACH,CAAC;AAED,IAAMW,UAAN,cAAsBC,aAAAA,QAAqB;EAyBzCC,cAAc;AACZ,UAAM;AACN,SAAKC,eAAe,CAAC;AACrB,SAAKC,GAAG,SAASzB,OAAM0B,KAAK;EAC9B;EAEAC,OAAkC;AAAA,aAAAC,QAAApB,UAAAC,QAA1BC,OAAI,IAAAC,MAAAiB,KAAA,GAAAC,QAAA,GAAAA,QAAAD,OAAAC,SAAA;AAAJnB,WAAImB,KAAA,IAAArB,UAAAqB,KAAA;IAAA;AACV7B,IAAAA,OAAM8B,IAAIC,KAAK/B,QAAO,GAAGU,IAAI;AAE7B,WAAO,MAAMiB,KAAK,GAAGjB,IAAI;EAC3B;EAEAU,UAAUY,OAAkC;AAAA,aAAAC,QAAAzB,UAAAC,QAAjBC,OAAI,IAAAC,MAAAsB,QAAA,IAAAA,QAAA,IAAA,CAAA,GAAAC,QAAA,GAAAA,QAAAD,OAAAC,SAAA;AAAJxB,WAAIwB,QAAA,CAAA,IAAA1B,UAAA0B,KAAA;IAAA;AAC7B,KAAC,KAAKV,aAAaQ,MAAMG,IAAI,KAAK,CAAA,GAAIhC,QAAQiC,UAAuB;AAAA,UAAtB;QAAErB;QAAMsB;MAAQ,IAACD;AAC9D,UAAIJ,MAAMM,WAAWvB,QAAQA,KAAKwB,SAASP,MAAMM,MAAc,GAAG;AAChED,gBAAQL,OAAO,GAAGtB,IAAI;MACxB;IACF,CAAC;EACH;EAEA8B,UAAUpC,WAAmBW,MAAYsB,SAAwB;AAC/D,QAAI,CAAC,KAAKb,aAAapB,SAAS,GAAG;AACjC,WAAKoB,aAAapB,SAAS,IAAI,CAAA;IACjC;AACA,SAAKoB,aAAapB,SAAS,EAAEqC,KAAK;MAAE1B;MAAMsB;IAAQ,CAAC;EACrD;AACF;AAlDE,cADIhB,SACGqB,UAAS;EACdC,eAAe;EACfC,sBAAsB;EACtBC,mBAAmB;EACnBC,qBAAqB;EACrBC,iBAAiB;EACjBC,eAAe;EACfC,qBAAqB;EACrBC,kBAAkB;EAClBC,aAAa;EACbC,0BAA0B;EAC1BC,mBAAmB;EACnBC,wBAAwB;EACxBC,iBAAiB;AACnB;AAEA,cAjBIlC,SAiBGmC,WAAU;EACfC,KAAK;EACLC,QAAQ;EACRC,MAAM;AACR;AAmCF,IAAA,kBAAetC;;;AClEf,IAAMuC,SAAQC,eAAO,iBAAiB;AAsB/B,IAAMC,QAAN,MAAY;EACjBC,YACSC,OAEP;AAAA,QADOC,SAAMC,UAAAD,SAAA,KAAAC,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG;AAAC,SADVF,QAAAA;AAAa,SACbC,SAAAA;EACN;AACL;AAEA,IAAMG,YAAN,MAAgB;EAYdL,YAAYM,QAAgBC,SAAkB;AAC5C,SAAKA,UAAUA;AACf,SAAKD,SAASA;AACd,SAAKE,YAAY;AACjB,SAAKC,YAAY;AACjB,SAAKC,OAAO,KAAKJ,OAAOK;AAExB,SAAKC,SAAS,KAAKN,OAAOO,OAAO,UAAU,IAAI;AAE/C,SAAKC,aAAa,IAAIf,MAAM,GAAG,CAAC;AAChC,SAAKgB,YAAY,KAAKD;AACtB,SAAKE,aAAa;AAClB,SAAKC,kBAAkB;AACvB,SAAKC,eAAe;AACpB,SAAKX,QAAQY,UAAU,mBAAmBC,UAAU,MAAM;AACxD,UAAI,CAAC,KAAKX,aAAa,CAAC,KAAKD,WAAW;AACtCa,mBAAW,KAAKC,OAAOC,KAAK,MAAMC,gBAAQC,QAAQC,IAAI,GAAG,CAAC;MAC5D;IACF,CAAC;AACD,SAAKnB,QAAQoB,GAAGH,gBAAQI,OAAOC,sBAAsB,MAAM;AACzD,UAAI,CAAC,KAAKC,SAAS;AAAG;AACtB,YAAMC,SAAS,KAAKC,eAAe;AACnC,UAAID,UAAU;AAAM;AACpB,UAAIA,OAAOE,MAAMC,SAAS,KAAKtB,OAAOuB;AAAU;AAChD,WAAK5B,QAAQ6B,KACXZ,gBAAQI,OAAOS,eACf,CAACC,QAAQC,cAAgC;AACvC,YAAI;AACF,cACE,KAAK7B,KAAK8B,SAAST,OAAOE,MAAMC,IAAI,KACpC,KAAKxB,KAAK8B,SAAST,OAAOU,IAAIP,IAAI,GAClC;AACA,iBAAKQ,eACHX,OAAOE,MAAMC,MACbH,OAAOE,MAAMU,QACbZ,OAAOU,IAAIP,MACXH,OAAOU,IAAIE,MACb;UACF;AACA,gBAAMC,oBAAoBL,UAAUM,KACjCC,cACCA,SAASC,SAAS,mBAClBD,SAASC,SAAS,eACjBD,SAASC,SAAS,gBACjBD,SAASE,WAAW,KAAKtC,IAC/B;AACA,eAAKY,OAAOsB,oBAAoBpB,gBAAQC,QAAQwB,SAASX,MAAM;QACjE,SAASY,SAAS;QAChB;MAEJ,CACF;IACF,CAAC;AACD,SAAK3C,QAAQoB,GAAGH,gBAAQI,OAAOuB,iBAAiB,CAACZ,WAAWa,YAAY;AACtE,UAAIA,QAAQC,OAAO;AACjB,cAAM;UAAEC;UAAWC;UAAaC;UAASC;QAAU,IAAIL,QAAQC;AAC/D,aAAKX,eAAeY,WAAWC,aAAaC,SAASC,SAAS;AAC9D,aAAKnC,OAAOE,gBAAQC,QAAQwB,MAAM;MACpC;IACF,CAAC;AACD,SAAK3B,OAAOE,gBAAQC,QAAQwB,MAAM;EACpC;EAEAhC,oBAAoB;AAClB,SAAKV,QAAQoB,GAAGH,gBAAQI,OAAO8B,0BAA0B,MAAM;AAC7D,WAAKlD,YAAY;IACnB,CAAC;AACD,SAAKD,QAAQoB,GAAGH,gBAAQI,OAAO+B,iBAAiB,MAAM;AACpD,WAAKnD,YAAY;AACjB,UAAI,KAAKI,OAAOgD,QAAQ;AACtB,cAAMP,QAAQ,KAAKzC,OAAOiD,QAAQ;AAClC,YAAI,CAACR;AAAO;AACZhC,mBAAW,MAAM;AACf,eAAKqB,eACHW,MAAMC,WACND,MAAME,aACNF,MAAMG,SACNH,MAAMI,SACR;QACF,GAAG,CAAC;MACN;IACF,CAAC;EACH;EAEAvC,iBAAiB;AACf,SAAKX,QAAQY,UAAU,aAAaC,SAAS0C,MAAM,MAAM;AACvD,WAAKrD,YAAY;IACnB,CAAC;AACD,SAAKF,QAAQY,UAAU,WAAWC,SAAS0C,MAAM,MAAM;AACrD,WAAKrD,YAAY;AACjB,WAAKa,OAAOE,gBAAQC,QAAQC,IAAI;IAClC,CAAC;EACH;EAEAqC,QAAQ;AACN,QAAI,KAAKjC,SAAS;AAAG;AACrB,SAAKpB,KAAKqD,MAAM;MAAEC,eAAe;IAAK,CAAC;AACvC,SAAKC,SAAS,KAAKnD,UAAU;EAC/B;EAEAoD,OAAOA,QAAgBC,OAAgB;AACrC,SAAK7D,OAAOgB,OAAO;AACnB,UAAM8C,cAAc,KAAKpC,eAAe;AACxC,QACEoC,eAAe,QACf,CAACA,YAAYrC,OAAOsC,aACpB,KAAK/D,OAAOgE,MAAMJ,QAAQK,MAAMC,KAAK;AAErC;AACF,QAAIJ,YAAYnC,MAAMC,SAAS,KAAKtB,OAAOuB,UAAU;AACnD,YAAMsC,OAAO,KAAKnE,OAAOoE,KAAKN,YAAYnC,MAAMC,MAAM,KAAK;AAC3D,UAAIuC,QAAQ;AAAM;AAElB,UAAIA,gBAAgBE,YAAU;AAC5B,cAAMC,QAAQH,KAAKI,MAAMT,YAAYnC,MAAMU,MAAM;AACjD8B,aAAKb,OAAOkB,aAAa,KAAKlE,QAAQgE,KAAK;MAC7C,OAAO;AAELH,aAAKK,aAAa,KAAKlE,QAAQwD,YAAYnC,MAAMC,IAAI;MACvD;AACA,WAAKtB,OAAOmE,OAAO;IACrB;AACA,SAAKnE,OAAOsD,OAAOA,QAAQC,KAAK;AAChC,SAAK7D,OAAO0E,SAAS;AACrB,SAAKtC,eAAe,KAAK9B,OAAOuB,UAAU,KAAKvB,OAAOuB,SAAS8C,KAAK/E,MAAM;AAC1E,SAAKoB,OAAO;EACd;EAEA4D,UAAUjF,OAA2B;AAAA,QAAZC,SAAMC,UAAAD,SAAA,KAAAC,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG;AAChC,UAAMgF,eAAe,KAAK7E,OAAOJ,OAAO;AACxCD,YAAQmF,KAAKC,IAAIpF,OAAOkF,eAAe,CAAC;AACxCjF,aAASkF,KAAKC,IAAIpF,QAAQC,QAAQiF,eAAe,CAAC,IAAIlF;AACtD,QAAIiC;AACJ,QAAI,CAACoD,MAAM3C,MAAM,IAAI,KAAKrC,OAAOgF,KAAKrF,KAAK;AAC3C,QAAIqF,QAAQ;AAAM,aAAO;AACzB,QAAIpF,SAAS,KAAKyC,WAAW2C,KAAKpF,OAAO,GAAG;AAC1C,YAAM,CAACqF,IAAI,IAAI,KAAKjF,OAAOgF,KAAKrF,QAAQ,CAAC;AACzC,UAAIsF,MAAM;AACR,cAAM,CAACC,IAAI,IAAI,KAAKlF,OAAOkF,KAAKvF,KAAK;AACrC,cAAM,CAACwF,QAAQ,IAAI,KAAKnF,OAAOkF,KAAKvF,QAAQ,CAAC;AAC7C,YAAIuF,SAASC,UAAU;AACrBH,iBAAOC;AACP5C,mBAAS;QACX;MACF;IACF;AACA,KAACT,MAAMS,MAAM,IAAI2C,KAAKI,SAAS/C,QAAQ,IAAI;AAC3C,UAAMU,QAAQjC,SAASuE,YAAY;AACnC,QAAIzF,SAAS,GAAG;AACdmD,YAAMuC,SAAS1D,MAAMS,MAAM;AAC3B,OAAC2C,MAAM3C,MAAM,IAAI,KAAKrC,OAAOgF,KAAKrF,QAAQC,MAAM;AAChD,UAAIoF,QAAQ;AAAM,eAAO;AACzB,OAACpD,MAAMS,MAAM,IAAI2C,KAAKI,SAAS/C,QAAQ,IAAI;AAC3CU,YAAMwC,OAAO3D,MAAMS,MAAM;AACzB,aAAOU,MAAMyC,sBAAsB;IACrC;AACA,QAAIC,OAAyB;AAC7B,QAAIC;AACJ,QAAI9D,gBAAgB+D,MAAM;AAMxB,UAAI,CAAC/D,KAAK+C,KAAK/E,QAAQ;AACrB,eAAO;MACT;AACA,UAAIyC,SAAST,KAAK+C,KAAK/E,QAAQ;AAC7BmD,cAAMuC,SAAS1D,MAAMS,MAAM;AAC3BU,cAAMwC,OAAO3D,MAAMS,SAAS,CAAC;MAC/B,OAAO;AACLU,cAAMuC,SAAS1D,MAAMS,SAAS,CAAC;AAC/BU,cAAMwC,OAAO3D,MAAMS,MAAM;AACzBoD,eAAO;MACT;AACAC,aAAO3C,MAAMyC,sBAAsB;IACrC,OAAO;AACL,UAAI,EAAER,KAAK3E,mBAAmBuF;AAAU,eAAO;AAC/CF,aAAOV,KAAK3E,QAAQmF,sBAAsB;AAC1C,UAAInD,SAAS;AAAGoD,eAAO;IACzB;AACA,WAAO;MACLI,QAAQH,KAAKI,MAAMJ,KAAKK;MACxBA,QAAQL,KAAKK;MACbC,MAAMN,KAAKD,IAAI;MACfQ,OAAOP,KAAKD,IAAI;MAChBK,KAAKJ,KAAKI;MACVI,OAAO;IACT;EACF;EAEAxE,iBAAyC;AACvC,UAAMyE,YAAYrF,SAASsF,aAAa;AACxC,QAAID,aAAa,QAAQA,UAAUE,cAAc;AAAG,aAAO;AAC3D,UAAMvC,cAAcqC,UAAUG,WAAW,CAAC;AAC1C,QAAIxC,eAAe;AAAM,aAAO;AAChC,UAAMf,QAAQ,KAAKwD,gBAAgBzC,WAAW;AAC9CvE,IAAAA,OAAMiH,KAAK,kBAAkBzD,KAAK;AAClC,WAAOA;EACT;EAEA0D,WAAoD;AAClD,UAAMrG,OAAO,KAAKJ,OAAOK;AACzB,QAAI,iBAAiBD,QAAQ,CAACA,KAAKsG,aAAa;AAG9C,aAAO,CAAC,MAAM,IAAI;IACpB;AACA,UAAMC,aAAa,KAAKjF,eAAe;AACvC,QAAIiF,cAAc;AAAM,aAAO,CAAC,MAAM,IAAI;AAC1C,UAAM5D,QAAQ,KAAK6D,kBAAkBD,UAAU;AAC/C,WAAO,CAAC5D,OAAO4D,UAAU;EAC3B;EAEAnF,WAAoB;AAClB,WACEV,SAAS+F,kBAAkB,KAAKzG,QAC/BU,SAAS+F,iBAAiB,QACzB3E,SAAS,KAAK9B,MAAMU,SAAS+F,aAAa;EAEhD;EAEAD,kBAAkB7D,OAAwB;AACxC,UAAM+D,YAA8B,CAClC,CAAC/D,MAAMpB,MAAMC,MAAMmB,MAAMpB,MAAMU,MAAM,CAAC;AAExC,QAAI,CAACU,MAAMtB,OAAOsC,WAAW;AAC3B+C,gBAAUC,KAAK,CAAChE,MAAMZ,IAAIP,MAAMmB,MAAMZ,IAAIE,MAAM,CAAC;IACnD;AACA,UAAM2E,UAAUF,UAAUG,IAAK7B,cAAa;AAC1C,YAAM,CAACxD,MAAMS,MAAM,IAAI+C;AACvB,YAAMjB,OAAO,KAAKnE,OAAOoE,KAAKxC,MAAM,IAAI;AAExC,YAAMjC,QAAQwE,KAAK9B,OAAO,KAAKrC,MAAM;AACrC,UAAIqC,WAAW,GAAG;AAChB,eAAO1C;MACT;AACA,UAAIwE,gBAAgBE,YAAU;AAC5B,eAAO1E,QAAQwE,KAAKxE,MAAMiC,MAAMS,MAAM;MACxC;AAEA,aAAO1C,QAAQwE,KAAKvE,OAAO;IAC7B,CAAC;AACD,UAAMuC,MAAM2C,KAAKC,IAAID,KAAKoC,IAAI,GAAGF,OAAO,GAAG,KAAKhH,OAAOJ,OAAO,IAAI,CAAC;AACnE,UAAM+B,QAAQmD,KAAKC,IAAI5C,KAAK,GAAG6E,OAAO;AACtC,WAAO,IAAIvH,MAAMkC,OAAOQ,MAAMR,KAAK;EACrC;EAEA4E,gBAAgBzC,aAA0B;AACxC,QACE,CAAC5B,SAAS,KAAK9B,MAAM0D,YAAYqD,cAAc,KAC9C,CAACrD,YAAYC,aAAa,CAAC7B,SAAS,KAAK9B,MAAM0D,YAAYsD,YAAY,GACxE;AACA,aAAO;IACT;AACA,UAAMrE,QAAQ;MACZpB,OAAO;QACLC,MAAMkC,YAAYqD;QAClB9E,QAAQyB,YAAYb;MACtB;MACAd,KAAK;QAAEP,MAAMkC,YAAYsD;QAAc/E,QAAQyB,YAAYX;MAAU;MACrE1B,QAAQqC;IACV;AACA,KAACf,MAAMpB,OAAOoB,MAAMZ,GAAG,EAAEkF,QAASjC,cAAa;AAC7C,UAAI;QAAExD;QAAMS;MAAO,IAAI+C;AACvB,aAAO,EAAExD,gBAAgB+D,SAAS/D,KAAK0F,WAAW1H,SAAS,GAAG;AAC5D,YAAIgC,KAAK0F,WAAW1H,SAASyC,QAAQ;AACnCT,iBAAOA,KAAK0F,WAAWjF,MAAM;AAC7BA,mBAAS;QACX,WAAWT,KAAK0F,WAAW1H,WAAWyC,QAAQ;AAE5CT,iBAAOA,KAAK2F;AACZ,cAAI3F,gBAAgB+D,MAAM;AACxBtD,qBAAST,KAAK+C,KAAK/E;UACrB,WAAWgC,KAAK0F,WAAW1H,SAAS,GAAG;AAErCyC,qBAAST,KAAK0F,WAAW1H;UAC3B,OAAO;AAELyC,qBAAST,KAAK0F,WAAW1H,SAAS;UACpC;QACF,OAAO;AACL;QACF;MACF;AACAwF,eAASxD,OAAOA;AAChBwD,eAAS/C,SAASA;IACpB,CAAC;AACD,WAAOU;EACT;EAEAyE,cAAczE,OAA0D;AACtE,UAAM8B,eAAe,KAAK7E,OAAOJ,OAAO;AAExC,UAAM6H,cAAcA,CAClB9H,OACA+H,cAC0B;AAC1B/H,cAAQmF,KAAKC,IAAIF,eAAe,GAAGlF,KAAK;AACxC,YAAM,CAACqF,MAAM2C,UAAU,IAAI,KAAK3H,OAAOgF,KAAKrF,KAAK;AACjD,aAAOqF,OAAOA,KAAKI,SAASuC,YAAYD,SAAS,IAAI,CAAC,MAAM,EAAE;IAChE;AACA,WAAO,CACL,GAAGD,YAAY1E,MAAMpD,OAAO,KAAK,GACjC,GAAG8H,YAAY1E,MAAMpD,QAAQoD,MAAMnD,QAAQ,IAAI,CAAC;EAEpD;EAEAwC,eACEY,WACAC,aAIA;AAAA,QAHAC,UAAOrD,UAAAD,SAAA,KAAAC,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAGmD;AAAS,QACnBG,YAAStD,UAAAD,SAAA,KAAAC,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAGoD;AAAW,QACvB2E,QAAK/H,UAAAD,SAAA,KAAAC,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG;AAERN,IAAAA,OAAMiH,KAAK,kBAAkBxD,WAAWC,aAAaC,SAASC,SAAS;AACvE,QACEH,aAAa,SACZ,KAAK5C,KAAKyH,cAAc,QACvB7E,UAAU6E,cAAc;IAExB3E,QAAQ2E,cAAc,OACxB;AACA;IACF;AACA,UAAM1B,YAAYrF,SAASsF,aAAa;AACxC,QAAID,aAAa;AAAM;AACvB,QAAInD,aAAa,MAAM;AACrB,UAAI,CAAC,KAAKxB,SAAS;AAAG,aAAKpB,KAAKqD,MAAM;UAAEC,eAAe;QAAK,CAAC;AAC7D,YAAM;QAAEjC;MAAO,IAAI,KAAKC,eAAe,KAAK,CAAC;AAC7C,UACED,UAAU,QACVmG,SACA5E,cAAcvB,OAAO0F,kBACrBlE,gBAAgBxB,OAAOwB,eACvBC,YAAYzB,OAAO2F,gBACnBjE,cAAc1B,OAAO0B,WACrB;AACA,YAAIH,qBAAqB4C,WAAW5C,UAAU8E,YAAY,MAAM;AAE9D7E,wBAAc8E,MAAMC,KAAKhF,UAAU6E,WAAWP,UAAU,EAAEW,QACxDjF,SACF;AACAA,sBAAYA,UAAU6E;QACxB;AACA,YAAI3E,mBAAmB0C,WAAW1C,QAAQ4E,YAAY,MAAM;AAE1D3E,sBAAY4E,MAAMC,KAAK9E,QAAQ2E,WAAWP,UAAU,EAAEW,QACpD/E,OACF;AACAA,oBAAUA,QAAQ2E;QACpB;AACA,cAAM9E,QAAQjC,SAASuE,YAAY;AAEnCtC,cAAMuC,SAAStC,WAAWC,WAAW;AAErCF,cAAMwC,OAAOrC,SAASC,SAAS;AAC/BgD,kBAAU+B,gBAAgB;AAC1B/B,kBAAUgC,SAASpF,KAAK;MAC1B;IACF,OAAO;AACLoD,gBAAU+B,gBAAgB;AAC1B,WAAK9H,KAAKgI,KAAK;IACjB;EACF;EAIAzE,SACEZ,OAGM;AAAA,QAFN6E,QAA8B/H,UAAAD,SAAA,KAAAC,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG;AAAK,QACtCmC,SAAqBnC,UAAAD,SAAA,KAAAC,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAGqB,gBAAQC,QAAQkH;AAExC,QAAI,OAAOT,UAAU,UAAU;AAC7B5F,eAAS4F;AACTA,cAAQ;IACV;AACArI,IAAAA,OAAMiH,KAAK,YAAYzD,KAAK;AAC5B,QAAIA,SAAS,MAAM;AACjB,YAAMuF,OAAO,KAAKd,cAAczE,KAAK;AACrC,WAAKX,eAAe,GAAGkG,MAAMV,KAAK;IACpC,OAAO;AACL,WAAKxF,eAAe,IAAI;IAC1B;AACA,SAAKpB,OAAOgB,MAAM;EACpB;EAEAhB,SAAqD;AAAA,QAA9CgB,SAAqBnC,UAAAD,SAAA,KAAAC,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAGqB,gBAAQC,QAAQC;AAC7C,UAAMmH,WAAW,KAAK9H;AACtB,UAAM,CAACA,WAAWqD,WAAW,IAAI,KAAK2C,SAAS;AAC/C,SAAKhG,YAAYA;AACjB,SAAKC,aAAaoD;AAClB,QAAI,KAAKrD,aAAa,MAAM;AAC1B,WAAKD,aAAa,KAAKC;IACzB;AACA,QAAI,CAAC+H,gBAAQD,UAAU,KAAK9H,SAAS,GAAG;AACtC,UACE,CAAC,KAAKP,aACN4D,eAAe,QACfA,YAAYrC,OAAOsC,aACnBD,YAAYnC,MAAMC,SAAS,KAAKtB,OAAOuB,UACvC;AACA,cAAMkB,QAAQ,KAAKzC,OAAOiD,QAAQ;AAClC,YAAIR,OAAO;AACT,eAAKX,eACHW,MAAMC,WACND,MAAME,aACNF,MAAMG,SACNH,MAAMI,SACR;QACF;MACF;AACA,YAAMmF,OAAO,CACXpH,gBAAQI,OAAOmH,kBACfC,kBAAU,KAAKjI,SAAS,GACxBiI,kBAAUH,QAAQ,GAClBvG,MAAM;AAER,WAAK/B,QAAQ0I,KAAKzH,gBAAQI,OAAOsH,eAAe,GAAGN,IAAI;AACvD,UAAItG,WAAWd,gBAAQC,QAAQwB,QAAQ;AACrC,aAAK1C,QAAQ0I,KAAK,GAAGL,IAAI;MAC3B;IACF;EACF;AACF;AAEA,SAASpG,SAASoB,QAAcuF,YAAkB;AAChD,MAAI;AAEFA,eAAWhB;EACb,SAASiB,GAAG;AACV,WAAO;EACT;AACA,SAAOxF,OAAOpB,SAAS2G,UAAU;AACnC;AAEA,IAAA,oBAAe9I;;;AV1df,IAAMgJ,QAAQ;AAOd,IAAMC,SAAN,MAAa;EAIXC,YAAYC,QAAgB;AAC1B,SAAKA,SAASA;AACd,SAAKC,QAAQ,KAAKC,SAAS;EAC7B;EAEAC,WAAWF,OAAqB;AAC9B,SAAKD,OAAOI,OAAO;AACnB,QAAIC,eAAe,KAAKL,OAAOM,OAAO;AACtC,SAAKN,OAAOO,WAAW;AACvB,UAAMC,kBAAkBC,eAAeR,KAAK;AAC5C,UAAMS,cAAc,IAAIC,oBAAAA,QAAM;AAC9B,UAAMC,gBAAgBC,aAAaL,gBAAgBM,IAAIC,MAAM,CAAC;AAC9DH,kBAAcI,OAAO,CAACC,OAAOC,OAAO;AAClC,YAAMZ,SAASa,uBAAGb,OAAOY,EAAE;AAC3B,UAAIE,aAAaF,GAAGE,cAAc,CAAC;AACnC,UAAIC,6BAA6B;AACjC,UAAIC,4BAA4B;AAChC,UAAIJ,GAAGK,UAAU,MAAM;AACrBb,oBAAYc,OAAOlB,MAAM;AACzB,YAAI,OAAOY,GAAGK,WAAW,UAAU;AACjC,gBAAME,OAAOP,GAAGK;AAChBD,sCACE,CAACG,KAAKC,SAAS,IAAI,MAClBrB,gBAAgBY,SACf,CAAC,CAAC,KAAKjB,OAAO2B,WAAWC,YAAYX,KAAK,EAAE,CAAC;AACjD,eAAKjB,OAAO6B,SAASZ,OAAOQ,IAAI;AAChC,gBAAM,CAACK,MAAMC,MAAM,IAAI,KAAK/B,OAAO8B,KAAKb,KAAK;AAC7C,cAAIe,UAAUC,cAAM,CAAC,GAAGC,cAAcJ,IAAI,CAAC;AAC3C,cAAIA,gBAAgBK,OAAO;AACzB,kBAAM,CAACC,IAAI,IAAIN,KAAKH,WAAWU,YAAUN,MAAM;AAC/C,gBAAIK,MAAM;AACRJ,wBAAUC,cAAMD,SAASE,cAAcE,IAAI,CAAC;YAC9C;UACF;AACAhB,uBAAakB,iCAAaC,KAAKP,SAASZ,UAAU,KAAK,CAAC;QAC1D,WAAW,OAAOF,GAAGK,WAAW,UAAU;AACxC,gBAAMiB,MAAMC,OAAOC,KAAKxB,GAAGK,MAAM,EAAE,CAAC;AACpC,cAAIiB,OAAO;AAAM,mBAAOvB;AACxB,gBAAM0B,gBAAgB,KAAK3C,OAAO4C,MAAMJ,KAAKK,MAAMC,MAAM,KAAK;AAC9D,cAAIH,eAAe;AACjB,gBACEtC,gBAAgBY,SAChB,CAAC,CAAC,KAAKjB,OAAO2B,WAAWC,YAAYX,KAAK,EAAE,CAAC,GAC7C;AACAK,0CAA4B;YAC9B;UACF,WAAWL,QAAQ,GAAG;AACpB,kBAAM,CAACmB,MAAML,MAAM,IAAI,KAAK/B,OAAO2B,WAAWU,YAAUpB,QAAQ,CAAC;AACjE,gBAAImB,gBAAgBW,OAAU;AAC5B,oBAAMtB,OAAOW,KAAKY,MAAM;AACxB,kBAAIvB,KAAKM,MAAM,MAAM,MAAM;AACzBV,6CAA6B;cAC/B;YACF,WACEe,gBAAgBa,eAChBb,KAAKc,QAAQC,UAAUN,MAAMO,aAC7B;AACA/B,2CAA6B;YAC/B;UACF;AACA,eAAKrB,OAAO6B,SAASZ,OAAOuB,KAAKtB,GAAGK,OAAOiB,GAAG,CAAC;AAE/C,cAAIG,eAAe;AACjB,kBAAM,CAACP,IAAI,IAAI,KAAKpC,OAAO2B,WAAWU,YAAUpB,KAAK;AACrD,gBAAImB,MAAM;AACR,oBAAMJ,UAAUC,cAAM,CAAC,GAAGC,cAAcE,IAAI,CAAC;AAC7ChB,2BAAakB,iCAAaC,KAAKP,SAASZ,UAAU,KAAK,CAAC;YAC1D;UACF;QACF;AACAf,wBAAgBC;MAClB,OAAO;AACLI,oBAAY2C,KAAKnC,EAAE;AAEnB,YAAIA,GAAGM,WAAW,QAAQ,OAAON,GAAGM,WAAW,UAAU;AACvD,gBAAMgB,MAAMC,OAAOC,KAAKxB,GAAGM,MAAM,EAAE,CAAC;AACpC,cAAIgB,OAAO;AAAM,mBAAOvB;AACxB,eAAKjB,OAAOsD,cAAcrC,OAAOuB,KAAKtB,GAAGM,OAAOgB,GAAG,CAAC;QACtD;MACF;AACAC,aAAOC,KAAKtB,UAAU,EAAEmC,QAASC,UAAS;AACxC,aAAKxD,OAAOyD,SAASxC,OAAOX,QAAQkD,MAAMpC,WAAWoC,IAAI,CAAC;MAC5D,CAAC;AACD,YAAME,kBAAkBrC,6BAA6B,IAAI;AACzD,YAAMsC,cAAcrC,4BAA4B,IAAI;AACpDjB,sBAAgBqD,kBAAkBC;AAClCjD,kBAAYc,OAAOkC,eAAe;AAClChD,kBAAYkD,OAAOD,WAAW;AAC9B,aAAO1C,QAAQX,SAASoD,kBAAkBC;IAC5C,GAAG,CAAC;AACJjD,gBAAYM,OAAO,CAACC,OAAOC,OAAO;AAChC,UAAI,OAAOA,GAAG0C,WAAW,UAAU;AACjC,aAAK5D,OAAO6D,SAAS5C,OAAOC,GAAG0C,MAAM;AACrC,eAAO3C;MACT;AACA,aAAOA,QAAQE,uBAAGb,OAAOY,EAAE;IAC7B,GAAG,CAAC;AACJ,SAAKlB,OAAO8D,SAAS;AACrB,SAAK9D,OAAO+D,SAAS;AACrB,WAAO,KAAK3D,OAAOI,eAAe;EACpC;EAEAwD,WAAW/C,OAAeX,QAAuB;AAC/C,SAAKN,OAAO6D,SAAS5C,OAAOX,MAAM;AAClC,WAAO,KAAKF,OAAO,IAAIO,oBAAAA,QAAM,EAAEa,OAAOP,KAAK,EAAE2C,OAAOtD,MAAM,CAAC;EAC7D;EAEA2D,WACEhD,OACAX,QAEO;AAAA,QADP0B,UAAgCkC,UAAA5D,SAAA,KAAA4D,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG,CAAC;AAEpC,SAAKlE,OAAOI,OAAO;AACnBqC,WAAOC,KAAKV,OAAO,EAAEuB,QAASa,YAAW;AACvC,WAAKpE,OAAOqE,MAAMpD,OAAOqD,KAAKC,IAAIjE,QAAQ,CAAC,CAAC,EAAEiD,QAASzB,UAAS;AAC9DA,aAAKsC,OAAOA,QAAQpC,QAAQoC,MAAM,CAAC;MACrC,CAAC;IACH,CAAC;AACD,SAAKpE,OAAO+D,SAAS;AACrB,UAAM9D,QAAQ,IAAIU,oBAAAA,QAAM,EAAEa,OAAOP,KAAK,EAAEO,OAAOlB,QAAQkE,kBAAUxC,OAAO,CAAC;AACzE,WAAO,KAAK5B,OAAOH,KAAK;EAC1B;EAEAwE,WACExD,OACAX,QAEO;AAAA,QADP0B,UAAgCkC,UAAA5D,SAAA,KAAA4D,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG,CAAC;AAEpCzB,WAAOC,KAAKV,OAAO,EAAEuB,QAASa,YAAW;AACvC,WAAKpE,OAAOyD,SAASxC,OAAOX,QAAQ8D,QAAQpC,QAAQoC,MAAM,CAAC;IAC7D,CAAC;AACD,UAAMnE,QAAQ,IAAIU,oBAAAA,QAAM,EAAEa,OAAOP,KAAK,EAAEO,OAAOlB,QAAQkE,kBAAUxC,OAAO,CAAC;AACzE,WAAO,KAAK5B,OAAOH,KAAK;EAC1B;EAEAyE,YAAYzD,OAAeX,QAAuB;AAChD,WAAO,KAAKL,MAAMc,MAAME,OAAOA,QAAQX,MAAM;EAC/C;EAEAJ,WAAkB;AAChB,WAAO,KAAKF,OAAOqE,MAAM,EAAErD,OAAO,CAACf,OAAO6B,SAAS;AACjD,aAAO7B,MAAM0E,OAAO7C,KAAK7B,MAAM,CAAC;IAClC,GAAG,IAAIU,oBAAAA,QAAM,CAAC;EAChB;EAEAiE,UAAU3D,OAAoD;AAAA,QAArCX,SAAM4D,UAAA5D,SAAA,KAAA4D,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG;AAChC,QAAIG,QAAgC,CAAA;AACpC,QAAIQ,SAAqB,CAAA;AACzB,QAAIvE,WAAW,GAAG;AAChB,WAAKN,OAAO8E,KAAK7D,KAAK,EAAEsC,QAASuB,UAAS;AACxC,cAAM,CAACC,IAAI,IAAID;AACf,YAAIC,gBAAgB5C,OAAO;AACzBkC,gBAAMhB,KAAK0B,IAAI;QACjB,WAAWA,gBAAgB1C,YAAU;AACnCwC,iBAAOxB,KAAK0B,IAAI;QAClB;MACF,CAAC;IACH,OAAO;AACLV,cAAQ,KAAKrE,OAAOqE,MAAMpD,OAAOX,MAAM;AACvCuE,eAAS,KAAK7E,OAAOgF,YAAY3C,YAAUpB,OAAOX,MAAM;IAC1D;AACA,UAAM,CAAC2E,aAAaC,WAAW,IAAI,CAACb,OAAOQ,MAAM,EAAEM,IAAKC,WAAU;AAChE,YAAML,OAAOK,MAAMC,MAAM;AACzB,UAAIN,QAAQ;AAAM,eAAO,CAAC;AAC1B,UAAI/C,UAAUE,cAAc6C,IAAI;AAChC,aAAOtC,OAAOC,KAAKV,OAAO,EAAE1B,SAAS,GAAG;AACtC,cAAMyE,QAAOK,MAAMC,MAAM;AACzB,YAAIN,SAAQ;AAAM,iBAAO/C;AACzBA,kBAAUsD,eAAepD,cAAc6C,KAAI,GAAG/C,OAAO;MACvD;AACA,aAAOA;IACT,CAAC;AACD,WAAO;MAAE,GAAGiD;MAAa,GAAGC;IAAY;EAC1C;EAEAK,QAAQtE,OAAeX,QAAwB;AAC7C,UAAM,CAACwB,MAAM0D,UAAU,IAAI,KAAKxF,OAAO8B,KAAKb,KAAK;AACjD,QAAIa,MAAM;AACR,YAAM2D,aAAa3D,KAAKxB,OAAO;AAC/B,YAAMoF,eAAe5D,KAAKxB,OAAO,KAAKkF,aAAalF;AACnD,UAAIoF,gBAAgB,EAAEF,eAAe,KAAKlF,WAAWmF,aAAa;AAChE,eAAOE,YAAY7D,MAAM0D,YAAYlF,QAAQ,IAAI;MACnD;AACA,aAAOqF,YAAY,KAAK3F,QAAQiB,OAAOX,QAAQ,IAAI;IACrD;AACA,WAAO;EACT;EAEAsF,QAAQ3E,OAAeX,QAAwB;AAC7C,WAAO,KAAKoE,YAAYzD,OAAOX,MAAM,EAClCuF,OAAQ3E,QAAO,OAAOA,GAAGK,WAAW,QAAQ,EAC5C4D,IAAKjE,QAAOA,GAAGK,MAAM,EACrBuE,KAAK,EAAE;EACZ;EAEAC,eAAe9E,OAAe+E,UAAwB;AACpD,UAAMxF,kBAAkBC,eAAeuF,QAAQ;AAC/C,UAAMC,SAAS,IAAItF,oBAAAA,QAAM,EAAEa,OAAOP,KAAK,EAAE0D,OAAOnE,eAAe;AAC/D,SAAKR,OAAO+F,eAAe9E,OAAOT,eAAe;AACjD,WAAO,KAAKJ,OAAO6F,MAAM;EAC3B;EAEAC,YAAYjF,OAAekF,OAAenD,OAAuB;AAC/D,SAAKhD,OAAO6B,SAASZ,OAAOkF,OAAOnD,KAAK;AACxC,WAAO,KAAK5C,OAAO,IAAIO,oBAAAA,QAAM,EAAEa,OAAOP,KAAK,EAAEM,OAAO;MAAE,CAAC4E,KAAK,GAAGnD;IAAM,CAAC,CAAC;EACzE;EAEAoD,WACEnF,OACAQ,MAEO;AAAA,QADPO,UAAgCkC,UAAA5D,SAAA,KAAA4D,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG,CAAC;AAEpCzC,WAAOA,KAAK4E,QAAQ,SAAS,IAAI,EAAEA,QAAQ,OAAO,IAAI;AACtD,SAAKrG,OAAO6B,SAASZ,OAAOQ,IAAI;AAChCgB,WAAOC,KAAKV,OAAO,EAAEuB,QAASa,YAAW;AACvC,WAAKpE,OAAOyD,SAASxC,OAAOQ,KAAKnB,QAAQ8D,QAAQpC,QAAQoC,MAAM,CAAC;IAClE,CAAC;AACD,WAAO,KAAKhE,OACV,IAAIO,oBAAAA,QAAM,EAAEa,OAAOP,KAAK,EAAEM,OAAOE,MAAM+C,kBAAUxC,OAAO,CAAC,CAC3D;EACF;EAEAsE,UAAmB;AACjB,QAAI,KAAKtG,OAAOuG,SAASjG,WAAW;AAAG,aAAO;AAC9C,QAAI,KAAKN,OAAOuG,SAASjG,SAAS;AAAG,aAAO;AAC5C,UAAMyE,OAAO,KAAK/E,OAAOuG,SAASC;AAClC,SAAIzB,6BAAM7B,QAAQuD,cAAatE,MAAMsE;AAAU,aAAO;AACtD,UAAMC,QAAQ3B;AACd,QAAI2B,MAAMH,SAASjG,SAAS;AAAG,aAAO;AACtC,WAAOoG,MAAMH,SAASC,gBAAgBG;EACxC;EAEAC,aAAa3F,OAAeX,QAAuB;AACjD,UAAMmB,OAAO,KAAKmE,QAAQ3E,OAAOX,MAAM;AACvC,UAAM,CAACwB,MAAMC,MAAM,IAAI,KAAK/B,OAAO8B,KAAKb,QAAQX,MAAM;AACtD,QAAIuG,eAAe;AACnB,QAAIC,SAAS,IAAInG,oBAAAA,QAAM;AACvB,QAAImB,QAAQ,MAAM;AAChB+E,qBAAe/E,KAAKxB,OAAO,IAAIyB;AAC/B+E,eAAShF,KACN7B,MAAM,EACNc,MAAMgB,QAAQA,SAAS8E,eAAe,CAAC,EACvCtF,OAAO,IAAI;IAChB;AACA,UAAMyE,WAAW,KAAKtB,YAAYzD,OAAOX,SAASuG,YAAY;AAC9D,UAAMtE,OAAOyD,SAASzD,KAAK,IAAI5B,oBAAAA,QAAM,EAAEY,OAAOE,IAAI,EAAEkD,OAAOmC,MAAM,CAAC;AAClE,UAAM7G,QAAQ,IAAIU,oBAAAA,QAAM,EAAEa,OAAOP,KAAK,EAAE0D,OAAOpC,IAAI;AACnD,WAAO,KAAKpC,WAAWF,KAAK;EAC9B;EAEAG,OACE6F,QAGO;AAAA,QAFPc,YAA2B7C,UAAA5D,SAAA,KAAA4D,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG,CAAA;AAAE,QAChC8C,gBAAwC9C,UAAA5D,SAAA,KAAA4D,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAGC;AAE3C,UAAM8C,WAAW,KAAKhH;AACtB,QACE8G,UAAUzG,WAAW,KACrByG,UAAU,CAAC,EAAEG,SAAS;IAEtBH,UAAU,CAAC,EAAEI,OAAOC,KAAKC,MAAMxH,KAAK,KACpC,KAAKG,OAAOsH,KAAKP,UAAU,CAAC,EAAEI,MAAM,GACpC;AAEA,YAAMI,WAAW,KAAKvH,OAAOsH,KAAKP,UAAU,CAAC,EAAEI,MAAM;AACrD,YAAMnF,UAAUE,cAAcqF,QAAQ;AACtC,YAAMtG,QAAQsG,SAASxF,OAAO,KAAK/B,MAAM;AAEzC,YAAMwH,WAAWT,UAAU,CAAC,EAAES,SAASnB,QAAQoB,eAAWC,UAAU,EAAE;AACtE,YAAMC,UAAU,IAAIhH,oBAAAA,QAAM,EAAEY,OAAOiG,QAAQ;AAE3C,YAAMI,UAAU,IAAIjH,oBAAAA,QAAM,EAAEY,OAAOgG,SAASvE,MAAM,CAAC;AACnD,YAAM6E,wBAAwBb,iBAAiB;QAC7Cc,UAAUC,WAAWf,cAAcc,UAAU,CAAC7G,KAAK;QACnD+G,UAAUD,WAAWf,cAAcgB,UAAU,CAAC/G,KAAK;MACrD;AACA,YAAMgH,YAAY,IAAItH,oBAAAA,QAAM,EACzBa,OAAOP,KAAK,EACZ0D,OAAOgD,QAAQpF,KAAKqF,SAASC,qBAAqB,CAAC;AACtD5B,eAASgC,UAAUjH,OAAO,CAACf,OAAOiB,OAAO;AACvC,YAAIA,GAAGK,QAAQ;AACb,iBAAOtB,MAAMsB,OAAOL,GAAGK,QAAQS,OAAO;QACxC;AACA,eAAO/B,MAAMoD,KAAKnC,EAAE;MACtB,GAAG,IAAIP,oBAAAA,QAAM,CAAC;AACd,WAAKV,QAAQgH,SAASiB,QAAQjC,MAAM;IACtC,OAAO;AACL,WAAKhG,QAAQ,KAAKC,SAAS;AAC3B,UAAI,CAAC+F,UAAU,CAACkC,gBAAQlB,SAASiB,QAAQjC,MAAM,GAAG,KAAKhG,KAAK,GAAG;AAC7DgG,iBAASgB,SAAS1E,KAAK,KAAKtC,OAAO+G,aAAa;MAClD;IACF;AACA,WAAOf;EACT;AACF;AASA,SAASmC,gBACPC,OACAC,YACAC,OACQ;AACR,MAAIF,MAAM/H,WAAW,GAAG;AACtB,UAAM,CAACkI,OAAM,IAAIC,YAAYF,MAAMG,IAAI,CAAC;AACxC,QAAIJ,cAAc,GAAG;AACnB,aAAQ,UAASE,OAAO;IAC1B;AACA,WAAQ,UAASA,OAAO,IAAGJ,gBAAgB,CAAA,GAAIE,aAAa,GAAGC,KAAK,CAAE;EACxE;AACA,QAAM,CAAC;IAAEI;IAAO5G;IAAQzB;IAAQsI;IAAQ1B;EAAK,GAAG,GAAG2B,IAAI,IAAIR;AAC3D,QAAM,CAACS,KAAKC,SAAS,IAAIN,YAAYvB,IAAI;AACzC,MAAI0B,SAASN,YAAY;AACvBC,UAAMlF,KAAK6D,IAAI;AACf,QAAI0B,WAAWN,aAAa,GAAG;AAC7B,aAAQ,IAAGQ,GAAI,OAAMC,SAAU,IAAGpD,YAChCgD,OACA5G,QACAzB,MACF,CAAE,GAAE8H,gBAAgBS,MAAMD,QAAQL,KAAK,CAAE;IAC3C;AACA,WAAQ,IAAGO,GAAI,QAAOV,gBAAgBC,OAAOC,aAAa,GAAGC,KAAK,CAAE;EACtE;AACA,QAAMS,eAAeT,MAAMA,MAAMjI,SAAS,CAAC;AAC3C,MAAIsI,WAAWN,cAAcpB,SAAS8B,cAAc;AAClD,WAAQ,WAAUD,SAAU,IAAGpD,YAC7BgD,OACA5G,QACAzB,MACF,CAAE,GAAE8H,gBAAgBS,MAAMD,QAAQL,KAAK,CAAE;EAC3C;AACA,QAAM,CAACC,MAAM,IAAIC,YAAYF,MAAMG,IAAI,CAAC;AACxC,SAAQ,UAASF,MAAO,IAAGJ,gBAAgBC,OAAOC,aAAa,GAAGC,KAAK,CAAE;AAC3E;AAEA,SAAS5C,YACPZ,MACA9D,OACAX,QAEQ;AAAA,MADR2I,SAAM/E,UAAA5D,SAAA,KAAA4D,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG;AAET,MAAI,UAAUa,QAAQ,OAAOA,KAAKmE,SAAS,YAAY;AACrD,WAAOnE,KAAKmE,KAAKjI,OAAOX,MAAM;EAChC;AACA,MAAIyE,gBAAgBhC,OAAU;AAC5B,WAAOoG,WAAWpE,KAAK/B,MAAM,EAAEjC,MAAME,OAAOA,QAAQX,MAAM,CAAC;EAC7D;AACA,MAAIyE,gBAAgBqE,cAAY;AAE9B,QAAIrE,KAAK7B,QAAQuD,aAAa,kBAAkB;AAC9C,YAAM4B,QAAe,CAAA;AACrBtD,WAAKwB,SAAS8C,UAAUpI,OAAOX,QAAQ,CAACqI,OAAO5G,QAAQuH,gBAAgB;AACrE,cAAMtH,UACJ,aAAa2G,SAAS,OAAOA,MAAM3G,YAAY,aAC3C2G,MAAM3G,QAAQ,IACd,CAAC;AACPqG,cAAMhF,KAAK;UACTsF;UACA5G;UACAzB,QAAQgJ;UACRV,QAAQ5G,QAAQ4G,UAAU;UAC1B1B,MAAMlF,QAAQuH;QAChB,CAAC;MACH,CAAC;AACD,aAAOnB,gBAAgBC,OAAO,IAAI,CAAA,CAAE;IACtC;AACA,UAAMmB,QAAkB,CAAA;AACxBzE,SAAKwB,SAAS8C,UAAUpI,OAAOX,QAAQ,CAACqI,OAAO5G,QAAQuH,gBAAgB;AACrEE,YAAMnG,KAAKsC,YAAYgD,OAAO5G,QAAQuH,WAAW,CAAC;IACpD,CAAC;AACD,QAAIL,UAAUlE,KAAK7B,QAAQuD,aAAa,QAAQ;AAC9C,aAAO+C,MAAM1D,KAAK,EAAE;IACtB;AACA,UAAM;MAAE2D;MAAWC;IAAU,IAAI3E,KAAK4E;AACtC,UAAM,CAACC,OAAOC,GAAG,IAAIJ,UAAUK,MAAO,IAAGJ,SAAU,GAAE;AAErD,QAAIE,UAAU,UAAU;AACtB,aAAQ,0CAAyCJ,MAAM1D,KAAK,EAAE,CAAE,IAAG+D,GAAI;IACzE;AACA,WAAQ,GAAED,KAAM,IAAGJ,MAAM1D,KAAK,EAAE,CAAE,IAAG+D,GAAI;EAC3C;AACA,SAAO9E,KAAK4E,mBAAmBI,UAAUhF,KAAK4E,QAAQF,YAAY;AACpE;AAEA,SAASnE,eACPtD,SACAgI,UACyB;AACzB,SAAOvH,OAAOC,KAAKsH,QAAQ,EAAEhJ,OAC3B,CAACiJ,QAAQzG,SAAS;AAChB,QAAIxB,QAAQwB,IAAI,KAAK;AAAM,aAAOyG;AAClC,UAAMC,gBAAgBF,SAASxG,IAAI;AACnC,QAAI0G,kBAAkBlI,QAAQwB,IAAI,GAAG;AACnCyG,aAAOzG,IAAI,IAAI0G;IACjB,WAAWC,MAAMC,QAAQF,aAAa,GAAG;AACvC,UAAIA,cAAcG,QAAQrI,QAAQwB,IAAI,CAAC,IAAI,GAAG;AAC5CyG,eAAOzG,IAAI,IAAI0G,cAAcvF,OAAO,CAAC3C,QAAQwB,IAAI,CAAC,CAAC;MACrD,OAAO;AAELyG,eAAOzG,IAAI,IAAI0G;MACjB;IACF,OAAO;AACLD,aAAOzG,IAAI,IAAI,CAAC0G,eAAelI,QAAQwB,IAAI,CAAC;IAC9C;AACA,WAAOyG;EACT,GACA,CAAC,CACH;AACF;AAEA,SAASxB,YAAYvB,MAA0B;AAC7C,QAAM4B,MAAM5B,SAAS,YAAY,OAAO;AACxC,UAAQA,MAAI;IACV,KAAK;AACH,aAAO,CAAC4B,KAAK,sBAAsB;IACrC,KAAK;AACH,aAAO,CAACA,KAAK,wBAAwB;IACvC;AACE,aAAO,CAACA,KAAK,EAAE;EACnB;AACF;AAEA,SAASrI,eAAeR,OAAc;AACpC,SAAOA,MAAMe,OAAO,CAACR,iBAAiBU,OAAO;AAC3C,QAAI,OAAOA,GAAGK,WAAW,UAAU;AACjC,YAAME,OAAOP,GAAGK,OAAO8E,QAAQ,SAAS,IAAI,EAAEA,QAAQ,OAAO,IAAI;AACjE,aAAO7F,gBAAgBe,OAAOE,MAAMP,GAAGE,UAAU;IACnD;AACA,WAAOZ,gBAAgB6C,KAAKnC,EAAE;EAChC,GAAG,IAAIP,oBAAAA,QAAM,CAAC;AAChB;AAEA,SAASoH,WAAUuC,MAA2BC,QAAgB;AAAA,MAA1C;IAAEtJ;IAAOX;EAAc,IAACgK;AAC1C,SAAO,IAAIE,MAAMvJ,QAAQsJ,QAAQjK,MAAM;AACzC;AAEA,SAASO,aAAaC,KAAW;AAC/B,QAAMgJ,QAAc,CAAA;AACpBhJ,MAAIyC,QAASrC,QAAO;AAClB,QAAI,OAAOA,GAAGK,WAAW,UAAU;AACjC,YAAM8C,QAAQnD,GAAGK,OAAOuI,MAAM,IAAI;AAClCzF,YAAMd,QAAQ,CAACzB,MAAMb,UAAU;AAC7B,YAAIA;AAAO6I,gBAAMzG,KAAK;YAAE9B,QAAQ;YAAMH,YAAYF,GAAGE;UAAW,CAAC;AACjE,YAAIU;AAAMgI,gBAAMzG,KAAK;YAAE9B,QAAQO;YAAMV,YAAYF,GAAGE;UAAW,CAAC;MAClE,CAAC;IACH,OAAO;AACL0I,YAAMzG,KAAKnC,EAAE;IACf;EACF,CAAC;AAED,SAAO4I;AACT;AAEA,IAAA,iBAAehK;;;AW9df,IAAe2K,SAAf,MAAyC;EAGvCC,YACSC,OAEP;AAAA,QADUC,UAAmBC,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG,CAAC;AAAC,SAD3BF,QAAAA;AAAY,SACTC,UAAAA;EACT;AACL;AANE,cADaH,QACNO,YAAW,CAAC;AAQrB,IAAA,iBAAeP;;;ACPf,IAAMQ,aAAa;AASnB,IAAMC,QAAN,cAAoBC,YAAU;EAK5BC,YAAYC,QAAoBC,MAAY;AAC1C,UAAMD,QAAQC,IAAI;AAClB,SAAKC,cAAcC,SAASC,cAAc,MAAM;AAChD,SAAKF,YAAYG,aAAa,mBAAmB,OAAO;AACxDC,UAAMC,KAAK,KAAKC,QAAQC,UAAU,EAAEC,QAASC,eAAc;AACzD,WAAKT,YAAYU,YAAYD,SAAS;IACxC,CAAC;AACD,SAAKE,YAAYV,SAASW,eAAelB,UAAU;AACnD,SAAKmB,aAAaZ,SAASW,eAAelB,UAAU;AACpD,SAAKY,QAAQI,YAAY,KAAKC,SAAS;AACvC,SAAKL,QAAQI,YAAY,KAAKV,WAAW;AACzC,SAAKM,QAAQI,YAAY,KAAKG,UAAU;EAC1C;EAEAC,MAAMf,MAAYgB,QAAgB;AAChC,QAAIhB,SAAS,KAAKY;AAAW,aAAO;AACpC,QAAIZ,SAAS,KAAKc;AAAY,aAAO;AACrC,WAAO,MAAMC,MAAMf,MAAMgB,MAAM;EACjC;EAEAC,QAAQjB,MAAsC;AAC5C,QAAIkB,QAAkC;AACtC,QAAIC;AACJ,UAAMC,OAAOpB,KAAKqB,KAAKC,MAAM3B,UAAU,EAAE4B,KAAK,EAAE;AAChD,QAAIvB,SAAS,KAAKY,WAAW;AAC3B,UAAI,KAAKY,gBAAgBC,OAAU;AACjC,cAAMC,aAAa,KAAKF,KAAKG,OAAO;AACpC,aAAKH,KAAKI,SAASF,YAAYN,IAAI;AACnCF,gBAAQ;UACNW,WAAW,KAAKL,KAAKjB;UACrBuB,aAAaJ,aAAaN,KAAKO;QACjC;MACF,OAAO;AACLR,mBAAWjB,SAASW,eAAeO,IAAI;AACvC,aAAKW,OAAOC,aAAa,KAAKjC,OAAOkC,OAAOd,QAAQ,GAAG,IAAI;AAC3DD,gBAAQ;UACNW,WAAWV;UACXW,aAAaV,KAAKO;QACpB;MACF;IACF,WAAW3B,SAAS,KAAKc,YAAY;AACnC,UAAI,KAAKoB,gBAAgBT,OAAU;AACjC,aAAKS,KAAKN,SAAS,GAAGR,IAAI;AAC1BF,gBAAQ;UACNW,WAAW,KAAKK,KAAK3B;UACrBuB,aAAaV,KAAKO;QACpB;MACF,OAAO;AACLR,mBAAWjB,SAASW,eAAeO,IAAI;AACvC,aAAKW,OAAOC,aAAa,KAAKjC,OAAOkC,OAAOd,QAAQ,GAAG,KAAKe,IAAI;AAChEhB,gBAAQ;UACNW,WAAWV;UACXW,aAAaV,KAAKO;QACpB;MACF;IACF;AACA3B,SAAKqB,OAAO1B;AACZ,WAAOuB;EACT;EAEAiB,OAAOC,WAA6BC,SAAkC;AACpED,cAAU3B,QAAS6B,cAAa;AAC9B,UACEA,SAASC,SAAS,oBACjBD,SAASE,WAAW,KAAK5B,aACxB0B,SAASE,WAAW,KAAK1B,aAC3B;AACA,cAAMI,QAAQ,KAAKD,QAAQqB,SAASE,MAAc;AAClD,YAAItB;AAAOmB,kBAAQnB,QAAQA;MAC7B;IACF,CAAC;EACH;AACF;AAEA,IAAA,gBAAetB;;;ACxFf,IAAM6C,cAAN,MAAkB;EAGhBC,YACUC,QACAC,SACR;AALFC,uCAAc;AAKZ,SAFQF,SAAAA;AAAc,SACdC,UAAAA;AAER,SAAKE,eAAe;EACtB;EAEQA,iBAAiB;AACvB,SAAKH,OAAOI,QAAQC,iBAAiB,oBAAqBC,WAAU;AAClE,UAAI,CAAC,KAAKJ,aAAa;AACrB,aAAKK,uBAAuBD,KAAK;MACnC;IACF,CAAC;AAED,SAAKN,OAAOI,QAAQC,iBAAiB,kBAAmBC,WAAU;AAChE,UAAI,KAAKJ,aAAa;AAIpBM,uBAAe,MAAM;AACnB,eAAKC,qBAAqBH,KAAK;QACjC,CAAC;MACH;IACF,CAAC;EACH;EAEQC,uBAAuBD,OAAyB;AACtD,UAAMI,OACJJ,MAAMK,kBAAkBC,OACpB,KAAKZ,OAAOa,KAAKP,MAAMK,QAAQ,IAAI,IACnC;AAEN,QAAID,QAAQ,EAAEA,gBAAgBI,gBAAQ;AACpC,WAAKb,QAAQc,KAAKC,gBAAQC,OAAOC,0BAA0BZ,KAAK;AAChE,WAAKN,OAAOmB,WAAW;AACvB,WAAKlB,QAAQc,KAAKC,gBAAQC,OAAOG,mBAAmBd,KAAK;AACzD,WAAKJ,cAAc;IACrB;EACF;EAEQO,qBAAqBH,OAAyB;AACpD,SAAKL,QAAQc,KAAKC,gBAAQC,OAAOI,wBAAwBf,KAAK;AAC9D,SAAKN,OAAOsB,SAAS;AACrB,SAAKrB,QAAQc,KAAKC,gBAAQC,OAAOM,iBAAiBjB,KAAK;AACvD,SAAKJ,cAAc;EACrB;AACF;AAEA,IAAA,sBAAeJ;;;AC1Cf,IAAM0B,SAAN,MAAMA,OAAM;EAWVC,YACYC,OACAC,SACV;AALFC,mCAAmC,CAAC;AAKlC,SAFUF,QAAAA;AAAY,SACZC,UAAAA;EACT;EAEHE,OAAO;AACLC,WAAOC,KAAK,KAAKJ,QAAQC,OAAO,EAAEI,QAASC,UAAS;AAClD,UAAI,KAAKL,QAAQK,IAAI,KAAK,MAAM;AAC9B,aAAKC,UAAUD,IAAI;MACrB;IACF,CAAC;EACH;EAOAC,UAAUD,MAAc;AAEtB,UAAME,cAAc,KAAKT,MAAMD,YAAYW,OAAQ,WAAUH,IAAK,EAAC;AACnE,SAAKL,QAAQK,IAAI,IAAI,IAAIE,YACvB,KAAKT,OACL,KAAKC,QAAQC,QAAQK,IAAI,KAAK,CAAC,CACjC;AACA,WAAO,KAAKL,QAAQK,IAAI;EAC1B;AACF;AArCE,cADIT,QACGa,YAAyB;EAC9BT,SAAS,CAAC;AACZ;AAEA,cALIJ,QAKGc,UAAS;EACdC,SAASf;AACX;AAPF,IAAMA,QAAN;AA6CA,IAAA,gBAAeA;;;ACnDf,IAAMgB,mBAAoBC,aACxBA,QAAQC,iBAAkBD,QAAQE,YAAY,EAAiBC,QAAQ;AAEzE,IAAMC,iBAAkBJ,aAA2B;AACjD,QAAMK,OAAOL,QAAQM,sBAAsB;AAC3C,QAAMC,SACH,iBAAiBP,WAChBQ,KAAKC,IAAIJ,KAAKK,KAAK,IAAKV,QAAwBW,eAClD;AACF,QAAMC,SACH,kBAAkBZ,WACjBQ,KAAKC,IAAIJ,KAAKQ,MAAM,IAAKb,QAAwBc,gBACnD;AACF,SAAO;IACLC,KAAKV,KAAKU;IACVC,OAAOX,KAAKY,OAAOjB,QAAQkB,cAAcX;IACzCY,QAAQd,KAAKU,MAAMf,QAAQoB,eAAeR;IAC1CK,MAAMZ,KAAKY;EACb;AACF;AAEA,IAAMI,oBAAqBC,WAAkB;AAC3C,QAAMC,SAASC,SAASF,OAAO,EAAE;AACjC,SAAOG,OAAOC,MAAMH,MAAM,IAAI,IAAIA;AACpC;AAIA,IAAMI,oBAAoBA,CACxBC,aACAC,WACAC,aACAC,WACAC,oBACAC,qBACG;AACH,MAAIL,cAAcE,eAAeD,YAAYE,WAAW;AACtD,WAAO;EACT;AAEA,MAAIH,cAAcE,aAAa;AAC7B,WAAO,EAAEA,cAAcF,cAAcI;EACvC;AAEA,MAAIH,YAAYE,WAAW;AACzB,WAAOF,YAAYD,cAAcG,YAAYD,cACzCF,cAAcI,qBAAqBF,cACnCD,YAAYE,YAAYE;EAC9B;AACA,SAAO;AACT;AAEA,IAAMC,qBAAqBA,CAACC,MAAmBC,eAAqB;AApDpE;AAqDE,QAAMC,YAAWF,KAAKG;AAEtB,MAAIjC,OAAO+B;AAEX,MAAIG,UAA0BJ;AAC9B,SAAOI,SAAS;AACd,UAAMC,iBAA0BD,YAAYF,UAASI;AACrD,UAAMC,WAAWF,iBACb;MACEzB,KAAK;MACLC,SACE2B,YAAOC,mBAAPD,mBAAuBjC,UACvB2B,UAASQ,gBAAgB3B;MAC3BC,UACEwB,YAAOC,mBAAPD,mBAAuB9B,WACvBwB,UAASQ,gBAAgBzB;MAC3BH,MAAM;IACR,IACAb,eAAemC,OAAO;AAE1B,UAAMO,QAAQC,iBAAiBR,OAAO;AACtC,UAAMS,kBAAkBrB,kBACtBtB,KAAKY,MACLZ,KAAKW,OACL0B,SAASzB,MACTyB,SAAS1B,OACTK,kBAAkByB,MAAMG,iBAAiB,GACzC5B,kBAAkByB,MAAMI,kBAAkB,CAC5C;AACA,UAAMC,kBAAkBxB,kBACtBtB,KAAKU,KACLV,KAAKc,QACLuB,SAAS3B,KACT2B,SAASvB,QACTE,kBAAkByB,MAAMM,gBAAgB,GACxC/B,kBAAkByB,MAAMO,mBAAmB,CAC7C;AACA,QAAIL,mBAAmBG,iBAAiB;AACtC,UAAIX,gBAAgB;AAClBH,cAAAA,UAASiB,gBAATjB,mBAAsBkB,SAASP,iBAAiBG;MAClD,OAAO;AACL,cAAM;UAAEK;UAAYC;QAAU,IAAIlB;AAClC,YAAIY,iBAAiB;AACnBZ,kBAAQkB,aAAaN;QACvB;AACA,YAAIH,iBAAiB;AACnBT,kBAAQiB,cAAcR;QACxB;AACA,cAAMU,eAAenB,QAAQiB,aAAaA;AAC1C,cAAMG,cAAcpB,QAAQkB,YAAYA;AACxCpD,eAAO;UACLY,MAAMZ,KAAKY,OAAOyC;UAClB3C,KAAKV,KAAKU,MAAM4C;UAChB3C,OAAOX,KAAKW,QAAQ0C;UACpBvC,QAAQd,KAAKc,SAASwC;QACxB;MACF;IACF;AAEApB,cACEC,kBAAkBM,MAAMc,aAAa,UACjC,OACA7D,iBAAiBwC,OAAO;EAChC;AACF;AAEA,IAAA,6BAAeL;;;AC5Hf,IAAM2B,0BAA0B;AAChC,IAAMC,eAAe,CAAC,SAAS,SAAS,UAAU,UAAU,UAAU,MAAM;AAE5E,IAAMC,4BAA4BA,CAChCC,SACAC,gBACAC,WACG;AACH,QAAMC,WAAW,IAAIC,SAAS;AAC9BN,eAAaO,QAASC,UAAS;AAC7B,UAAMC,WAAWN,eAAeO,MAAMF,IAAI;AAC1C,QAAIC;AAAUJ,eAASM,SAASF,QAAQ;EAC1C,CAAC;AAEDP,UAAQK,QAASC,UAAS;AACxB,QAAII,SAAST,eAAeO,MAAMF,IAAI;AACtC,QAAI,CAACI,QAAQ;AACXR,MAAAA,OAAMS,MACH,oBAAmBL,IAAK,kEAC3B;IACF;AACA,QAAIM,aAAa;AACjB,WAAOF,QAAQ;AACbP,eAASM,SAASC,MAAM;AACxBA,eAAS,cAAcA,SAASA,OAAOG,qBAAqB,OAAO;AAEnED,oBAAc;AACd,UAAIA,aAAaf,yBAAyB;AACxCK,QAAAA,OAAMS,MACH,0DAAyDL,IAAK,GACjE;AACA;MACF;IACF;EACF,CAAC;AAED,SAAOH;AACT;AAEA,IAAA,oCAAeJ;;;AjBdf,IAAMe,SAAQC,eAAO,OAAO;AAE5B,IAAMC,iBAAiB,IAAcC,SAAS;AACpCC,aAAWC,UAAU;AA6C/B,IAAMC,SAAN,MAAMA,OAAM;EAyBV,OAAON,MAAMO,OAA6B;AACxC,QAAIA,UAAU,MAAM;AAClBA,cAAQ;IACV;AACAN,mBAAOO,MAAMD,KAAK;EACpB;EAEA,OAAOE,KAAKC,MAA4B;AAAA,QAAhBC,SAAMC,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG;AAC/B,WAAOG,kBAAUC,IAAIN,IAAI,KAAKR,eAAeO,KAAKC,MAAMC,MAAM;EAChE;EAOA,OAAOM,OAAOC,MAAc;AAC1B,QAAI,KAAKC,QAAQD,IAAI,KAAK,MAAM;AAC9BlB,MAAAA,OAAMoB,MAAO,iBAAgBF,IAAK,mCAAkC;IACtE;AACA,WAAO,KAAKC,QAAQD,IAAI;EAC1B;EAkBA,OAAOG,WAA+B;AACpC,QAAI,QAAAT,UAAAC,UAAA,IAAAC,SAAAF,UAAA,CAAA,OAAmB,UAAU;AAC/B,YAAMU,SAAMV,UAAAC,UAAA,IAAAC,SAAAF,UAAA,CAAA;AACZ,YAAMW,YAAY,CAAC,EAAAX,UAAAC,UAAA,IAAAC,SAAAF,UAAA,CAAA;AAEnB,YAAMM,OAAO,cAAcI,SAASA,OAAOE,WAAWF,OAAOG;AAC7D,UAAI,OAAOP,SAAS,UAAU;AAG5B,aAAKG,SAAU,WAAUH,IAAK,IAAGI,QAAQC,SAAS;MACpD,OAAO;AACLG,eAAOC,KAAKL,MAAM,EAAEM,QAASC,SAAQ;AACnC,eAAKR,SAASQ,KAAKP,OAAOO,GAAG,GAAGN,SAAS;QAC3C,CAAC;MACH;IACF,OAAO;AACL,YAAMO,OAAIlB,UAAAC,UAAA,IAAAC,SAAAF,UAAA,CAAA;AACV,YAAMU,SAAMV,UAAAC,UAAA,IAAAC,SAAAF,UAAA,CAAA;AACZ,YAAMW,YAAY,CAAC,EAAAX,UAAAC,UAAA,IAAAC,SAAAF,UAAA,CAAA;AAEnB,UAAI,KAAKO,QAAQW,IAAI,KAAK,QAAQ,CAACP,WAAW;AAC5CvB,QAAAA,OAAM+B,KAAM,eAAcD,IAAK,SAAQR,MAAM;MAC/C;AACA,WAAKH,QAAQW,IAAI,IAAIR;AACrB,WACGQ,KAAKE,WAAW,QAAQ,KAAKF,KAAKE,WAAW,UAAU,MACxDV,UACA,OAAOA,WAAW,aAClBA,OAAOG,aAAa,YACpB;AACAvB,uBAAemB,SAASC,MAAM;MAChC;AACA,UAAI,OAAOA,OAAOD,aAAa,YAAY;AACzCC,eAAOD,SAASnB,cAAc;MAChC;IACF;EACF;EAmBA+B,YAAYC,WAA6D;AAAA,QAA5BC,UAAqBvB,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG,CAAC;AACpE,SAAKuB,UAAUC,aAAaF,WAAWC,OAAO;AAC9C,SAAKD,YAAY,KAAKC,QAAQD;AAC9B,QAAI,KAAKA,aAAa,MAAM;AAC1BlC,MAAAA,OAAMoB,MAAM,2BAA2Bc,SAAS;AAChD;IACF;AACA,QAAI,KAAKC,QAAQnC,OAAO;AACtBM,aAAMN,MAAM,KAAKmC,QAAQnC,KAAK;IAChC;AACA,UAAMqC,OAAO,KAAKH,UAAUI,UAAUC,KAAK;AAC3C,SAAKL,UAAUM,UAAUC,IAAI,cAAc;AAC3C,SAAKP,UAAUI,YAAY;AAC3BvB,sBAAU2B,IAAI,KAAKR,WAAW,IAAI;AAClC,SAAKS,OAAO,KAAKC,aAAa,WAAW;AACzC,SAAKD,KAAKH,UAAUC,IAAI,UAAU;AAClC,SAAKI,UAAU,IAAIC,gBAAQ;AAC3B,UAAMC,iBAA2BC,aAAWvB;AAC5C,UAAMuB,cAAa,KAAKb,QAAQc,SAASC,MAAMH,cAAc;AAC7D,QAAI,CAACC,eAAc,EAAE,cAAcA,cAAa;AAC9C,YAAM,IAAIG,MACP,oCAAmCJ,cAAe,QACrD;IACF;AACA,SAAKK,SAAS,IAAIJ,YAAW,KAAKb,QAAQc,UAAU,KAAKN,MAAM;MAC7DE,SAAS,KAAKA;IAChB,CAAC;AACD,SAAKQ,SAAS,IAAIC,eAAO,KAAKF,MAAM;AACpC,SAAKG,YAAY,IAAIC,kBAAU,KAAKJ,QAAQ,KAAKP,OAAO;AACxD,SAAKY,cAAc,IAAIC,oBAAY,KAAKN,QAAQ,KAAKP,OAAO;AAC5D,SAAKc,QAAQ,IAAI,KAAKxB,QAAQwB,MAAM,MAAM,KAAKxB,OAAO;AACtD,SAAKyB,WAAW,KAAKD,MAAME,UAAU,UAAU;AAC/C,SAAKC,YAAY,KAAKH,MAAME,UAAU,WAAW;AACjD,SAAKE,UAAU,KAAKJ,MAAME,UAAU,SAAS;AAC7C,SAAKG,WAAW,KAAKL,MAAME,UAAU,UAAU;AAC/C,SAAKF,MAAME,UAAU,OAAO;AAC5B,SAAKF,MAAME,UAAU,QAAQ;AAC7B,SAAKF,MAAMM,KAAK;AAChB,SAAKpB,QAAQqB,GAAGpB,gBAAQqB,OAAOC,eAAgBC,UAAS;AACtD,UAAIA,SAASvB,gBAAQqB,OAAOG,aAAa;AACvC,aAAK3B,KAAKH,UAAU+B,OAAO,YAAY,KAAKlB,OAAOmB,QAAQ,CAAC;MAC9D;IACF,CAAC;AACD,SAAK3B,QAAQqB,GAAGpB,gBAAQqB,OAAOM,eAAe,CAACC,QAAQC,cAAc;AACnE,YAAMC,WAAW,KAAKrB,UAAUsB;AAChC,YAAM,CAACC,QAAQ,IAAI,KAAKvB,UAAUwB,SAAS;AAC3C,YAAMC,gBACJJ,YAAYE,WAAW;QAAEF;QAAUE;MAAS,IAAIhE;AAClDmE,aAAOC,KACL,MACA,MAAM,KAAK7B,OAAO8B,OAAO,MAAMR,WAAWK,aAAa,GACvDN,MACF;IACF,CAAC;AACD,SAAK7B,QAAQqB,GAAGpB,gBAAQqB,OAAOiB,qBAAqB,CAACC,MAAMC,UAAU;AACnE,YAAMV,WAAW,KAAKrB,UAAUsB;AAChC,YAAM,CAACC,QAAQ,IAAI,KAAKvB,UAAUwB,SAAS;AAC3C,YAAMC,gBACJJ,YAAYE,WAAW;QAAEF;QAAUE;MAAS,IAAIhE;AAClDmE,aAAOC,KACL,MACA,MAAM;AACJ,cAAMK,SAAS,IAAIC,oBAAAA,QAAM,EACtBC,OAAOJ,KAAKK,OAAO,IAAI,CAAC,EACxBD,OAAO;UAAE,CAACJ,KAAKM,QAAQlE,QAAQ,GAAG6D;QAAM,CAAC;AAC5C,eAAO,KAAKjC,OAAO8B,OAAOI,QAAQ,CAAA,GAAIP,aAAa;MACrD,GACA1E,OAAMsF,QAAQC,IAChB;IACF,CAAC;AACD,QAAIxD,MAAM;AACR,YAAMyD,WAAW,KAAKhC,UAAUiC,QAAQ;QACtC1D,MAAO,GAAEA,IAAK;QACd2D,MAAM;MACR,CAAC;AACD,WAAKC,YAAYH,QAAQ;IAC3B;AACA,SAAK/B,QAAQmC,MAAM;AACnB,QAAI,KAAK/D,QAAQgE,aAAa;AAC5B,WAAKxD,KAAKyD,aAAa,oBAAoB,KAAKjE,QAAQgE,WAAW;IACrE;AACA,QAAI,KAAKhE,QAAQkE,UAAU;AACzB,WAAKC,QAAQ;IACf;AACA,SAAKC,qBAAqB;EAC5B;EAIA3D,aACEV,WAE8B;AAAA,QAD9BsE,UAAoB5F,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG;AAEvB,QAAI,OAAOsB,cAAc,UAAU;AACjC,YAAMuE,YAAYvE;AAClBA,kBAAYwE,SAASC,cAAc,KAAK;AACxCzE,gBAAUM,UAAUC,IAAIgE,SAAS;IACnC;AACA,SAAKvE,UAAU0E,aAAa1E,WAAWsE,OAAO;AAC9C,WAAOtE;EACT;EAEA2E,OAAO;AACL,SAAKtD,UAAUuD,SAAS,IAAI;EAC9B;EAIAC,WACEC,OACAnG,QACA6D,QACO;AAEP,KAACsC,OAAOnG,QAAM,EAAI6D,MAAM,IAAIuC,SAASD,OAAOnG,QAAQ6D,MAAM;AAC1D,WAAOO,OAAOC,KACZ,MACA,MAAM;AACJ,aAAO,KAAK7B,OAAO0D,WAAWC,OAAOnG,MAAM;IAC7C,GACA6D,QACAsC,OACA,KAAKnG,MACP;EACF;EAEAyF,UAAU;AACR,SAAKY,OAAO,KAAK;EACnB;EAEAC,aAAgBC,UAAsB;AACpC,SAAKb,qBAAqB;AAC1B,UAAMc,QAAQD,SAAS;AACvB,SAAKb,qBAAqB;AAC1B,WAAOc;EACT;EAEAH,SAAuB;AAAA,QAAhBI,UAAO1G,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG;AACf,SAAKwC,OAAO8D,OAAOI,OAAO;AAC1B,SAAKpF,UAAUM,UAAU+B,OAAO,eAAe,CAAC+C,OAAO;EACzD;EAEAC,QAAiD;AAAA,QAA3CpF,UAAoCvB,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG,CAAC;AAC5C,SAAK2C,UAAUgE,MAAM;AACrB,QAAI,CAACpF,QAAQqF,eAAe;AAC1B,WAAKC,wBAAwB;IAC/B;EACF;EAEAC,OACExG,MACAmG,OAEO;AAAA,QADP3C,SAAqB9D,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAGkC,gBAAQ8C,QAAQ+B;AAExC,WAAO1C,OAAOC,KACZ,MACA,MAAM;AACJ,YAAM0C,QAAQ,KAAKC,aAAa,IAAI;AACpC,UAAItC,SAAS,IAAIC,oBAAAA,QAAM;AACvB,UAAIoC,SAAS;AAAM,eAAOrC;AAC1B,UAAI,KAAKnC,OAAOF,MAAMhC,MAAgB4G,MAAMC,KAAK,GAAG;AAClDxC,iBAAS,KAAKlC,OAAO2E,WAAWJ,MAAMZ,OAAOY,MAAM/G,QAAQ;UACzD,CAACK,IAAI,GAAGmG;QACV,CAAC;MACH,WAAWO,MAAM/G,WAAW,GAAG;AAC7B,aAAK0C,UAAUmE,OAAOxG,MAAMmG,KAAK;AACjC,eAAO9B;MACT,OAAO;AACLA,iBAAS,KAAKlC,OAAO4E,WAAWL,MAAMZ,OAAOY,MAAM/G,QAAQ;UACzD,CAACK,IAAI,GAAGmG;QACV,CAAC;MACH;AACA,WAAKa,aAAaN,OAAO9E,gBAAQ8C,QAAQuC,MAAM;AAC/C,aAAO5C;IACT,GACAb,MACF;EACF;EAeAsD,WACEhB,OACAnG,QACAK,MACAmG,OACA3C,QACO;AACP,QAAI0D;AAEJ,KAACpB,OAAOnG,QAAQuH,SAAS1D,MAAM,IAAIuC;MACjCD;MACAnG;;MAEAK;MACAmG;MACA3C;IACF;AACA,WAAOO,OAAOC,KACZ,MACA,MAAM;AACJ,aAAO,KAAK7B,OAAO2E,WAAWhB,OAAOnG,QAAQuH,OAAO;IACtD,GACA1D,QACAsC,OACA,CACF;EACF;EAqBAiB,WACEjB,OACAnG,QACAK,MACAmG,OACA3C,QACO;AACP,QAAI0D;AAEJ,KAACpB,OAAOnG,QAAQuH,SAAS1D,MAAM,IAAIuC;;MAEjCD;MACAnG;MACAK;MACAmG;MACA3C;IACF;AACA,WAAOO,OAAOC,KACZ,MACA,MAAM;AACJ,aAAO,KAAK7B,OAAO4E,WAAWjB,OAAOnG,QAAQuH,OAAO;IACtD,GACA1D,QACAsC,OACA,CACF;EACF;EAEAqB,UAAUrB,OAAkD;AAAA,QAA3BnG,SAAMD,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG;AACxC,QAAI0H,SAAwB;AAC5B,QAAI,OAAOtB,UAAU,UAAU;AAC7BsB,eAAS,KAAK/E,UAAU8E,UAAUrB,OAAOnG,MAAM;IACjD,OAAO;AACLyH,eAAS,KAAK/E,UAAU8E,UAAUrB,MAAMA,OAAOA,MAAMnG,MAAM;IAC7D;AACA,QAAI,CAACyH;AAAQ,aAAO;AACpB,UAAMC,kBAAkB,KAAKrG,UAAUsG,sBAAsB;AAC7D,WAAO;MACLC,QAAQH,OAAOG,SAASF,gBAAgBG;MACxCC,QAAQL,OAAOK;MACfC,MAAMN,OAAOM,OAAOL,gBAAgBK;MACpCC,OAAOP,OAAOO,QAAQN,gBAAgBK;MACtCF,KAAKJ,OAAOI,MAAMH,gBAAgBG;MAClCI,OAAOR,OAAOQ;IAChB;EACF;EAEAC,cAA0D;AAAA,QAA9C/B,QAAKpG,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG;AAAC,QAAEC,SAAMD,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG,KAAKoI,UAAU,IAAIhC;AACjD,KAACA,OAAOnG,MAAM,IAAIoG,SAASD,OAAOnG,MAAM;AACxC,WAAO,KAAKwC,OAAO0F,YAAY/B,OAAOnG,MAAM;EAC9C;EAMAoI,YAGiC;AAAA,QAF/BjC,QAAqBpG,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG,KAAKiH,aAAa,IAAI;AAAC,QAC/ChH,SAAMD,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG;AAET,QAAI,OAAOoG,UAAU,UAAU;AAC7B,aAAO,KAAK3D,OAAO4F,UAAUjC,OAAOnG,MAAM;IAC5C;AACA,WAAO,KAAKwC,OAAO4F,UAAUjC,MAAMA,OAAOA,MAAMnG,MAAM;EACxD;EAEAqI,SAAS7D,MAAsB;AAC7B,WAAOA,KAAKK,OAAO,KAAKtC,MAAM;EAChC;EAEA4F,YAAY;AACV,WAAO,KAAK5F,OAAOvC,OAAO;EAC5B;EAEAsI,QAAQnC,OAAe;AACrB,WAAO,KAAK5D,OAAOgG,KAAKpC,KAAK;EAC/B;EAEAqC,QAAQrC,OAAe;AACrB,WAAO,KAAK5D,OAAOkG,KAAKtC,KAAK;EAC/B;EAIAuC,WAG0B;AAAA,QAFxBvC,QAAqBpG,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG;AAAC,QACzBC,SAAMD,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG4I,OAAOC;AAEhB,QAAI,OAAOzC,UAAU,UAAU;AAC7B,aAAO,KAAK5D,OAAOsG,MAAM1C,MAAMA,OAAOA,MAAMnG,MAAM;IACpD;AACA,WAAO,KAAKuC,OAAOsG,MAAM1C,OAAOnG,MAAM;EACxC;EAEA8I,UAAUzI,MAAc;AACtB,WAAO,KAAKyC,MAAMiG,QAAQ1I,IAAI;EAChC;EAIA2G,eAA0C;AAAA,QAA7BN,QAAK3G,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG;AACnB,QAAI2G;AAAO,WAAKA,MAAM;AACtB,SAAKpC,OAAO;AACZ,WAAO,KAAK5B,UAAUwB,SAAS,EAAE,CAAC;EACpC;EAIA8E,kBAA4D;AAAA,QAA5C7C,QAAqBpG,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG;AAAC,QAAEC,SAAeD,UAAAC,SAAA,IAAAD,UAAA,CAAA,IAAAE;AACxD,QAAI,OAAOkG,UAAU,UAAU;AAC7BnG,eAASA,UAAU,KAAKmI,UAAU,IAAIhC;IACxC;AAEA,KAACA,OAAOnG,MAAM,IAAIoG,SAASD,OAAOnG,MAAM;AACxC,WAAO,KAAKwC,OAAOyG,QAAQ9C,OAAOnG,MAAM;EAC1C;EAIAkJ,UAA4D;AAAA,QAApD/C,QAAqBpG,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG;AAAC,QAAEC,SAAeD,UAAAC,SAAA,IAAAD,UAAA,CAAA,IAAAE;AAChD,QAAI,OAAOkG,UAAU,UAAU;AAC7BnG,eAASA,UAAU,KAAKmI,UAAU,IAAIhC;IACxC;AAEA,KAACA,OAAOnG,MAAM,IAAIoG,SAASD,OAAOnG,MAAM;AACxC,WAAO,KAAKwC,OAAO0G,QAAQ/C,OAAOnG,MAAM;EAC1C;EAEAmJ,WAAW;AACT,WAAO,KAAKzG,UAAUyG,SAAS;EACjC;EAEAC,YACEjD,OACAkD,OACA7C,OAEO;AAAA,QADP3C,SAAqB9D,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAGN,OAAMsF,QAAQ+B;AAEtC,WAAO1C,OAAOC,KACZ,MACA,MAAM;AACJ,aAAO,KAAK7B,OAAO4G,YAAYjD,OAAOkD,OAAO7C,KAAK;IACpD,GACA3C,QACAsC,KACF;EACF;EAgBAmD,WACEnD,OACAhB,MACA9E,MACAmG,OACA3C,QACO;AACP,QAAI0D;AAGJ,KAACpB,OAAK,EAAIoB,SAAS1D,MAAM,IAAIuC,SAASD,OAAO,GAAG9F,MAAMmG,OAAO3C,MAAM;AACnE,WAAOO,OAAOC,KACZ,MACA,MAAM;AACJ,aAAO,KAAK7B,OAAO8G,WAAWnD,OAAOhB,MAAMoC,OAAO;IACpD,GACA1D,QACAsC,OACAhB,KAAKnF,MACP;EACF;EAEAuJ,YAAY;AACV,WAAO,KAAKhH,OAAOgH,UAAU;EAC/B;EAEAC,MAA+D;AAC7D,WAAO,KAAKxH,QAAQwH,IAAI,GAAAzJ,SAAO;EACjC;EA6BAsD,KAAsE;AACpE,WAAO,KAAKrB,QAAQqB,GAAG,GAAAtD,SAAO;EAChC;EAEA0J,OAAiE;AAC/D,WAAO,KAAKzH,QAAQyH,KAAK,GAAA1J,SAAO;EAClC;EAEA2J,aAAavD,OAAenG,QAAgB6D,QAA+B;AACzE,KAACsC,OAAOnG,QAAM,EAAI6D,MAAM,IAAIuC,SAASD,OAAOnG,QAAQ6D,MAAM;AAC1D,WAAOO,OAAOC,KACZ,MACA,MAAM;AACJ,aAAO,KAAK7B,OAAOkH,aAAavD,OAAOnG,MAAM;IAC/C,GACA6D,QACAsC,KACF;EACF;EAEAwD,mBAAmBC,MAAY;AAC7BD,+BAAmB,KAAK7H,MAAM8H,IAAI;EACpC;;;;EAKAC,iBAAiB;AACfC,YAAQ5I,KACN,wIACF;AACA,SAAK0F,wBAAwB;EAC/B;;;;;EAMAA,0BAA0B;AACxB,UAAMG,QAAQ,KAAKrE,UAAUsB;AAC7B,UAAMyD,SAASV,SAAS,KAAKrE,UAAU8E,UAAUT,MAAMZ,OAAOY,MAAM/G,MAAM;AAC1E,QAAIyH,QAAQ;AACV,WAAKkC,mBAAmBlC,MAAM;IAChC;EACF;EAEArC,YACEX,OAEO;AAAA,QADPZ,SAAqB9D,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAGkC,gBAAQ8C,QAAQ+B;AAExC,WAAO1C,OAAOC,KACZ,MACA,MAAM;AACJI,cAAQ,IAAIE,oBAAAA,QAAMF,KAAK;AACvB,YAAMzE,SAAS,KAAKmI,UAAU;AAE9B,YAAM4B,UAAU,KAAKvH,OAAO0D,WAAW,GAAGlG,MAAM;AAChD,YAAMgK,UAAU,KAAKxH,OAAOyH,eAAe,GAAGxF,KAAK;AAEnD,YAAMyF,UAAU,KAAK1H,OAAO0D,WAAW,KAAKiC,UAAU,IAAI,GAAG,CAAC;AAC9D,aAAO4B,QAAQI,QAAQH,OAAO,EAAEG,QAAQD,OAAO;IACjD,GACArG,MACF;EACF;EAKAwD,aACElB,OACAnG,QACA6D,QACM;AACN,QAAIsC,SAAS,MAAM;AAEjB,WAAKzD,UAAUuD,SAAS,MAAMjG,UAAUP,OAAMsF,QAAQ+B,GAAG;IAC3D,OAAO;AAEL,OAACX,OAAOnG,QAAM,EAAI6D,MAAM,IAAIuC,SAASD,OAAOnG,QAAQ6D,MAAM;AAC1D,WAAKnB,UAAUuD,SAAS,IAAImE,MAAMC,KAAKC,IAAI,GAAGnE,KAAK,GAAGnG,MAAM,GAAG6D,MAAM;AACrE,UAAIA,WAAW5B,gBAAQ8C,QAAQuC,QAAQ;AACrC,aAAKV,wBAAwB;MAC/B;IACF;EACF;EAEA2D,QAAQpF,MAA2D;AAAA,QAA7CtB,SAAqB9D,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAGkC,gBAAQ8C,QAAQ+B;AAC5D,UAAMrC,QAAQ,IAAIE,oBAAAA,QAAM,EAAE6F,OAAOrF,IAAI;AACrC,WAAO,KAAKC,YAAYX,OAAOZ,MAAM;EACvC;EAEAS,SAAqD;AAAA,QAA9CT,SAAqB9D,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAGkC,gBAAQ8C,QAAQC;AAC7C,UAAMN,SAAS,KAAKnC,OAAO+B,OAAOT,MAAM;AACxC,SAAKnB,UAAU4B,OAAOT,MAAM;AAE5B,WAAOa;EACT;EAEA+F,eACEhG,OAEO;AAAA,QADPZ,SAAqB9D,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAGkC,gBAAQ8C,QAAQ+B;AAExC,WAAO1C,OAAOC,KACZ,MACA,MAAM;AACJI,cAAQ,IAAIE,oBAAAA,QAAMF,KAAK;AACvB,aAAO,KAAKjC,OAAOkI,WAAWjG,KAAK;IACrC,GACAZ,QACA,IACF;EACF;AACF;AAjrBE,cADIpE,QACGkL,YAAW;EAChBlD,QAAQ;EACRsB,SAAS;IACP9F,WAAW;IACXF,UAAU;IACVG,SAAS;IACTC,UAAU;EACZ;EACAmC,aAAa;EACbE,UAAU;EACVpD,UAAU/C;EACVyD,OAAO;AACT;AACA,cAdIrD,QAcG6D,UAASrB,gBAAQqB;AACxB,cAfI7D,QAeGsF,WAAU9C,gBAAQ8C;AACzB,cAhBItF,QAgBGmL,WAAU,QAAuC,QAAK;AAE7D,cAlBInL,QAkBGa,WAAmC;EACxCmE,OAAOE,oBAAAA;EACPkG,WAAWC;EACX,eAAeC;EACf,cAAcC;AAChB;AAvBF,IAAMvL,QAAN;AAorBA,SAASwL,gBAAgBC,UAAmD;AAC1E,SAAO,OAAOA,aAAa,WACvBrF,SAASsF,cAA2BD,QAAQ,IAC5CA;AACN;AAEA,SAASE,mBAAmBC,SAA6C;AACvE,SAAOxK,OAAOyK,QAAQD,WAAU,CAAC,CAAC,EAAEE,OAClC,CAACC,UAAQC,SAAA;AAAA,QAAE,CAACzK,KAAKwF,KAAK,IAACiF;AAAA,WAAM;MAC3B,GAAGD;MACH,CAACxK,GAAG,GAAGwF,UAAU,OAAO,CAAC,IAAIA;IAC/B;EAAC,GACD,CAAC,CACH;AACF;AAEA,SAASkF,+BAA+BC,KAAmB;AACzD,SAAO9K,OAAO+K,YACZ/K,OAAOyK,QAAQK,GAAG,EAAEE,OAAQC,WAAUA,MAAM,CAAC,MAAM7L,MAAS,CAC9D;AACF;AAEA,SAASsB,aACPwK,qBACAzK,SACsB;AACtB,QAAMD,YAAY4J,gBAAgBc,mBAAmB;AACrD,MAAI,CAAC1K,WAAW;AACd,UAAM,IAAIiB,MAAM,yBAAyB;EAC3C;AAEA,QAAM0J,wBACJ,CAAC1K,QAAQwB,SAASxB,QAAQwB,UAAUrD,MAAMkL,SAAS7H;AACrD,QAAMA,QAAQkJ,wBACVhB,gBACAvL,MAAMW,OAAQ,UAASkB,QAAQwB,KAAM,EAAC;AAC1C,MAAI,CAACA,OAAO;AACV,UAAM,IAAIR,MAAO,iBAAgBhB,QAAQwB,KAAM,wBAAuB;EACxE;AAEA,QAAM;IAAEiG,SAASkD;IAAqB,GAAGC;EAAc,IAAIzM,MAAMkL;AACjE,QAAM;IAAE5B,SAASoD;IAAqB,GAAGC;EAAc,IAAItJ,MAAM6H;AAEjE,MAAI0B,oBAAoBjB,mBAAmB9J,QAAQyH,OAAO;AAE1D,MACEsD,qBAAqB,QACrBA,kBAAkBC,WAClBD,kBAAkBC,QAAQlL,gBAAgBP,QAC1C;AACAwL,wBAAoB;MAClB,GAAGA;MACHC,SAAS;QAAEjL,WAAWgL,kBAAkBC;MAAQ;IAClD;EACF;AAEA,QAAMvD,UAA2CwD,cAC/C,CAAC,GACDnB,mBAAmBa,mBAAmB,GACtCb,mBAAmBe,mBAAmB,GACtCE,iBACF;AAEA,QAAMhB,UAAS;IACb,GAAGa;IACH,GAAGR,+BAA+BU,aAAa;IAC/C,GAAGV,+BAA+BpK,OAAO;EAC3C;AAEA,MAAIc,WAAWd,QAAQc;AACvB,MAAIA,UAAU;AACZ,QAAId,QAAQiG,SAAS;AACnBpI,MAAAA,OAAM+B,KAAK,2DAA2D;IACxE;EACF,OAAO;AACLkB,eAAWd,QAAQiG,UACfiF,kCAA0BlL,QAAQiG,SAAS8D,QAAOjJ,UAAUjD,MAAK,IACjEkM,QAAOjJ;EACb;AAEA,SAAO;IACL,GAAGiJ;IACHjJ;IACAf;IACAyB;IACAiG,SAASlI,OAAOyK,QAAQvC,OAAO,EAAEwC,OAC/B,CAACkB,qBAAmBC,UAAoB;AAAA,UAAlB,CAACrM,MAAMmG,KAAK,IAACkG;AACjC,UAAI,CAAClG;AAAO,eAAOiG;AAEnB,YAAME,cAAclN,MAAMW,OAAQ,WAAUC,IAAK,EAAC;AAClD,UAAIsM,eAAe,MAAM;AACvBxN,QAAAA,OAAMoB,MACH,eAAcF,IAAK,0CACtB;AACA,eAAOoM;MACT;AACA,aAAO;QACL,GAAGA;;QAEH,CAACpM,IAAI,GAAGkM,cAAM,CAAC,GAAGI,YAAYhC,YAAY,CAAC,GAAGnE,KAAK;MACrD;IACF,GACA,CAAC,CACH;IACAiB,QAAQwD,gBAAgBI,QAAO5D,MAAM;EACvC;AACF;AAIA,SAASrD,OACPmC,UACA1C,QACAsC,OACAyG,OACA;AACA,MACE,CAAC,KAAKrD,UAAU,KAChB1F,WAAW5B,gBAAQ8C,QAAQC,QAC3B,CAAC,KAAKU,oBACN;AACA,WAAO,IAAIf,oBAAAA,QAAM;EACnB;AACA,MAAIoC,QAAQZ,SAAS,OAAO,OAAO,KAAKa,aAAa;AACrD,QAAM6F,WAAW,KAAKrK,OAAOiC;AAC7B,QAAMC,SAAS6B,SAAS;AACxB,MAAIQ,SAAS,MAAM;AACjB,QAAIZ,UAAU,MAAM;AAClBA,cAAQY,MAAMZ;IAChB;AACA,QAAIyG,SAAS,MAAM;AACjB7F,cAAQ+F,YAAW/F,OAAOrC,QAAQb,MAAM;IAC1C,WAAW+I,UAAU,GAAG;AAEtB7F,cAAQ+F,YAAW/F,OAAOZ,OAAOyG,OAAO/I,MAAM;IAChD;AACA,SAAKwD,aAAaN,OAAO9E,gBAAQ8C,QAAQuC,MAAM;EACjD;AACA,MAAI5C,OAAO1E,OAAO,IAAI,GAAG;AACvB,UAAM+M,OAAO,CAAC9K,gBAAQqB,OAAOG,aAAaiB,QAAQmI,UAAUhJ,MAAM;AAClE,SAAK7B,QAAQgL,KAAK/K,gBAAQqB,OAAOC,eAAe,GAAGwJ,IAAI;AACvD,QAAIlJ,WAAW5B,gBAAQ8C,QAAQuC,QAAQ;AACrC,WAAKtF,QAAQgL,KAAK,GAAGD,IAAI;IAC3B;EACF;AACA,SAAOrI;AACT;AAuCA,SAAS0B,SACPD,OACAnG,QACAK,MACAmG,OACA3C,QACuB;AACvB,MAAI0D,UAAmC,CAAC;AAExC,MAAI,OAAOpB,MAAMA,UAAU,YAAY,OAAOA,MAAMnG,WAAW,UAAU;AAEvE,QAAI,OAAOA,WAAW,UAAU;AAE9B6D,eAAS2C;AACTA,cAAQnG;AACRA,aAAOL;AAEPA,eAASmG,MAAMnG;AAEfmG,cAAQA,MAAMA;IAChB,OAAO;AAELnG,eAASmG,MAAMnG;AAEfmG,cAAQA,MAAMA;IAChB;EACF,WAAW,OAAOnG,WAAW,UAAU;AAErC6D,aAAS2C;AACTA,YAAQnG;AACRA,WAAOL;AACPA,aAAS;EACX;AAEA,MAAI,OAAOK,SAAS,UAAU;AAE5BkH,cAAUlH;AAEVwD,aAAS2C;EACX,WAAW,OAAOnG,SAAS,UAAU;AACnC,QAAImG,SAAS,MAAM;AACjBe,cAAQlH,IAAI,IAAImG;IAClB,OAAO;AAEL3C,eAASxD;IACX;EACF;AAEAwD,WAASA,UAAU5B,gBAAQ8C,QAAQ+B;AAEnC,SAAO,CAACX,OAAOnG,QAAQuH,SAAS1D,MAAM;AACxC;AASA,SAASiJ,YACP/F,OACAZ,OACA8G,gBACApJ,QACA;AACA,QAAM7D,SAAS,OAAOiN,mBAAmB,WAAWA,iBAAiB;AACrE,MAAIlG,SAAS;AAAM,WAAO;AAC1B,MAAImG;AACJ,MAAIC;AAEJ,MAAIhH,SAAS,OAAOA,MAAMiH,sBAAsB,YAAY;AAC1D,KAACF,OAAOC,GAAG,IAAI,CAACpG,MAAMZ,OAAOY,MAAMZ,QAAQY,MAAM/G,MAAM,EAAEqN,IAAKC;;MAE5DnH,MAAMiH,kBAAkBE,KAAKzJ,WAAW5B,gBAAQ8C,QAAQC,IAAI;KAC9D;EACF,OAAO;AACL,KAACkI,OAAOC,GAAG,IAAI,CAACpG,MAAMZ,OAAOY,MAAMZ,QAAQY,MAAM/G,MAAM,EAAEqN,IAAKC,SAAQ;AAEpE,UAAIA,MAAMnH,SAAUmH,QAAQnH,SAAStC,WAAW5B,gBAAQ8C,QAAQC;AAC9D,eAAOsI;AACT,UAAItN,UAAU,GAAG;AACf,eAAOsN,MAAMtN;MACf;AAEA,aAAOqK,KAAKC,IAAInE,OAAOmH,MAAMtN,MAAM;IACrC,CAAC;EACH;AACA,SAAO,IAAIoK,MAAM8C,OAAOC,MAAMD,KAAK;AACrC;;;AkB/gCA,IAAMK,YAAN,cAAwBC,gBAAc;AAAA;AAEtC,IAAA,oBAAeD;;;ACFf,IAAAE,sBAAwC;AAgBxC,SAASC,OAAOC,MAA2C;AACzD,SAAOA,gBAAgBC,SAASD,gBAAgBE;AAClD;AAMA,SAASC,YAAYH,MAA2C;AAC9D,SAAO,OAAQA,KAAwBI,kBAAkB;AAC3D;AAEA,IAAMC,SAAN,cAAqBC,aAAW;EAU9BC,YACEC,UACAC,SAAuBC,MAEvB;AAAA,QADA;MAAEC;IAA8B,IAACD;AAEjC,UAAMF,UAAUC,OAAO;AACvB,SAAKE,UAAUA;AACf,SAAKC,QAAQ;AACb,SAAKC,SAAS;AACd,SAAKC,OAAO;AACZ,SAAKL,QAAQM,iBAAiB,aAAcC,OAAM,KAAKC,gBAAgBD,CAAC,CAAC;EAC3E;EAEAE,aAAa;AACX,QAAI,CAACC,MAAMC,QAAQ,KAAKR,KAAK,GAAG;AAC9B,WAAKA,QAAQ,CAAA;IACf;EACF;EAEAS,WAAW;AACT,QAAI,CAAC,KAAKT;AAAO;AACjB,UAAMU,YAAY,KAAKV;AACvB,SAAKA,QAAQ;AACb,SAAKW,OAAOD,SAAS;EACvB;EAEAE,UAAUxB,MAAY;AACpB,SAAKW,QAAQc,KAAKC,gBAAQC,OAAOC,mBAAmB5B,IAAI;EAC1D;EAEA6B,YAAY7B,MAAY;AACtB,SAAKW,QAAQc,KAAKC,gBAAQC,OAAOG,qBAAqB9B,IAAI;EAC5D;EAEA+B,gBAAgB/B,MAAYgC,QAAiB;AAC3C,SAAKrB,QAAQc,KAAKC,gBAAQC,OAAOM,qBAAqBjC,MAAMgC,MAAM;EACpE;EAEAE,SAASC,OAAeC,QAAgB;AACtC,UAAM,CAACC,OAAOC,MAAM,IAAI,KAAKC,KAAKJ,KAAK;AACvC,UAAM,CAACK,IAAI,IAAI,KAAKD,KAAKJ,QAAQC,MAAM;AACvC,UAAMF,SAASC,OAAOC,MAAM;AAC5B,QAAII,QAAQ,QAAQH,UAAUG,QAAQF,SAAS,GAAG;AAChD,UAAID,iBAAiBnC,cAAcsC,gBAAgBtC,YAAY;AAC7D,aAAKW,SAAS;AACd;MACF;AACA,YAAM4B,MACJD,KAAKE,SAASC,gBAAgBC,gBAAQ,OAAOJ,KAAKE,SAASC;AAE7DN,YAAMQ,aAAaL,MAAMC,GAAG;AAE5BJ,YAAMS,OAAO;IACf;AACA,SAAKjC,SAAS;EAChB;EAEAC,SAAuB;AAAA,QAAhBiC,UAAOC,UAAAZ,SAAA,KAAAY,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG;AACf,SAAKvC,QAAQyC,aAAa,mBAAmBH,UAAU,SAAS,OAAO;EACzE;EAEAI,SAAShB,OAAeC,QAAgBgB,QAAgBC,OAAgB;AACtE,UAAMF,SAAShB,OAAOC,QAAQgB,QAAQC,KAAK;AAC3C,SAAKxC,SAAS;EAChB;EAEAyC,SAASnB,OAAekB,OAAeE,KAAe;AACpD,QAAIpB,SAAS,KAAKC,OAAO,GAAG;AAC1B,UAAImB,OAAO,QAAQ,KAAKC,OAAOC,MAAMJ,OAAOK,MAAMC,KAAK,KAAK,MAAM;AAChE,cAAM3D,OAAO,KAAKwD,OAAOI,OAAO,KAAKC,QAAQC,aAAaC,QAAQ;AAClE,aAAKC,YAAYhE,IAAI;AACrB,YAAIuD,OAAO,QAAQF,MAAMY,SAAS,IAAI,GAAG;AACvCjE,eAAKsD,SAAS,GAAGD,MAAMa,MAAM,GAAG,EAAE,GAAGX,GAAG;QAC1C,OAAO;AACLvD,eAAKsD,SAAS,GAAGD,OAAOE,GAAG;QAC7B;MACF,OAAO;AACL,cAAMY,QAAQ,KAAKX,OAAOI,OAAOP,OAAOE,GAAG;AAC3C,aAAKS,YAAYG,KAAK;MACxB;IACF,OAAO;AACL,YAAMb,SAASnB,OAAOkB,OAAOE,GAAG;IAClC;AACA,SAAK1C,SAAS;EAChB;EAEAuD,aAAapE,MAAYyC,KAAmB;AAC1C,QAAIzC,KAAK6D,QAAQQ,UAAUX,MAAMY,aAAa;AAC5C,YAAMC,UAAU,KAAKf,OAAOI,OAC1B,KAAKC,QAAQC,aAAaC,QAC5B;AACAQ,cAAQP,YAAYhE,IAAI;AACxB,YAAMoE,aAAaG,SAAS9B,GAAG;IACjC,OAAO;AACL,YAAM2B,aAAapE,MAAMyC,GAAG;IAC9B;EACF;EAEA+B,eAAerC,OAAesC,OAAc;AAC1C,UAAMC,eAAe,KAAKC,oBACxBF,MAAMG,OAAO,IAAIC,oBAAAA,QAAM,EAAEC,OAAO,IAAI,CAAC,CACvC;AACA,UAAMtC,OAAOkC,aAAaK,IAAI;AAC9B,QAAIvC,QAAQ;AAAM;AAElB,SAAKtB,WAAW;AAEhB,UAAMmB,QAAQqC,aAAaM,MAAM;AACjC,QAAI3C,OAAO;AACT,YAAM4C,0BACJ5C,MAAM6C,SAAS,YACd7C,MAAMoC,MAAMrC,OAAO,MAAM,KACvB,CAAC,KAAK+C,WAAWjF,YAAYiC,KAAK,EAAE,CAAC,KAAKA,QAAQ,KAAKC,OAAO;AACnE,YAAMqC,SACJpC,MAAM6C,SAAS,UACX7C,MAAMoC,QACN,IAAII,oBAAAA,QAAM,EAAEC,OAAO;QAAE,CAACzC,MAAM+C,GAAG,GAAG/C,MAAMgB;MAAM,CAAC;AACrDgC,2BAAqB,MAAMlD,OAAOsC,MAAK;AACvC,YAAMa,oBAAoBjD,MAAM6C,SAAS,UAAU,IAAI;AACvD,YAAMK,eAAepD,QAAQsC,OAAMrC,OAAO,IAAIkD;AAC9C,UAAIL,yBAAyB;AAC3B,aAAK3B,SAASiC,eAAe,GAAG,IAAI;MACtC;AAEA,YAAMC,UAAUC,cAAc,KAAKlD,KAAKJ,KAAK,EAAE,CAAC,CAAC;AACjD,YAAMuD,aAAaC,iCAAaC,KAAKJ,SAASnD,MAAMqD,UAAU,KAAK,CAAC;AACpEG,aAAOC,KAAKJ,UAAU,EAAEK,QAASC,UAAS;AACxC,aAAK7C,SAASoC,eAAe,GAAG,GAAGS,MAAMN,WAAWM,IAAI,CAAC;MAC3D,CAAC;AAED7D,cAAQoD;IACV;AAEA,QAAI,CAACU,SAASC,aAAa,IAAI,KAAKxD,SAASyD,KAAKhE,KAAK;AACvD,QAAIuC,aAAatC,QAAQ;AACvB,UAAI6D,SAAS;AACXA,kBAAUA,QAAQG,MAAMF,aAAa;AACrCA,wBAAgB;MAClB;AAEAxB,mBAAaqB,QAASM,iBAAgB;AACpC,YAAIA,YAAYnB,SAAS,SAAS;AAChC,gBAAMoB,QAAQ,KAAKC,YACjBF,YAAYX,YACZO,WAAWhD,MACb;AACAoC,+BAAqBiB,OAAO,GAAGD,YAAY5B,KAAK;QAClD,OAAO;AACL,gBAAM+B,aAAa,KAAK5C,OACtByC,YAAYjB,KACZiB,YAAYhD,KACd;AACA,eAAKe,aAAaoC,YAAYP,WAAWhD,MAAS;AAClD4C,iBAAOC,KAAKO,YAAYX,UAAU,EAAEK,QAASC,UAAS;AACpDQ,uBAAWpD,OAAO4C,MAAMK,YAAYX,WAAWM,IAAI,CAAC;UACtD,CAAC;QACH;MACF,CAAC;IACH;AAEA,QAAIxD,KAAK0C,SAAS,WAAW1C,KAAKiC,MAAMrC,OAAO,GAAG;AAChD,YAAME,SAAS2D,UACXA,QAAQ3D,OAAO2D,QAAQzC,MAAM,IAAI0C,gBACjC,KAAK9D,OAAO;AAChBiD,2BAAqB,MAAM/C,QAAQE,KAAKiC,KAAK;IAC/C;AAEA,SAAKpD,SAAS;AACd,SAAKR,SAAS;EAChB;EAEA4F,YAAY;AACV,WAAO,KAAKhG,QAAQiG,aAAa,iBAAiB,MAAM;EAC1D;EAEAC,KAAKxE,OAA0C;AAC7C,UAAMK,OAAO,KAAKoE,KAAKzE,KAAK,EAAE4C,IAAI;AAClC,QAAI,CAACvC,MAAM;AACT,aAAO,CAAC,MAAM,EAAE;IAClB;AAEA,UAAM,CAACxC,MAAMsC,MAAM,IAAIE;AACvB,WAAOxC,gBAAgB6G,aAAW,CAAC7G,MAAMsC,MAAM,IAAI,CAAC,MAAM,EAAE;EAC9D;EAEAC,KAAKJ,OAAoD;AACvD,QAAIA,UAAU,KAAKC,OAAO,GAAG;AAC3B,aAAO,KAAKG,KAAKJ,QAAQ,CAAC;IAC5B;AAEA,WAAO,KAAKgD,WAAWpF,QAAQoC,KAAK;EACtC;EAEA2E,QAAoE;AAAA,QAA9D3E,QAAKa,UAAAZ,SAAA,KAAAY,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG;AAAC,QAAEZ,SAAMY,UAAAZ,SAAA,KAAAY,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG+D,OAAOC;AAC/B,UAAMC,WAAWA,CACfjH,MACAkH,WACAC,eACG;AACH,UAAIL,QAAgC,CAAA;AACpC,UAAIM,aAAaD;AACjBnH,WAAK0C,SAAS2E,UACZH,WACAC,YACA,CAACG,OAAOC,YAAYC,gBAAgB;AAClC,YAAIzH,OAAOuH,KAAK,GAAG;AACjBR,gBAAMW,KAAKH,KAAK;QAClB,WAAWA,iBAAiBI,iBAAe;AACzCZ,kBAAQA,MAAMlC,OAAOqC,SAASK,OAAOC,YAAYH,UAAU,CAAC;QAC9D;AACAA,sBAAcI;MAChB,CACF;AACA,aAAOV;IACT;AACA,WAAOG,SAAS,MAAM9E,OAAOC,MAAM;EACrC;EAOAvB,WAAuC;AAAA,QAA9BS,YAAS0B,UAAAZ,SAAA,KAAAY,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG,CAAA;AAAE,QAAE2E,UAAO3E,UAAAZ,SAAA,KAAAY,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG,CAAC;AAClC,QAAI,KAAKpC;AAAO;AAChB,UAAMC,SAASS,WAAWqG,OAAO;AACjC,QAAIrG,UAAUc,SAAS,GAAG;AACxB,WAAKzB,QAAQc,KAAKC,gBAAQC,OAAOiG,iBAAiBtG,WAAWqG,OAAO;IACtE;EACF;EAEAf,KAAKzE,OAAe;AAClB,WAAO,MAAMyE,KAAKzE,KAAK,EAAE+B,MAAM,CAAC;EAClC;EAEApB,SAAS;EACP;EAKFvB,OAAOD,WAAoD;AACzD,QAAI,KAAKV,OAAO;AACd,UAAIO,MAAMC,QAAQE,SAAS,GAAG;AAC5B,aAAKV,QAAQ,KAAKA,MAAMgE,OAAOtD,SAAS;MAC1C;AACA;IACF;AACA,QAAIuG,SAAwBnG,gBAAQoG,QAAQC;AAC5C,QAAI,OAAOzG,cAAc,UAAU;AACjCuG,eAASvG;IACX;AACA,QAAI,CAACH,MAAMC,QAAQE,SAAS,GAAG;AAC7BA,kBAAY,KAAK0G,SAASC,YAAY;IACxC;AACA3G,gBAAYA,UAAU4G,OAAOC,WAAgB;AAAA,UAAf;QAAEC;MAAO,IAACD;AACtC,YAAMnI,OAAO,KAAKmG,KAAKiC,QAAQ,IAAI;AACnC,aAAOpI,QAAQ,CAACG,YAAYH,IAAI;IAClC,CAAC;AACD,QAAIsB,UAAUc,SAAS,GAAG;AACxB,WAAKzB,QAAQc,KAAKC,gBAAQC,OAAO0G,sBAAsBR,QAAQvG,SAAS;IAC1E;AACA,UAAMC,OAAOD,UAAUsD,OAAO,CAAA,CAAE,CAAC;AACjC,QAAItD,UAAUc,SAAS,GAAG;AACxB,WAAKzB,QAAQc,KAAKC,gBAAQC,OAAO2G,eAAeT,QAAQvG,SAAS;IACnE;EACF;EAEAiH,cAAcpG,OAAeiD,KAAapD,QAAiB;AAGzD,UAAM,CAAChC,IAAI,IAAI,KAAKmF,WAAYqD,OAAYA,aAAatI,YAAYiC,KAAK;AAC1E,QAAInC,QAAQA,KAAK6D,QAAQE,aAAaqB,OAAOjF,YAAYH,IAAI,GAAG;AAC9DA,WAAKI,cAAc4B,MAAM;IAC3B;EACF;EAEUf,gBAAgBwH,OAAkB;AAC1CA,UAAMC,eAAe;EACvB;EAEQ/D,oBAAoBF,OAAc;AACxC,UAAMC,eAA8B,CAAA;AAEpC,QAAIiE,oBAAoB,IAAI9D,oBAAAA,QAAM;AAClCJ,UAAMsB,QAAS6C,QAAO;AACpB,YAAM9D,SAAS8D,yBAAI9D;AACnB,UAAI,CAACA;AAAQ;AACb,UAAI,OAAOA,WAAW,UAAU;AAC9B,cAAM+D,WAAW/D,OAAOsB,MAAM,IAAI;AAClCyC,iBAAS3E,MAAM,GAAG,EAAE,EAAE6B,QAAS+C,UAAS;AACtCH,4BAAkB7D,OAAOgE,MAAMF,GAAGlD,UAAU;AAC5ChB,uBAAa+C,KAAK;YAChBvC,MAAM;YACNT,OAAOkE;YACPjD,YAAYkD,GAAGlD,cAAc,CAAC;UAChC,CAAC;AACDiD,8BAAoB,IAAI9D,oBAAAA,QAAM;QAChC,CAAC;AACD,cAAMrC,OAAOqG,SAASA,SAASzG,SAAS,CAAC;AACzC,YAAII,MAAM;AACRmG,4BAAkB7D,OAAOtC,MAAMoG,GAAGlD,UAAU;QAC9C;MACF,OAAO;AACL,cAAMN,MAAMS,OAAOC,KAAKhB,MAAM,EAAE,CAAC;AACjC,YAAI,CAACM;AAAK;AACV,YAAI,KAAK3B,MAAM2B,KAAK1B,MAAMqF,MAAM,GAAG;AACjCJ,4BAAkBlB,KAAKmB,EAAE;QAC3B,OAAO;AACL,cAAID,kBAAkBvG,OAAO,GAAG;AAC9BsC,yBAAa+C,KAAK;cAChBvC,MAAM;cACNT,OAAOkE;cACPjD,YAAY,CAAC;YACf,CAAC;UACH;AACAiD,8BAAoB,IAAI9D,oBAAAA,QAAM;AAC9BH,uBAAa+C,KAAK;YAChBvC,MAAM;YACNE;YACA/B,OAAOyB,OAAOM,GAAG;YACjBM,YAAYkD,GAAGlD,cAAc,CAAC;UAChC,CAAC;QACH;MACF;IACF,CAAC;AAED,QAAIiD,kBAAkBvG,OAAO,GAAG;AAC9BsC,mBAAa+C,KAAK;QAChBvC,MAAM;QACNT,OAAOkE;QACPjD,YAAY,CAAC;MACf,CAAC;IACH;AAEA,WAAOhB;EACT;EAEQ6B,YAAYb,YAA0BO,SAAgB;AAC5D,QAAIlC;AACJ,UAAMyB,UAAwB,CAAC;AAE/BK,WAAOmD,QAAQtD,UAAU,EAAEK,QAAQkD,WAAkB;AAAA,UAAjB,CAAC7D,KAAK/B,KAAK,IAAC4F;AAC9C,YAAMC,cAAc,KAAKzF,MAAM2B,KAAK1B,MAAMC,QAAQD,MAAMyF,IAAI,KAAK;AACjE,UAAID,aAAa;AACfnF,mBAAWqB;MACb,OAAO;AACLI,gBAAQJ,GAAG,IAAI/B;MACjB;IACF,CAAC;AAED,UAAMiD,QAAQ,KAAK1C,OACjBG,YAAY,KAAKF,QAAQC,aAAaC,UACtCA,WAAW2B,WAAW3B,QAAQ,IAAId,MACpC;AAEA,SAAKmB,aAAakC,OAAOL,WAAWhD,MAAS;AAE7C,UAAMb,SAASkE,MAAMlE,OAAO;AAC5ByD,WAAOmD,QAAQxD,OAAO,EAAEO,QAAQqD,WAAkB;AAAA,UAAjB,CAAChE,KAAK/B,KAAK,IAAC+F;AAC3C9C,YAAMnD,SAAS,GAAGf,QAAQgD,KAAK/B,KAAK;IACtC,CAAC;AAED,WAAOiD;EACT;AACF;AAtXE,cADIjG,QACG0D,YAAW;AAClB,cAFI1D,QAEGgJ,aAAY;AACnB,cAHIhJ,QAGGiJ,WAAU;AACjB,cAJIjJ,QAIGyD,gBAAe7D;AACtB,cALII,QAKGkJ,mBAAkB,CAACtJ,OAAOC,YAAYsJ,iBAAS;AAoXxD,SAASnE,qBACPoE,QACAtH,OACAuH,gBACA;AACAA,iBAAeC,OAAO,CAACxH,QAAOyG,OAAO;AACnC,UAAMxG,SAASwH,uBAAGxH,OAAOwG,EAAE;AAC3B,QAAIlD,aAAakD,GAAGlD,cAAc,CAAC;AACnC,QAAIkD,GAAG9D,UAAU,MAAM;AACrB,UAAI,OAAO8D,GAAG9D,WAAW,UAAU;AACjC,cAAMgE,OAAOF,GAAG9D;AAChB2E,eAAOnG,SAASnB,QAAO2G,IAAI;AAC3B,cAAM,CAACnC,IAAI,IAAI8C,OAAOtE,WAAW0B,YAAU1E,MAAK;AAChD,cAAMqD,UAAUC,cAAckB,IAAI;AAClCjB,qBAAaC,iCAAaC,KAAKJ,SAASE,UAAU,KAAK,CAAC;MAC1D,WAAW,OAAOkD,GAAG9D,WAAW,UAAU;AACxC,cAAMM,MAAMS,OAAOC,KAAK8C,GAAG9D,MAAM,EAAE,CAAC;AACpC,YAAIM,OAAO;AAAM,iBAAOjD;AACxBsH,eAAOnG,SAASnB,QAAOiD,KAAKwD,GAAG9D,OAAOM,GAAG,CAAC;AAC1C,cAAMyE,gBAAgBJ,OAAOjG,OAAOC,MAAM2B,KAAK1B,MAAMqF,MAAM,KAAK;AAChE,YAAIc,eAAe;AACjB,gBAAM,CAAClD,IAAI,IAAI8C,OAAOtE,WAAW0B,YAAU1E,MAAK;AAChD,gBAAMqD,UAAUC,cAAckB,IAAI;AAClCjB,uBAAaC,iCAAaC,KAAKJ,SAASE,UAAU,KAAK,CAAC;QAC1D;MACF;IACF;AACAG,WAAOC,KAAKJ,UAAU,EAAEK,QAASX,SAAQ;AACvCqE,aAAOtG,SAAShB,QAAOC,QAAQgD,KAAKM,WAAWN,GAAG,CAAC;IACrD,CAAC;AACD,WAAOjD,SAAQC;EACjB,GAAGD,KAAK;AACV;AAEA,IAAA,iBAAe9B;;;AChbf,IAAAyJ,sBAAkB;;;ACPlB,IAAMC,SAAS;EACbC,OAAOC,MAAMC;EACbC,WAAW,CAAC,SAAS,UAAU,SAAS;AAC1C;AAEA,IAAMC,iBAAiB,IAAIC,WAAW,SAAS,SAASN,MAAM;AAC9D,IAAMO,aAAa,IAAIC,kBAAgB,SAAS,YAAYR,MAAM;AAClE,IAAMS,aAAa,IAAIC,kBAAgB,SAAS,cAAcV,MAAM;;;ACPpE,IAAMW,kBAAN,cAA8BC,kBAAgB;EAC5CC,MAAMC,SAAsB;AAC1B,QAAID,QAAQ,MAAMA,MAAMC,OAAO;AAC/B,QAAI,CAACD,MAAME,WAAW,MAAM;AAAG,aAAOF;AACtCA,YAAQA,MAAMG,QAAQ,WAAW,EAAE,EAAEA,QAAQ,WAAW,EAAE;AAC1D,UAAMC,MAAMJ,MACTK,MAAM,GAAG,EACTC,IAAKC,eAAe,KAAIC,SAASD,WAAW,EAAE,EAAEE,SAAS,EAAE,CAAE,GAAEC,MAAM,EAAE,CAAC,EACxEC,KAAK,EAAE;AACV,WAAQ,IAAGP,GAAI;EACjB;AACF;AAEA,IAAMQ,aAAa,IAAIC,kBAAgB,SAAS,YAAY;EAC1DC,OAAOC,MAAMC;AACf,CAAC;AACD,IAAMC,aAAa,IAAInB,gBAAgB,SAAS,SAAS;EACvDgB,OAAOC,MAAMC;AACf,CAAC;;;ACjBD,IAAME,kBAAkB,IAAIC,kBAAgB,cAAc,SAAS;EACjEC,OAAOC,MAAMC;AACf,CAAC;AACD,IAAMC,kBAAkB,IAAIC,gBAAgB,cAAc,oBAAoB;EAC5EJ,OAAOC,MAAMC;AACf,CAAC;;;ACAD,IAAMG,qBAAN,cAAiCC,kBAAU;EACzC,OAAOC,OAAOC,OAAe;AAC3B,UAAMC,UAAU,MAAMF,OAAOC,KAAK;AAClCC,YAAQC,aAAa,cAAc,OAAO;AAC1C,WAAOD;EACT;EAEAE,KAAKC,OAAeC,QAAgB;AAClC,WACE,KAAKC,SAEFC,IAAKC,WAAWA,MAAMH,OAAO,KAAK,IAAI,KAAKG,MAAMP,QAAQQ,SAAU,EACnEC,KAAK,IAAI,EACTC,MAAMP,OAAOA,QAAQC,MAAM;EAElC;EAEAO,KAAKR,OAAeC,QAAgB;AAGlC,WAAQ;EAASQ,WAAW,KAAKV,KAAKC,OAAOC,MAAM,CAAC,CAAE;;EACxD;AACF;AAEA,IAAMS,YAAN,cAAwBC,MAAM;EAG5B,OAAOC,WAAW;AAChBC,UAAMD,SAASnB,kBAAkB;EACnC;AACF;AALE,cADIiB,WACGI,OAAM;AAOf,IAAMC,OAAN,cAAmBC,eAAO;AAAA;AAC1BD,KAAKE,WAAW;AAChBF,KAAKG,UAAU;AAEfR,UAAUO,WAAW;AACrBP,UAAUS,YAAY;AACtBT,UAAUQ,UAAU;AACpBzB,mBAAmBwB,WAAW;AAC9BxB,mBAAmB0B,YAAY;AAC/B1B,mBAAmByB,UAAU;AAE7BzB,mBAAmB2B,kBAAkB,CAACV,SAAS;AAE/CA,UAAUU,kBAAkB,CAACC,OAAUC,eAAOC,cAAM;AACpDb,UAAUc,oBAAoB/B;;;ACpD9B,IAAMgC,UAAS;EACbC,OAAOC,MAAMC;EACbC,WAAW,CAAC,KAAK;AACnB;AAEA,IAAMC,qBAAqB,IAAIC,WAAW,aAAa,OAAON,OAAM;AACpE,IAAMO,iBAAiB,IAAIC,kBAAgB,aAAa,gBAAgBR,OAAM;AAC9E,IAAMS,iBAAiB,IAAIC,kBAAgB,aAAa,aAAaV,OAAM;;;ACP3E,IAAMW,UAAS;EACbC,OAAOC,MAAMC;EACbC,WAAW,CAAC,SAAS,WAAW;AAClC;AAEA,IAAMC,YAAY,IAAIC,kBAAgB,QAAQ,WAAWN,OAAM;AAE/D,IAAMO,sBAAN,cAAkCC,kBAAgB;EAChDC,MAAMC,MAAmB;AACvB,WAAO,MAAMD,MAAMC,IAAI,EAAEC,QAAQ,SAAS,EAAE;EAC9C;AACF;AAEA,IAAMC,YAAY,IAAIL,oBAAoB,QAAQ,eAAeP,OAAM;;;ACbvE,IAAMa,YAAY,IAAIC,kBAAgB,QAAQ,WAAW;EACvDC,OAAOC,MAAMC;EACbC,WAAW,CAAC,SAAS,SAAS,MAAM;AACtC,CAAC;AACD,IAAMC,YAAY,IAAIC,kBAAgB,QAAQ,aAAa;EACzDL,OAAOC,MAAMC;EACbC,WAAW,CAAC,QAAQ,QAAQ,MAAM;AACpC,CAAC;;;ACRD,IAAAG,sBAAoC;AASpC,IAAMC,SAAQC,eAAO,gBAAgB;AAErC,IAAMC,WAAW,OAAOC,KAAKC,UAAUC,QAAQ,IAAI,YAAY;AA+C/D,IAAMC,WAAN,MAAMA,kBAAiBC,eAAwB;EAG7C,OAAOC,MAAMC,KAAoBC,SAAwB;AACvD,QACG,CAAC,UAAU,WAAW,WAAW,UAAU,EAAYC,KAAMC,SAAQ;AACpE,aAAO,CAAC,CAACF,QAAQE,GAAG,MAAMH,IAAIG,GAAG,KAAKF,QAAQE,GAAG,MAAM;IACzD,CAAC,GACD;AACA,aAAO;IACT;AACA,WAAOF,QAAQE,QAAQH,IAAIG,OAAOF,QAAQE,QAAQH,IAAII;EACxD;EAIAC,YAAYC,OAAcC,SAAmC;AAC3D,UAAMD,OAAOC,OAAO;AACpB,SAAKC,WAAW,CAAC;AAEjBC,WAAOC,KAAK,KAAKH,QAAQC,QAAQ,EAAEG,QAASC,UAAS;AAEnD,UAAI,KAAKL,QAAQC,SAASI,IAAI,GAAG;AAE/B,aAAKC,WAAW,KAAKN,QAAQC,SAASI,IAAI,CAAC;MAC7C;IACF,CAAC;AACD,SAAKC,WAAW;MAAEV,KAAK;MAASW,UAAU;IAAK,GAAG,KAAKC,WAAW;AAClE,SAAKF,WACH;MAAEV,KAAK;MAASa,SAAS;MAAMC,SAAS;MAAMC,QAAQ;IAAK,GAC3D,MAAM;IAAC,CACT;AACA,QAAI,WAAWxB,KAAKC,UAAUwB,SAAS,GAAG;AAExC,WAAKN,WACH;QAAEV,KAAK;MAAY,GACnB;QAAEiB,WAAW;MAAK,GAClB,KAAKC,eACP;AACA,WAAKR,WACH;QAAEV,KAAK;MAAS,GAChB;QAAEiB,WAAW;MAAK,GAClB,KAAKE,YACP;IACF,OAAO;AACL,WAAKT,WACH;QAAEV,KAAK;MAAY,GACnB;QAAEiB,WAAW;QAAMG,QAAQ;MAAO,GAClC,KAAKF,eACP;AACA,WAAKR,WACH;QAAEV,KAAK;MAAS,GAChB;QAAEiB,WAAW;QAAMI,QAAQ;MAAO,GAClC,KAAKF,YACP;IACF;AACA,SAAKT,WACH;MAAEV,KAAK;IAAY,GACnB;MAAEiB,WAAW;IAAM,GACnB,KAAKK,iBACP;AACA,SAAKZ,WACH;MAAEV,KAAK;IAAS,GAChB;MAAEiB,WAAW;IAAM,GACnB,KAAKK,iBACP;AACA,SAAKZ,WACH;MACEV,KAAK;MACLe,QAAQ;MACRD,SAAS;MACTD,SAAS;MACTF,UAAU;IACZ,GACA;MAAEM,WAAW;MAAMM,QAAQ;IAAE,GAC7B,KAAKL,eACP;AACA,SAAKM,OAAO;EACd;EAEAd,WACEe,YAOA;AAAA,QANAC,UAEmDC,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG,CAAC;AAAC,QACxDG,UAEmDH,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG,CAAC;AAEvD,UAAM7B,UAAUiC,UAAUN,UAAU;AACpC,QAAI3B,WAAW,MAAM;AACnBV,MAAAA,OAAM4C,KAAK,6CAA6ClC,OAAO;AAC/D;IACF;AACA,QAAI,OAAO4B,YAAY,YAAY;AACjCA,gBAAU;QAAEI,SAASJ;MAAQ;IAC/B;AACA,QAAI,OAAOI,YAAY,YAAY;AACjCA,gBAAU;QAAEA;MAAQ;IACtB;AACA,UAAMvB,OAAO0B,MAAMC,QAAQpC,QAAQE,GAAG,IAAIF,QAAQE,MAAM,CAACF,QAAQE,GAAG;AACpEO,SAAKC,QAASR,SAAQ;AACpB,YAAMmC,gBAAgB;QACpB,GAAGrC;QACHE;QACA,GAAG0B;QACH,GAAGI;MACL;AACA,WAAKzB,SAAS8B,cAAcnC,GAAG,IAAI,KAAKK,SAAS8B,cAAcnC,GAAG,KAAK,CAAA;AACvE,WAAKK,SAAS8B,cAAcnC,GAAG,EAAEoC,KAAKD,aAAa;IACrD,CAAC;EACH;EAEAX,SAAS;AACP,SAAKrB,MAAMkC,KAAKC,iBAAiB,WAAYzC,SAAQ;AACnD,UAAIA,IAAI0C,oBAAoB1C,IAAI2C;AAAa;AAI7C,YAAMA,cACJ3C,IAAI4C,YAAY,QAAQ5C,IAAIG,QAAQ,WAAWH,IAAIG,QAAQ;AAC7D,UAAIwC;AAAa;AAEjB,YAAMnC,YAAY,KAAKA,SAASR,IAAIG,GAAG,KAAK,CAAA,GAAI0C,OAC9C,KAAKrC,SAASR,IAAII,KAAK,KAAK,CAAA,CAC9B;AACA,YAAM0C,UAAUtC,SAASuC,OAAQ9C,aAC/BJ,UAASE,MAAMC,KAAKC,OAAO,CAC7B;AACA,UAAI6C,QAAQf,WAAW;AAAG;AAE1B,YAAMiB,OAAOC,MAAMC,KAAKlD,IAAImD,QAAQ,IAAI;AACxC,UAAIH,QAAQA,KAAKI,WAAW,KAAK9C,MAAM8C;AAAQ;AAC/C,YAAMC,QAAQ,KAAK/C,MAAMgD,aAAa;AACtC,UAAID,SAAS,QAAQ,CAAC,KAAK/C,MAAMiD,SAAS;AAAG;AAC7C,YAAM,CAACC,MAAM9B,MAAM,IAAI,KAAKpB,MAAMmD,QAAQJ,MAAMK,KAAK;AACrD,YAAM,CAACC,WAAWC,WAAW,IAAI,KAAKtD,MAAMuD,QAAQR,MAAMK,KAAK;AAC/D,YAAM,CAACI,SAASC,SAAS,IACvBV,MAAMtB,WAAW,IACb,CAAC4B,WAAWC,WAAW,IACvB,KAAKtD,MAAMuD,QAAQR,MAAMK,QAAQL,MAAMtB,MAAM;AACnD,YAAMiC,aACJL,qBAAqBM,aACjBN,UAAUO,MAAM,EAAEC,MAAM,GAAGP,WAAW,IACtC;AACN,YAAMQ,aACJN,mBAAmBG,aAAWH,QAAQI,MAAM,EAAEC,MAAMJ,SAAS,IAAI;AACnE,YAAMM,aAAa;QACjBjD,WAAWiC,MAAMtB,WAAW;;QAE5BuC,OAAOjB,MAAMtB,WAAW,KAAKyB,KAAKzB,OAAO,KAAK;QAC9CwC,QAAQ,KAAKjE,MAAMkE,UAAUnB,KAAK;QAClCG;QACA9B;QACAH,QAAQyC;QACRxC,QAAQ4C;QACRK,OAAOzE;MACT;AACA,YAAM0E,YAAY5B,QAAQ5C,KAAMD,aAAY;AAC1C,YACEA,QAAQmB,aAAa,QACrBnB,QAAQmB,cAAciD,WAAWjD,WACjC;AACA,iBAAO;QACT;AACA,YAAInB,QAAQqE,SAAS,QAAQrE,QAAQqE,UAAUD,WAAWC,OAAO;AAC/D,iBAAO;QACT;AACA,YAAIrE,QAAQyB,UAAU,QAAQzB,QAAQyB,WAAW2C,WAAW3C,QAAQ;AAClE,iBAAO;QACT;AACA,YAAIU,MAAMC,QAAQpC,QAAQsE,MAAM,GAAG;AAEjC,cAAItE,QAAQsE,OAAOI,MAAO/D,UAASyD,WAAWE,OAAO3D,IAAI,KAAK,IAAI,GAAG;AACnE,mBAAO;UACT;QACF,WAAW,OAAOX,QAAQsE,WAAW,UAAU;AAE7C,cACE,CAAC9D,OAAOC,KAAKT,QAAQsE,MAAM,EAAEI,MAAO/D,UAAS;AAE3C,gBAAIX,QAAQsE,OAAO3D,IAAI,MAAM;AAC3B,qBAAOyD,WAAWE,OAAO3D,IAAI,KAAK;AAEpC,gBAAIX,QAAQsE,OAAO3D,IAAI,MAAM;AAC3B,qBAAOyD,WAAWE,OAAO3D,IAAI,KAAK;AAEpC,mBAAOgE,gBAAQ3E,QAAQsE,OAAO3D,IAAI,GAAGyD,WAAWE,OAAO3D,IAAI,CAAC;UAC9D,CAAC,GACD;AACA,mBAAO;UACT;QACF;AACA,YAAIX,QAAQsB,UAAU,QAAQ,CAACtB,QAAQsB,OAAO7B,KAAK2E,WAAW9C,MAAM,GAAG;AACrE,iBAAO;QACT;AACA,YAAItB,QAAQuB,UAAU,QAAQ,CAACvB,QAAQuB,OAAO9B,KAAK2E,WAAW7C,MAAM,GAAG;AACrE,iBAAO;QACT;AAEA,eAAOvB,QAAQgC,QAAQ4C,KAAK,MAAMxB,OAAOgB,YAAYpE,OAAO,MAAM;MACpE,CAAC;AACD,UAAIyE,WAAW;AACb1E,YAAI8E,eAAe;MACrB;IACF,CAAC;EACH;EAEAzD,gBAAgBgC,OAAcxB,SAAkB;AAE9C,UAAME,SAAS,kCAAkCrC,KAAKmC,QAAQN,MAAM,IAChE,IACA;AACJ,QAAI8B,MAAMK,UAAU,KAAK,KAAKpD,MAAMyE,UAAU,KAAK;AAAG;AACtD,QAAIC,UAAU,CAAC;AACf,UAAM,CAACxB,IAAI,IAAI,KAAKlD,MAAMmD,QAAQJ,MAAMK,KAAK;AAC7C,QAAIuB,QAAQ,IAAIC,oBAAAA,QAAM,EAAEC,OAAO9B,MAAMK,QAAQ3B,MAAM,EAAEqD,OAAOrD,MAAM;AAClE,QAAIF,QAAQH,WAAW,GAAG;AAExB,YAAM,CAAC2D,IAAI,IAAI,KAAK/E,MAAMmD,QAAQJ,MAAMK,QAAQ,CAAC;AACjD,UAAI2B,MAAM;AACR,cAAMC,kBACJD,KAAKE,QAAQC,aAAa,WAAWH,KAAKtD,OAAO,KAAK;AACxD,YAAI,CAACuD,iBAAiB;AAEpB,gBAAMG,aAAajC,KAAKwB,QAAQ;AAChC,gBAAMU,cAAc,KAAKpF,MAAMkE,UAAUnB,MAAMK,QAAQ,GAAG,CAAC;AAC3DsB,oBAAUW,iCAAaC,KAAKH,YAAYC,WAAW,KAAK,CAAC;AACzD,cAAIjF,OAAOC,KAAKsE,OAAO,EAAEjD,SAAS,GAAG;AAEnC,kBAAM8D,cAAc,IAAIX,oBAAAA,QAAM,EAE3BC,OAAO9B,MAAMK,QAAQF,KAAKzB,OAAO,IAAI,CAAC,EACtCoD,OAAO,GAAGH,OAAO;AACpBC,oBAAQA,MAAMa,QAAQD,WAAW;UACnC;QACF;MACF;IACF;AACA,SAAKvF,MAAMyF,eAAed,OAAOhC,MAAM+C,QAAQC,IAAI;AACnD,SAAK3F,MAAM4F,MAAM;EACnB;EAEA5E,aAAa+B,OAAcxB,SAAkB;AAE3C,UAAME,SAAS,kCAAkCrC,KAAKmC,QAAQL,MAAM,IAChE,IACA;AACJ,QAAI6B,MAAMK,SAAS,KAAKpD,MAAMyE,UAAU,IAAIhD;AAAQ;AACpD,QAAIiD,UAAU,CAAC;AACf,UAAM,CAACxB,IAAI,IAAI,KAAKlD,MAAMmD,QAAQJ,MAAMK,KAAK;AAC7C,QAAIuB,QAAQ,IAAIC,oBAAAA,QAAM,EAAEC,OAAO9B,MAAMK,KAAK,EAAE0B,OAAOrD,MAAM;AAEzD,QAAIF,QAAQH,UAAU8B,KAAKzB,OAAO,IAAI,GAAG;AACvC,YAAM,CAACoE,IAAI,IAAI,KAAK7F,MAAMmD,QAAQJ,MAAMK,QAAQ,CAAC;AACjD,UAAIyC,MAAM;AAER,cAAMV,aAAajC,KAAKwB,QAAQ;AAChC,cAAMoB,cAAc,KAAK9F,MAAMkE,UAAUnB,MAAMK,OAAO,CAAC;AACvDsB,kBAAUW,iCAAaC,KAAKH,YAAYW,WAAW,KAAK,CAAC;AACzD,YAAI3F,OAAOC,KAAKsE,OAAO,EAAEjD,SAAS,GAAG;AACnCkD,kBAAQA,MAAME,OAAOgB,KAAKpE,OAAO,IAAI,CAAC,EAAEoD,OAAO,GAAGH,OAAO;QAC3D;MACF;IACF;AACA,SAAK1E,MAAMyF,eAAed,OAAOhC,MAAM+C,QAAQC,IAAI;AACnD,SAAK3F,MAAM4F,MAAM;EACnB;EAEAzE,kBAAkB4B,OAAc;AAC9BgD,gBAAY;MAAEhD;MAAO/C,OAAO,KAAKA;IAAM,CAAC;AACxC,SAAKA,MAAM4F,MAAM;EACnB;EAEAnF,YAAYsC,OAAcxB,SAAkB;AAC1C,UAAMyE,cAAc7F,OAAOC,KAAKmB,QAAQ0C,MAAM,EAAEgC,OAC9C,CAACvB,SAAkCT,WAAW;AAC5C,UACE,KAAKjE,MAAM8C,OAAOoD,MAAMjC,QAAQkC,MAAMC,KAAK,KAC3C,CAACtE,MAAMC,QAAQR,QAAQ0C,OAAOA,MAAM,CAAC,GACrC;AACAS,gBAAQT,MAAM,IAAI1C,QAAQ0C,OAAOA,MAAM;MACzC;AACA,aAAOS;IACT,GACA,CAAC,CACH;AACA,UAAMC,QAAQ,IAAIC,oBAAAA,QAAM,EACrBC,OAAO9B,MAAMK,KAAK,EAClB0B,OAAO/B,MAAMtB,MAAM,EACnB4E,OAAO,MAAML,WAAW;AAC3B,SAAKhG,MAAMyF,eAAed,OAAOhC,MAAM+C,QAAQC,IAAI;AACnD,SAAK3F,MAAMsG,aAAavD,MAAMK,QAAQ,GAAGT,MAAM+C,QAAQa,MAAM;AAC7D,SAAKvG,MAAM4F,MAAM;EACnB;AACF;AAEA,IAAMY,iBAAkC;EACtCtG,UAAU;IACRuG,MAAMC,kBAAkB,MAAM;IAC9BC,QAAQD,kBAAkB,QAAQ;IAClCE,WAAWF,kBAAkB,WAAW;IACxCG,QAAQ;;MAENhH,KAAK;MACLoE,QAAQ,CAAC,cAAc,UAAU,MAAM;MACvCtC,QAAQoB,OAAOxB,SAAS;AACtB,YAAIA,QAAQT,aAAaS,QAAQH,WAAW;AAAG,iBAAO;AACtD,aAAKpB,MAAMiE,OAAO,UAAU,MAAMtB,MAAM+C,QAAQC,IAAI;AACpD,eAAO;MACT;IACF;IACAmB,SAAS;MACPjH,KAAK;MACLW,UAAU;MACVyD,QAAQ,CAAC,cAAc,UAAU,MAAM;;MAEvCtC,QAAQoB,OAAOxB,SAAS;AACtB,YAAIA,QAAQT,aAAaS,QAAQH,WAAW;AAAG,iBAAO;AACtD,aAAKpB,MAAMiE,OAAO,UAAU,MAAMtB,MAAM+C,QAAQC,IAAI;AACpD,eAAO;MACT;IACF;IACA,qBAAqB;MACnB9F,KAAK;MACLiB,WAAW;MACXN,UAAU;MACVE,SAAS;MACTC,SAAS;MACTC,QAAQ;MACRqD,QAAQ,CAAC,UAAU,MAAM;MACzB7C,QAAQ;MACRO,QAAQoB,OAAOxB,SAAS;AACtB,YAAIA,QAAQ0C,OAAO4C,UAAU,MAAM;AACjC,eAAK7G,MAAMiE,OAAO,UAAU,MAAMtB,MAAM+C,QAAQC,IAAI;QACtD,WAAWpE,QAAQ0C,OAAO8C,QAAQ,MAAM;AACtC,eAAK/G,MAAMiE,OAAO,QAAQ,OAAOtB,MAAM+C,QAAQC,IAAI;QACrD;MACF;IACF;IACA,qBAAqBqB,qBAAqB,IAAI;IAC9C,sBAAsBA,qBAAqB,KAAK;IAChD,cAAc;MACZnH,KAAK;MACLW,UAAU;MACVM,WAAW;MACXG,QAAQ;MACRU,QAAQoB,OAAO;AACb,aAAK/C,MAAMiH,WAAWlE,MAAMK,QAAQ,GAAG,GAAGT,MAAM+C,QAAQC,IAAI;MAC9D;IACF;IACAuB,KAAK;MACHrH,KAAK;MACL8B,QAAQoB,OAAOxB,SAAS;AACtB,YAAIA,QAAQ0C,OAAOkD;AAAO,iBAAO;AACjC,aAAKnH,MAAMoH,QAAQC,OAAO;AAC1B,cAAM1C,QAAQ,IAAIC,oBAAAA,QAAM,EACrBC,OAAO9B,MAAMK,KAAK,EAClB0B,OAAO/B,MAAMtB,MAAM,EACnB4E,OAAO,GAAI;AACd,aAAKrG,MAAMyF,eAAed,OAAOhC,MAAM+C,QAAQC,IAAI;AACnD,aAAK3F,MAAMoH,QAAQC,OAAO;AAC1B,aAAKrH,MAAMsG,aAAavD,MAAMK,QAAQ,GAAGT,MAAM+C,QAAQa,MAAM;AAC7D,eAAO;MACT;IACF;IACA,0BAA0B;MACxB1G,KAAK;MACLiB,WAAW;MACXmD,QAAQ,CAAC,YAAY;MACrBD,OAAO;MACPrC,UAAU;AACR,aAAK3B,MAAMiE,OAAO,cAAc,OAAOtB,MAAM+C,QAAQC,IAAI;MAC3D;IACF;IACA,oBAAoB;MAClB9F,KAAK;MACLiB,WAAW;MACXmD,QAAQ,CAAC,MAAM;MACfD,OAAO;MACPrC,QAAQoB,OAAOxB,SAAS;AACtB,cAAMmD,UAAmC;UAAEqC,MAAM;QAAM;AACvD,YAAIxF,QAAQ0C,OAAO4C,QAAQ;AACzBnC,kBAAQmC,SAAS;QACnB;AACA,aAAK7G,MAAMsH,WACTvE,MAAMK,OACNL,MAAMtB,QACNiD,SACA/B,MAAM+C,QAAQC,IAChB;MACF;IACF;IACA,mBAAmB;MACjB9F,KAAK;MACLiB,WAAW;MACXmD,QAAQ;QAAE8C,MAAM;MAAU;MAC1BpF,QAAQoB,OAAO;AACb,cAAM,CAACG,MAAM9B,MAAM,IAAI,KAAKpB,MAAMmD,QAAQJ,MAAMK,KAAK;AACrD,cAAMsB,UAAU;;UAEd,GAAGxB,KAAKwB,QAAQ;UAChBqC,MAAM;QACR;AACA,cAAMpC,QAAQ,IAAIC,oBAAAA,QAAM,EACrBC,OAAO9B,MAAMK,KAAK,EAClBiD,OAAO,MAAM3B,OAAO,EAEpBG,OAAO3B,KAAKzB,OAAO,IAAIL,SAAS,CAAC,EACjCyD,OAAO,GAAG;UAAEkC,MAAM;QAAY,CAAC;AAClC,aAAK/G,MAAMyF,eAAed,OAAOhC,MAAM+C,QAAQC,IAAI;AACnD,aAAK3F,MAAMsG,aAAavD,MAAMK,QAAQ,GAAGT,MAAM+C,QAAQa,MAAM;AAC7D,aAAKvG,MAAMuH,wBAAwB;MACrC;IACF;IACA,gBAAgB;MACd1H,KAAK;MACLiB,WAAW;MACXmD,QAAQ,CAAC,QAAQ;MACjB/C,QAAQ;MACRS,QAAQoB,OAAOxB,SAAS;AACtB,cAAM,CAAC2B,MAAM9B,MAAM,IAAI,KAAKpB,MAAMmD,QAAQJ,MAAMK,KAAK;AACrD,cAAMuB,QAAQ,IAAIC,oBAAAA,QAAM,EACrBC,OAAO9B,MAAMK,KAAK,EAClBiD,OAAO,MAAM9E,QAAQ0C,MAAM,EAE3BY,OAAO3B,KAAKzB,OAAO,IAAIL,SAAS,CAAC,EACjCyD,OAAO,GAAG;UAAE2C,QAAQ;QAAK,CAAC;AAC7B,aAAKxH,MAAMyF,eAAed,OAAOhC,MAAM+C,QAAQC,IAAI;AACnD,aAAK3F,MAAMsG,aAAavD,MAAMK,QAAQ,GAAGT,MAAM+C,QAAQa,MAAM;AAC7D,aAAKvG,MAAMuH,wBAAwB;MACrC;IACF;IACA,mBAAmB;MACjB1H,KAAK;MACLoE,QAAQ,CAAC,OAAO;MAChBnD,WAAW;MACXM,QAAQ;MACRO,UAAU;MAAC;IACb;IACA,gBAAgB;MACd9B,KAAK;MACLoE,QAAQ,CAAC,OAAO;MAChBnD,WAAW;MACXI,QAAQ;MACRS,UAAU;MAAC;IACb;IACA,eAAe;MACb9B,KAAK;MACLW,UAAU;MACVyD,QAAQ,CAAC,OAAO;MAChBtC,QAAQoB,OAAO;AACb,cAAM0E,SAAS,KAAKzH,MAAM0H,UAAU,OAAO;AAC3C,YAAID,QAAQ;AAEV,gBAAM,CAACN,OAAOQ,KAAKC,MAAMxG,MAAM,IAAIqG,OAAOI,SAAS9E,KAAK;AACxD,gBAAM+E,QAAQC,UAAUZ,OAAOQ,KAAKC,MAAMxG,MAAM;AAChD,cAAI0G,SAAS;AAAM;AACnB,cAAI1E,QAAQ+D,MAAM/F,OAAO;AACzB,cAAI0G,QAAQ,GAAG;AACb,kBAAMnD,QAAQ,IAAIC,oBAAAA,QAAM,EAAEC,OAAOzB,KAAK,EAAEiD,OAAO,IAAI;AACnD,iBAAKrG,MAAMyF,eAAed,OAAOhC,MAAM+C,QAAQC,IAAI;AACnD,iBAAK3F,MAAMsG,aACTvD,MAAMK,QAAQ,GACdL,MAAMtB,QACNkB,MAAM+C,QAAQa,MAChB;UACF,WAAWuB,QAAQ,GAAG;AACpB1E,qBAAS+D,MAAM1F,OAAO;AACtB,kBAAMkD,QAAQ,IAAIC,oBAAAA,QAAM,EAAEC,OAAOzB,KAAK,EAAEiD,OAAO,IAAI;AACnD,iBAAKrG,MAAMyF,eAAed,OAAOhC,MAAM+C,QAAQC,IAAI;AACnD,iBAAK3F,MAAMsG,aAAalD,OAAOT,MAAM+C,QAAQC,IAAI;UACnD;QACF;MACF;IACF;IACA,aAAa;MACX9F,KAAK;MACLW,UAAU;MACVyD,QAAQ,CAAC,OAAO;MAChBtC,QAAQoB,OAAOxB,SAAS;AACtB,cAAM;UAAE4C;UAAOjB,MAAM0E;QAAK,IAAIrG;AAC9B,cAAMH,SAASwG,KAAKxG,OAAO,KAAKpB,MAAM8C,MAAM;AAC5C,YAAIqB,MAAM3D,UAAU;AAClB,eAAKR,MAAMsG,aAAalF,SAAS,GAAGuB,MAAM+C,QAAQC,IAAI;QACxD,OAAO;AACL,eAAK3F,MAAMsG,aAAalF,SAASwG,KAAKnG,OAAO,GAAGkB,MAAM+C,QAAQC,IAAI;QACpE;MACF;IACF;IACA,iBAAiB;MACf9F,KAAK;MACLW,UAAU;MACVM,WAAW;MACXmD,QAAQ;QACN,cAAc;QACd+D,YAAY;QACZb,OAAO;MACT;MACAlG,QAAQ;MACRU,QAAQoB,OAAOxB,SAAS;AACtB,YAAI,KAAKvB,MAAM8C,OAAOoD,MAAM,MAAM,KAAK;AAAM,iBAAO;AACpD,cAAM;UAAEzE;QAAO,IAAIF,QAAQN;AAC3B,cAAM,CAACiC,MAAM9B,MAAM,IAAI,KAAKpB,MAAMmD,QAAQJ,MAAMK,KAAK;AACrD,YAAIhC,SAASK;AAAQ,iBAAO;AAC5B,YAAImC;AACJ,gBAAQrC,QAAQN,OAAOgH,KAAK,GAAC;UAC3B,KAAK;UACL,KAAK;AACHrE,oBAAQ;AACR;UACF,KAAK;AACHA,oBAAQ;AACR;UACF,KAAK;UACL,KAAK;AACHA,oBAAQ;AACR;UACF;AACEA,oBAAQ;QACZ;AACA,aAAK5D,MAAMkI,WAAWnF,MAAMK,OAAO,KAAKT,MAAM+C,QAAQC,IAAI;AAC1D,aAAK3F,MAAMoH,QAAQC,OAAO;AAC1B,cAAM1C,QAAQ,IAAIC,oBAAAA,QAAM,EACrBC,OAAO9B,MAAMK,QAAQhC,MAAM,EAC3B0D,OAAOrD,SAAS,CAAC,EAEjBoD,OAAO3B,KAAKzB,OAAO,IAAI,IAAIL,MAAM,EACjCyD,OAAO,GAAG;UAAEkC,MAAMnD;QAAM,CAAC;AAC5B,aAAK5D,MAAMyF,eAAed,OAAOhC,MAAM+C,QAAQC,IAAI;AACnD,aAAK3F,MAAMoH,QAAQC,OAAO;AAC1B,aAAKrH,MAAMsG,aAAavD,MAAMK,QAAQ3B,QAAQkB,MAAM+C,QAAQa,MAAM;AAClE,eAAO;MACT;IACF;IACA,aAAa;MACX1G,KAAK;MACLiB,WAAW;MACXmD,QAAQ,CAAC,YAAY;MACrBhD,QAAQ;MACRC,QAAQ;MACRS,QAAQoB,OAAO;AACb,cAAM,CAACG,MAAM9B,MAAM,IAAI,KAAKpB,MAAMmD,QAAQJ,MAAMK,KAAK;AACrD,YAAI+E,WAAW;AACf,YAAIC,MAAMlF;AACV,eACEkF,OAAO,QACPA,IAAI3G,OAAO,KAAK,KAChB2G,IAAI1D,QAAQ,EAAE,YAAY,GAC1B;AAEA0D,gBAAMA,IAAIrD;AACVoD,sBAAY;AAEZ,cAAIA,YAAY,GAAG;AACjB,kBAAMxD,QAAQ,IAAIC,oBAAAA,QAAM,EAErBC,OAAO9B,MAAMK,QAAQF,KAAKzB,OAAO,IAAIL,SAAS,CAAC,EAC/CyD,OAAO,GAAG;cAAE,cAAc;YAAK,CAAC,EAChCC,OAAO,CAAC;AACX,iBAAK9E,MAAMyF,eAAed,OAAOhC,MAAM+C,QAAQC,IAAI;AACnD,iBAAK3F,MAAMsG,aAAavD,MAAMK,QAAQ,GAAGT,MAAM+C,QAAQa,MAAM;AAC7D,mBAAO;UACT;QACF;AACA,eAAO;MACT;IACF;IACA,cAAc8B,sBAAsB,aAAa,KAAK;IACtD,oBAAoBA,sBAAsB,aAAa,IAAI;IAC3D,eAAeA,sBAAsB,cAAc,KAAK;IACxD,qBAAqBA,sBAAsB,cAAc,IAAI;IAC7D,cAAcC,sBAAsB,KAAK;IACzC,YAAYA,sBAAsB,IAAI;EACxC;AACF;AAEA/I,SAASgJ,WAAW/B;AAEpB,SAASQ,qBAAqBH,QAAgC;AAC5D,SAAO;IACLhH,KAAK;IACLW,UAAU,CAACqG;IACX5C,QAAQ;MAAE,cAAc;IAAK;IAC7BtC,QAAQoB,OAAKyF,MAAa;AAAA,UAAX;QAAErE;MAAM,IAACqE;AACtB,YAAMC,aAAY,KAAKzI,MAAM8C,OAAOoD,MAAM,YAAY;AAEtD,YAAM;QAAEwC;MAAI,IAAID;AAChB,UAAI1F,MAAMtB,WAAW,KAAK,CAAC0C,MAAM3D,UAAU;AACzC,aAAKR,MAAMkI,WAAWnF,MAAMK,OAAOsF,KAAK/F,MAAM+C,QAAQC,IAAI;AAC1D,aAAK3F,MAAMsG,aAAavD,MAAMK,QAAQsF,IAAIjH,QAAQkB,MAAM+C,QAAQa,MAAM;AACtE;MACF;AAEA,YAAMoC,QACJ5F,MAAMtB,WAAW,IACb,KAAKzB,MAAM4I,SAAS7F,MAAMK,OAAO,CAAC,IAClC,KAAKpD,MAAM4I,SAAS7F,KAAK;AAC/B,UAAI;QAAEK;QAAO3B;MAAO,IAAIsB;AACxB4F,YAAMtI,QAAQ,CAAC6C,MAAM2F,MAAM;AACzB,YAAIhC,QAAQ;AACV3D,eAAK4F,SAAS,GAAGJ,GAAG;AACpB,cAAIG,MAAM,GAAG;AACXzF,qBAASsF,IAAIjH;UACf,OAAO;AACLA,sBAAUiH,IAAIjH;UAChB;QAEF,WAAWyB,KAAK6F,QAAQC,YAAYC,WAAWP,GAAG,GAAG;AACnDxF,eAAKgG,SAAS,GAAGR,IAAIjH,MAAM;AAC3B,cAAIoH,MAAM,GAAG;AACXzF,qBAASsF,IAAIjH;UACf,OAAO;AACLA,sBAAUiH,IAAIjH;UAChB;QACF;MACF,CAAC;AACD,WAAKzB,MAAMmJ,OAAOxG,MAAM+C,QAAQC,IAAI;AACpC,WAAK3F,MAAMsG,aAAalD,OAAO3B,QAAQkB,MAAM+C,QAAQa,MAAM;IAC7D;EACF;AACF;AAEA,SAAS8B,sBACPxI,KACAW,UACe;AACf,QAAM4I,QAAQvJ,QAAQ,cAAc,WAAW;AAC/C,SAAO;IACLA;IACAW;IACAI,QAAQ;IACR,CAACwI,KAAK,GAAG;IACTzH,QAAQoB,OAAO;AACb,UAAI;QAAEK;MAAM,IAAIL;AAChB,UAAIlD,QAAQ,cAAc;AACxBuD,iBAASL,MAAMtB,SAAS;MAC1B;AACA,YAAM,CAAC4H,IAAI,IAAI,KAAKrJ,MAAMuD,QAAQH,KAAK;AACvC,UAAI,EAAEiG,gBAAgBC;AAAY,eAAO;AACzC,UAAIzJ,QAAQ,aAAa;AACvB,YAAIW,UAAU;AACZ,eAAKR,MAAMsG,aACTvD,MAAMK,QAAQ,GACdL,MAAMtB,SAAS,GACfkB,MAAM+C,QAAQC,IAChB;QACF,OAAO;AACL,eAAK3F,MAAMsG,aAAavD,MAAMK,QAAQ,GAAGT,MAAM+C,QAAQC,IAAI;QAC7D;MACF,WAAWnF,UAAU;AACnB,aAAKR,MAAMsG,aACTvD,MAAMK,OACNL,MAAMtB,SAAS,GACfkB,MAAM+C,QAAQC,IAChB;MACF,OAAO;AACL,aAAK3F,MAAMsG,aACTvD,MAAMK,QAAQL,MAAMtB,SAAS,GAC7BkB,MAAM+C,QAAQC,IAChB;MACF;AACA,aAAO;IACT;EACF;AACF;AAEA,SAASe,kBAAkBzC,QAA+B;AACxD,SAAO;IACLpE,KAAKoE,OAAO,CAAC;IACbsF,UAAU;IACV5H,QAAQoB,OAAOxB,SAAS;AACtB,WAAKvB,MAAMiE,OAAOA,QAAQ,CAAC1C,QAAQ0C,OAAOA,MAAM,GAAGtB,MAAM+C,QAAQC,IAAI;IACvE;EACF;AACF;AAEA,SAAS2C,sBAAsBkB,IAA4B;AACzD,SAAO;IACL3J,KAAK2J,KAAK,YAAY;IACtB1I,WAAW;IACXmD,QAAQ,CAAC,OAAO;IAChBtC,QAAQoB,OAAOxB,SAAS;AAEtB,YAAM1B,MAAM2J,KAAK,SAAS;AAC1B,YAAM5B,OAAOrG,QAAQ2B;AACrB,YAAMuG,YAAY7B,KAAK8B,OAAO7J,GAAG;AACjC,UAAI4J,aAAa,MAAM;AACrB,YAAIA,UAAUxE,QAAQC,aAAa,aAAa;AAE9C,cAAIyE,aAAaF,UAAUG,SAASC;AACpC,cAAIzB,MAAMR;AACV,iBAAOQ,IAAIrD,QAAQ,MAAM;AAEvBqD,kBAAMA,IAAIrD;AACV4E,yBAAaA,WAAW9D;UAC1B;AACA,gBAAMzC,QACJuG,WAAWvI,OAAO,KAAKpB,MAAM8C,MAAM,IACnCgH,KAAKC,IAAIxI,QAAQH,QAAQuI,WAAWlI,OAAO,IAAI,CAAC;AAClD,eAAKzB,MAAMsG,aAAalD,OAAO,GAAGT,MAAM+C,QAAQC,IAAI;QACtD;MACF,OAAO;AAEL,cAAMqE,aAAapC,KAAKT,MAAM,EAAEtH,GAAG;AACnC,YAAImK,cAAc,MAAM;AACtB,cAAIR,IAAI;AACN,iBAAKxJ,MAAMsG,aACT0D,WAAW5I,OAAO,KAAKpB,MAAM8C,MAAM,IAAIkH,WAAWvI,OAAO,IAAI,GAC7D,GACAkB,MAAM+C,QAAQC,IAChB;UACF,OAAO;AACL,iBAAK3F,MAAMsG,aACT0D,WAAW5I,OAAO,KAAKpB,MAAM8C,MAAM,GACnC,GACAH,MAAM+C,QAAQC,IAChB;UACF;QACF;MACF;AACA,aAAO;IACT;EACF;AACF;AAEA,SAAS/D,UAAUjC,SAAwC;AACzD,MAAI,OAAOA,YAAY,YAAY,OAAOA,YAAY,UAAU;AAC9DA,cAAU;MAAEE,KAAKF;IAAQ;EAC3B,WAAW,OAAOA,YAAY,UAAU;AACtCA,cAAUsK,kBAAUtK,OAAO;EAC7B,OAAO;AACL,WAAO;EACT;AACA,MAAIA,QAAQ4J,UAAU;AACpB5J,YAAQR,QAAQ,IAAIQ,QAAQ4J;AAC5B,WAAO5J,QAAQ4J;EACjB;AACA,SAAO5J;AACT;AAGA,SAASoG,YAAWmE,OAAmD;AAAA,MAAlD;IAAElK;IAAO+C;EAAsC,IAACmH;AACnE,QAAMvB,QAAQ3I,MAAM4I,SAAS7F,KAAK;AAClC,MAAI2B,UAAU,CAAC;AACf,MAAIiE,MAAMlH,SAAS,GAAG;AACpB,UAAM0I,eAAexB,MAAM,CAAC,EAAEjE,QAAQ;AACtC,UAAM0F,cAAczB,MAAMA,MAAMlH,SAAS,CAAC,EAAEiD,QAAQ;AACpDA,cAAUW,iCAAaC,KAAK8E,aAAaD,YAAY,KAAK,CAAC;EAC7D;AACAnK,QAAMiH,WAAWlE,OAAOJ,MAAM+C,QAAQC,IAAI;AAC1C,MAAIxF,OAAOC,KAAKsE,OAAO,EAAEjD,SAAS,GAAG;AACnCzB,UAAMsH,WAAWvE,MAAMK,OAAO,GAAGsB,SAAS/B,MAAM+C,QAAQC,IAAI;EAC9D;AACA3F,QAAMsG,aAAavD,MAAMK,OAAOT,MAAM+C,QAAQa,MAAM;AACtD;AAEA,SAASwB,UAAUsC,QAAiB1C,KAAWC,MAAYxG,QAAgB;AACzE,MAAIuG,IAAI5C,QAAQ,QAAQ4C,IAAI9B,QAAQ,MAAM;AACxC,QAAI+B,KAAK7C,QAAQ,QAAQ6C,KAAK/B,QAAQ,MAAM;AAC1C,aAAOzE,WAAW,IAAI,KAAK;IAC7B;AACA,WAAOwG,KAAK7C,QAAQ,OAAO,KAAK;EAClC;AACA,MAAI4C,IAAI5C,QAAQ,MAAM;AACpB,WAAO;EACT;AACA,MAAI4C,IAAI9B,QAAQ,MAAM;AACpB,WAAO;EACT;AACA,SAAO;AACT;;;AC9zBA,IAAMyE,qBAAqB;AAC3B,IAAMC,gBAAgB,CAAC,KAAK,MAAM,IAAI;AAEtC,IAAMC,iBAAkBC,aAA4B;AAClD,SAAOA,WAAWF,cAAcG,SAASD,QAAQE,OAAO;AAC1D;AAEA,IAAMC,sBAAuBC,SAAkB;AAC7CC,QAAMC,KAAKF,IAAIG,iBAAiB,IAAI,CAAC,EAClCC,OACEC,QACCV,eAAeU,GAAGC,sBAAsB,KACxCX,eAAeU,GAAGE,kBAAkB,CACxC,EACCC,QAASH,QAAO;AAdrB;AAeMA,aAAGI,eAAHJ,mBAAeK,YAAYL;EAC7B,CAAC;AACL;AAEA,IAAMM,sBAAuBX,SAAkB;AAC7CC,QAAMC,KAAKF,IAAIG,iBAAiB,yBAAyB,CAAC,EACvDC,OAAQQ,UAAI;AArBjB;AAqBsBA,sBAAKC,aAAa,OAAO,MAAzBD,mBAA4BE,MAAMrB;GAAmB,EACtEe,QAASI,UAAS;AAtBvB;AAuBM,UAAMG,WAAWf,IAAIgB,uBAAuB;AAC5CD,aAASE,OAAO,GAAGL,KAAKM,UAAU;AAClCN,eAAKH,eAALG,mBAAiBO,aAAaJ,UAAUH;EAC1C,CAAC;AACL;AAEe,SAAfQ,WAAkCpB,KAAe;AAC/C,MAAIA,IAAIqB,cAAc,6BAA6B,GAAG;AACpDV,wBAAoBX,GAAG;AACvBD,wBAAoBC,GAAG;EACzB;AACF;;;AClCA,IAAMsB,eAAe;AACrB,IAAMC,WAAW;AACjB,IAAMC,eAAe;AAErB,IAAMC,gBAAgBA,CAACC,SAAkBC,SAAiB;AACxD,QAAMC,QAAQF,QAAQG,aAAa,OAAO;AAC1C,QAAMC,UAAUF,+BAAOG,MAAMR;AAC7B,MAAI,CAACO,SAAS;AACZ,WAAO;EACT;AACA,QAAME,KAAKC,OAAOH,QAAQ,CAAC,CAAC;AAE5B,QAAMI,cAAcN,+BAAOG,MAAMP;AACjC,QAAMW,SAASD,cAAcD,OAAOC,YAAY,CAAC,CAAC,IAAI;AAEtD,QAAME,aAAa,IAAIC,OACpB,UAASL,EAAG,SAAQG,MAAO,uDAC5B,GACF;AACA,QAAMG,YAAYX,KAAKI,MAAMK,UAAU;AACvC,QAAMG,OAAOD,aAAaA,UAAU,CAAC,MAAM,WAAW,WAAW;AAEjE,SAAO;IAAEN;IAAIG;IAAQI;IAAMb;EAAQ;AACrC;AAKA,IAAMc,oBAAqBC,SAAkB;AA5B7C;AA6BE,QAAMC,UAAUC,MAAMC,KAAKH,IAAII,iBAAiB,mBAAmB,CAAC;AACpE,QAAMC,UAAqB,CAAA;AAC3B,QAAMC,SAAoB,CAAA;AAC1BL,UAAQM,QAASC,UAAS;AACxB,UAAMC,gBAAgBD,KAAKpB,aAAa,OAAO,KAAK,IAAIE,MAAMT,YAAY;AAC1E,QAAI4B,cAAc;AAChBJ,cAAQK,KAAKF,IAAI;IACnB,OAAO;AACLF,aAAOI,KAAKF,IAAI;IAClB;EACF,CAAC;AAGDH,UAAQE,QAASC,UAAI;AA1CvB,QAAAG;AA0C4BH,YAAAA,MAAAA,KAAKI,eAALJ,gBAAAA,IAAiBK,YAAYL;GAAK;AAI5D,QAAMtB,OAAOc,IAAIc,gBAAgBC;AACjC,QAAMC,YAAYV,OACfW,IAAKhC,aAAYD,cAAcC,SAASC,IAAI,CAAC,EAC7CgC,OAAQC,YAAWA,MAAM;AAE5B,SAAOH,UAAUI,QAAQ;AACvB,UAAMC,iBAAiB,CAAA;AAEvB,QAAIC,UAAUN,UAAUO,MAAM;AAE9B,WAAOD,SAAS;AACdD,qBAAeX,KAAKY,OAAO;AAC3BA,gBACEN,UAAUI,YACVJ,eAAU,CAAC,MAAXA,mBAAc/B,aAAYqC,QAAQrC,QAAQuC;MAE1CR,UAAU,CAAC,EAAEzB,OAAO+B,QAAQ/B,KACxByB,UAAUO,MAAM,IAChB;IACR;AAEA,UAAME,KAAKC,SAASC,cAAc,IAAI;AACtCN,mBAAed,QAASqB,cAAa;AACnC,YAAMC,KAAKH,SAASC,cAAc,IAAI;AACtCE,SAAGC,aAAa,aAAaF,SAAS9B,IAAI;AAC1C,UAAI8B,SAASlC,SAAS,GAAG;AACvBmC,WAAGC,aAAa,SAAU,aAAYF,SAASlC,SAAS,CAAE,EAAC;MAC7D;AACAmC,SAAGd,YAAYa,SAAS3C,QAAQ8B;AAChCU,SAAGM,YAAYF,EAAE;IACnB,CAAC;AAED,UAAM5C,WAAUoC,oBAAe,CAAC,MAAhBA,mBAAmBpC;AACnC,UAAM;MAAE2B;IAAW,IAAI3B,WAAW,CAAC;AACnC,QAAIA,SAAS;AACX2B,+CAAYoB,aAAaP,IAAIxC;IAC/B;AACAoC,mBAAeY,MAAM,CAAC,EAAE1B,QAAQ2B,UAAoB;AAAA,UAAnB;QAAEjD,SAASkD;MAAE,IAACD;AAC7CtB,+CAAYC,YAAYsB;IAC1B,CAAC;EACH;AACF;AAEe,SAAfC,WAAkCpC,KAAe;AAC/C,MACEA,IAAIc,gBAAgB1B,aAAa,SAAS,MAC1C,yCACA;AACAW,sBAAkBC,GAAG;EACvB;AACF;;;AC7FA,IAAMqC,cAAc,CAACC,YAAQC,UAAU;AAEvC,IAAMC,wBAAyBC,SAAkB;AAC/C,MAAIA,IAAIC,iBAAiB;AACvBL,gBAAYM,QAASC,CAAAA,eAAc;AACjCA,MAAAA,WAAUH,GAAG;IACf,CAAC;EACH;AACF;AAEA,IAAA,gCAAeD;;;AXaf,IAAMK,SAAQC,eAAO,iBAAiB;AAKtC,IAAMC,mBAA0C,CAC9C,CAACC,KAAKC,WAAWC,SAAS,GAC1B,CAACF,KAAKC,WAAWE,YAAY,GAC7B,CAAC,MAAMC,UAAU,GACjB,CAACJ,KAAKK,cAAcF,YAAY,GAChC,CAACH,KAAKK,cAAcC,SAAS,GAC7B,CAACN,KAAKK,cAAcE,eAAe,GACnC,CAACP,KAAKK,cAAcG,WAAW,GAC/B,CAAC,MAAMC,WAAW,GAClB,CAAC,UAAUC,SAAS,GACpB,CAAC,OAAOC,cAAc,GACtB,CAAC,MAAMC,UAAU,GACjB,CAAC,KAAKC,iBAAiB,MAAM,CAAC,GAC9B,CAAC,KAAKA,iBAAiB,QAAQ,CAAC,GAChC,CAAC,UAAUA,iBAAiB,QAAQ,CAAC,GACrC,CAAC,SAASC,WAAW,CAAC;AAGxB,IAAMC,wBAAwB,CAACC,gBAAgBC,kBAAkB,EAAEC,OACjE,CAACC,MAAkCC,SAAS;AAC1CD,OAAKC,KAAKC,OAAO,IAAID;AACrB,SAAOD;AACT,GACA,CAAC,CACH;AAEA,IAAMG,oBAAoB,CACxBC,YACAC,iBACAC,YACAC,gBACAC,WACAC,SAAS,EACTV,OAAO,CAACC,MAAkCC,SAAS;AACnDD,OAAKC,KAAKC,OAAO,IAAID;AACrB,SAAOD;AACT,GAAG,CAAC,CAAC;AAML,IAAMU,YAAN,cAAwBC,eAAyB;EAO/CC,YAAYC,OAAcC,SAAoC;AAC5D,UAAMD,OAAOC,OAAO;AACpB,SAAKD,MAAME,KAAKC,iBAAiB,QAASC,OACxC,KAAKC,cAAcD,GAAG,KAAK,CAC7B;AACA,SAAKJ,MAAME,KAAKC,iBAAiB,OAAQC,OAAM,KAAKC,cAAcD,GAAG,IAAI,CAAC;AAC1E,SAAKJ,MAAME,KAAKC,iBAAiB,SAAS,KAAKG,eAAeC,KAAK,IAAI,CAAC;AACxE,SAAKC,WAAW,CAAA;AAChBzC,qBAAiB0C,OAAO,KAAKR,QAAQO,YAAY,CAAA,CAAE,EAAEE,QACnDC,UAAyB;AAAA,UAAxB,CAACC,UAAUC,OAAO,IAACF;AAClB,WAAKG,WAAWF,UAAUC,OAAO;IACnC,CACF;EACF;EAEAC,WAAWF,UAAoBC,SAAkB;AAC/C,SAAKL,SAASO,KAAK,CAACH,UAAUC,OAAO,CAAC;EACxC;EAEAG,QAAOC,OAGL;AAAA,QAFA;MAAEC;MAAMC;IAAuC,IAACF;AAAA,QAChDG,UAAgCC,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG,CAAC;AAEpC,QAAID,QAAQI,UAAUC,QAAQ,GAAG;AAC/B,aAAO,IAAIC,oBAAAA,QAAM,EAAEC,OAAOR,QAAQ,IAAI;QACpC,CAACK,UAAUC,QAAQ,GAAGL,QAAQI,UAAUC,QAAQ;MAClD,CAAC;IACH;AACA,QAAI,CAACP,MAAM;AACT,aAAO,IAAIQ,oBAAAA,QAAM,EAAEC,OAAOR,QAAQ,IAAIC,OAAO;IAC/C;AACA,UAAMQ,QAAQ,KAAKC,YAAYX,IAAI;AAEnC,QACEY,cAAcF,OAAO,IAAI,MACxBA,MAAMG,IAAIH,MAAMG,IAAIT,SAAS,CAAC,EAAEU,cAAc,QAAQZ,QAAQa,QAC/D;AACA,aAAOL,MAAMM,QAAQ,IAAIR,oBAAAA,QAAM,EAAES,OAAOP,MAAMN,OAAO,IAAI,CAAC,EAAEc,OAAO,CAAC,CAAC;IACvE;AACA,WAAOR;EACT;EAEUS,cAAcC,KAAe;AACrCC,kCAAsBD,GAAG;EAC3B;EAEUT,YAAYX,MAAc;AAClC,UAAMoB,MAAM,IAAIE,UAAU,EAAEC,gBAAgBvB,MAAM,WAAW;AAC7D,SAAKmB,cAAcC,GAAG;AACtB,UAAMI,YAAYJ,IAAIK;AACtB,UAAMC,cAAc,oBAAIC,QAAQ;AAChC,UAAM,CAACC,iBAAiBC,YAAY,IAAI,KAAKC,gBAC3CN,WACAE,WACF;AACA,WAAOK,SACL,KAAKjD,MAAMkD,QACXR,WACAI,iBACAC,cACAH,WACF;EACF;EAQAO,qBACEC,OACAlC,MAEA;AAAA,QADAmC,SAAqBhC,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAGiC,MAAMC,QAAQC;AAEtC,QAAI,OAAOJ,UAAU,UAAU;AAC7B,YAAMxB,QAAQ,KAAKZ,QAAQ;QAAEE,MAAMkC;QAAOjC,MAAM;MAAG,CAAC;AAEpD,WAAKnB,MAAMyD,YAAY7B,OAAOV,IAAI;AAClC,WAAKlB,MAAM0D,aAAa,GAAGJ,MAAMC,QAAQI,MAAM;IACjD,OAAO;AACL,YAAMC,QAAQ,KAAK5C,QAAQ;QAAEE;QAAMC,MAAM;MAAG,CAAC;AAC7C,WAAKnB,MAAM6D,eACT,IAAInC,oBAAAA,QAAM,EAAES,OAAOiB,KAAK,EAAE3C,OAAOmD,KAAK,GACtCP,MACF;AACA,WAAKrD,MAAM0D,aAAaN,QAAQQ,MAAMtC,OAAO,GAAGgC,MAAMC,QAAQI,MAAM;IACtE;EACF;EAEAtD,cAAcD,GAAkC;AAzKlD;AAyKkD,QAAf0D,QAAKzC,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG;AACvC,QAAIjB,EAAE2D;AAAkB;AACxB3D,MAAE4D,eAAe;AACjB,UAAM,CAACC,KAAK,IAAI,KAAKjE,MAAMkE,UAAUC,SAAS;AAC9C,QAAIF,SAAS;AAAM;AACnB,UAAM;MAAE/C;MAAMC;IAAK,IAAI,KAAKiD,OAAOH,OAAOH,KAAK;AAC/C1D,YAAEiE,kBAAFjE,mBAAiBkE,QAAQ,cAAcnD;AACvCf,YAAEiE,kBAAFjE,mBAAiBkE,QAAQ,aAAapD;AACtC,QAAI4C,OAAO;AACTS,kBAAY;QAAEN;QAAOjE,OAAO,KAAKA;MAAM,CAAC;IAC1C;EACF;;;;EAKQwE,iBAAiBC,SAAiB;AACxC,WACEA,QACGC,MAAM,OAAO,EAEbC,OAAQC,SAAQA,IAAI,CAAC,MAAM,GAAG,EAC9BC,KAAK,IAAI;EAEhB;EAEAvE,eAAeF,GAAmB;AAnMpC;AAoMI,QAAIA,EAAE2D,oBAAoB,CAAC,KAAK/D,MAAM8E,UAAU;AAAG;AACnD1E,MAAE4D,eAAe;AACjB,UAAMC,QAAQ,KAAKjE,MAAM+E,aAAa,IAAI;AAC1C,QAAId,SAAS;AAAM;AACnB,UAAM/C,QAAOd,OAAEiE,kBAAFjE,mBAAiB4E,QAAQ;AACtC,QAAI7D,QAAOf,OAAEiE,kBAAFjE,mBAAiB4E,QAAQ;AACpC,QAAI,CAAC9D,QAAQ,CAACC,MAAM;AAClB,YAAMsD,WAAUrE,OAAEiE,kBAAFjE,mBAAiB4E,QAAQ;AACzC,UAAIP,SAAS;AACXtD,eAAO,KAAKqD,iBAAiBC,OAAO;MACtC;IACF;AACA,UAAMQ,QAAQC,MAAMC,OAAK/E,OAAEiE,kBAAFjE,mBAAiB6E,UAAS,CAAA,CAAE;AACrD,QAAI,CAAC/D,QAAQ+D,MAAM3D,SAAS,GAAG;AAC7B,WAAKtB,MAAMoF,SAASC,OAAOpB,OAAOgB,KAAK;AACvC;IACF;AACA,QAAI/D,QAAQ+D,MAAM3D,SAAS,GAAG;AAC5B,YAAMgB,MAAM,IAAIE,UAAU,EAAEC,gBAAgBvB,MAAM,WAAW;AAC7D,UACEoB,IAAIK,KAAK2C,sBAAsB,OAC/BhD,SAAIK,KAAK4C,sBAATjD,mBAA4BkD,aAAY,OACxC;AACA,aAAKxF,MAAMoF,SAASC,OAAOpB,OAAOgB,KAAK;AACvC;MACF;IACF;AACA,SAAKQ,QAAQxB,OAAO;MAAE/C;MAAMC;IAAK,CAAC;EACpC;EAGAiD,OAAOH,OAAc;AACnB,UAAM9C,OAAO,KAAKnB,MAAM0F,QAAQzB,KAAK;AACrC,UAAM/C,OAAO,KAAKlB,MAAM2F,gBAAgB1B,KAAK;AAC7C,WAAO;MAAE/C;MAAMC;IAAK;EACtB;EAEAsE,QAAQxB,OAAY2B,OAAoD;AAAA,QAAlD;MAAEzE;MAAMD;IAAuC,IAAC0E;AACpE,UAAMxE,UAAU,KAAKpB,MAAM6F,UAAU5B,MAAMb,KAAK;AAChD,UAAM0C,cAAc,KAAK9E,QAAQ;MAAEG;MAAMD;IAAK,GAAGE,OAAO;AACxDvD,IAAAA,OAAMkI,IAAI,WAAWD,aAAa;MAAE3E;MAAMD;IAAK,CAAC;AAChD,UAAMU,QAAQ,IAAIF,oBAAAA,QAAM,EACrBS,OAAO8B,MAAMb,KAAK,EAClBhB,OAAO6B,MAAM3C,MAAM,EACnBb,OAAOqF,WAAW;AACrB,SAAK9F,MAAM6D,eAAejC,OAAO0B,MAAMC,QAAQyC,IAAI;AAEnD,SAAKhG,MAAM0D,aACT9B,MAAMN,OAAO,IAAI2C,MAAM3C,QACvBgC,MAAMC,QAAQI,MAChB;AACA,SAAK3D,MAAMiG,wBAAwB;EACrC;EAEAjD,gBAAgBN,WAAoBE,aAAuC;AACzE,UAAME,kBAA6B,CAAA;AACnC,UAAMC,eAA0B,CAAA;AAChC,SAAKvC,SAASE,QAASwF,UAAS;AAC9B,YAAM,CAACtF,UAAUC,OAAO,IAAIqF;AAC5B,cAAQtF,UAAQ;QACd,KAAK5C,KAAKC;AACR8E,uBAAahC,KAAKF,OAAO;AACzB;QACF,KAAK7C,KAAKK;AACRyE,0BAAgB/B,KAAKF,OAAO;AAC5B;QACF;AACEqE,gBAAMC,KAAKzC,UAAUyD,iBAAiBvF,QAAQ,CAAC,EAAEF,QAAS0F,UAAS;AACjE,gBAAIxD,YAAYyD,IAAID,IAAI,GAAG;AACzB,oBAAME,UAAU1D,YAAY2D,IAAIH,IAAI;AACpCE,iDAASvF,KAAKF;YAChB,OAAO;AACL+B,0BAAY4D,IAAIJ,MAAM,CAACvF,OAAO,CAAC;YACjC;UACF,CAAC;AACD;MACJ;IACF,CAAC;AACD,WAAO,CAACiC,iBAAiBC,YAAY;EACvC;AACF;AA3ME,cADIlD,WACG4G,YAA6B;EAClCjG,UAAU,CAAA;AACZ;AA2MF,SAASkG,YACP9E,OACA+E,QACAC,OACA1D,QACO;AACP,MAAI,CAACA,OAAO2D,MAAMF,MAAM,GAAG;AACzB,WAAO/E;EACT;AAEA,SAAOA,MAAM1C,OAAO,CAAC4H,UAAUC,OAAO;AACpC,QAAI,CAACA,GAAGpF;AAAQ,aAAOmF;AACvB,QAAIC,GAAG/E,cAAc+E,GAAG/E,WAAW2E,MAAM,GAAG;AAC1C,aAAOG,SAAS/F,KAAKgG,EAAE;IACzB;AACA,UAAM3F,UAAUwF,QAAQ;MAAE,CAACD,MAAM,GAAGC;IAAM,IAAI,CAAC;AAC/C,WAAOE,SAASnF,OAAOoF,GAAGpF,QAAQ;MAAE,GAAGP;MAAS,GAAG2F,GAAG/E;IAAW,CAAC;EACpE,GAAG,IAAIN,oBAAAA,QAAM,CAAC;AAChB;AAEA,SAASI,cAAcF,OAAcT,MAAc;AACjD,MAAI6F,UAAU;AACd,WACMC,IAAIrF,MAAMG,IAAIT,SAAS,GAC3B2F,KAAK,KAAKD,QAAQ1F,SAASH,KAAKG,QAChC,EAAE2F,GACF;AACA,UAAMF,KAAKnF,MAAMG,IAAIkF,CAAC;AACtB,QAAI,OAAOF,GAAGpF,WAAW;AAAU;AACnCqF,cAAUD,GAAGpF,SAASqF;EACxB;AACA,SAAOA,QAAQE,MAAM,KAAK/F,KAAKG,MAAM,MAAMH;AAC7C;AAEA,SAASgG,QAAOf,MAAYlD,QAAoB;AAC9C,MAAI,EAAEkD,gBAAgBgB;AAAU,WAAO;AACvC,QAAMC,SAAQnE,OAAO2D,MAAMT,IAAI;AAE/B,MAAIiB,UAASA,OAAMC,qBAAqBC;AAAW,WAAO;AAE1D,SAAO,CACL,WACA,WACA,cACA,UACA,MACA,OACA,MACA,MACA,YACA,cACA,UACA,UACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,UACA,UACA,MACA,QACA,OACA,MACA,UACA,KACA,OACA,WACA,SACA,MACA,MACA,MACA,OAAO,EACPC,SAASpB,KAAKZ,QAAQiC,YAAY,CAAC;AACvC;AAEA,SAASC,wBAAwBtB,MAAmBlD,QAAoB;AACtE,SACEkD,KAAKuB,0BACLvB,KAAKwB,sBACL,CAACT,QAAOf,KAAKuB,wBAAwBzE,MAAM,KAC3C,CAACiE,QAAOf,KAAKwB,oBAAoB1E,MAAM;AAE3C;AAEA,IAAM2E,WAAW,oBAAIhF,QAAQ;AAC7B,SAASiF,MAAM1B,MAAmB;AAChC,MAAIA,QAAQ;AAAM,WAAO;AACzB,MAAI,CAACyB,SAASxB,IAAID,IAAI,GAAG;AAEvB,QAAIA,KAAKZ,YAAY,OAAO;AAC1BqC,eAASrB,IAAIJ,MAAM,IAAI;IACzB,OAAO;AACLyB,eAASrB,IAAIJ,MAAM0B,MAAM1B,KAAK2B,UAAU,CAAC;IAC3C;EACF;AACA,SAAOF,SAAStB,IAAIH,IAAI;AAC1B;AAEA,SAASnD,SACPC,QACAkD,MACAtD,iBACAC,cACAH,aACO;AAEP,MAAIwD,KAAK4B,aAAa5B,KAAKnI,WAAW;AACpC,WAAO8E,aAAa7D,OAAO,CAAC0C,OAAcf,YAAY;AACpD,aAAOA,QAAQuF,MAAMxE,OAAOsB,MAAM;IACpC,GAAG,IAAIxB,oBAAAA,QAAM,CAAC;EAChB;AACA,MAAI0E,KAAK4B,aAAa5B,KAAK/H,cAAc;AACvC,WAAO6G,MAAMC,KAAKiB,KAAK6B,cAAc,CAAA,CAAE,EAAE/I,OAAO,CAAC0C,OAAOsG,cAAc;AACpE,UAAIC,gBAAgBlF,SAClBC,QACAgF,WACApF,iBACAC,cACAH,WACF;AACA,UAAIsF,UAAUF,aAAa5B,KAAK/H,cAAc;AAC5C8J,wBAAgBrF,gBAAgB5D,OAAO,CAACkJ,cAAcvH,YAAY;AAChE,iBAAOA,QAAQqH,WAA0BE,cAAclF,MAAM;QAC/D,GAAGiF,aAAa;AAChBA,yBAAiBvF,YAAY2D,IAAI2B,SAAS,KAAK,CAAA,GAAIhJ,OACjD,CAACkJ,cAAcvH,YAAY;AACzB,iBAAOA,QAAQqH,WAAWE,cAAclF,MAAM;QAChD,GACAiF,aACF;MACF;AACA,aAAOvG,MAAMnB,OAAO0H,aAAa;IACnC,GAAG,IAAIzG,oBAAAA,QAAM,CAAC;EAChB;AACA,SAAO,IAAIA,oBAAAA,QAAM;AACnB;AAEA,SAAS7C,iBAAiB8H,QAAgB;AACxC,SAAO,CAAC0B,OAAgBzG,OAAcsB,WAAuB;AAC3D,WAAOwD,YAAY9E,OAAO+E,QAAQ,MAAMzD,MAAM;EAChD;AACF;AAEA,SAAS3E,gBAAgB6H,MAAmBxE,OAAcsB,QAAoB;AAC5E,QAAMlB,aAAasG,WAAWC,KAAKnC,IAAI;AACvC,QAAMoC,UAAUC,kBAAgBF,KAAKnC,IAAI;AACzC,QAAMsC,SAASC,kBAAgBJ,KAAKnC,IAAI;AACxC,QAAMhF,UAA8C,CAAC;AACrDY,aACGvB,OAAO+H,OAAO,EACd/H,OAAOiI,MAAM,EACbhI,QAASkI,UAAS;AACjB,QAAIxJ,OAAO8D,OAAO2D,MAAM+B,MAAMC,MAAMC,SAAS;AAC7C,QAAI1J,QAAQ,MAAM;AAChBgC,cAAQhC,KAAK2J,QAAQ,IAAI3J,KAAKwH,MAAMR,IAAI;AACxC,UAAIhF,QAAQhC,KAAK2J,QAAQ;AAAG;IAC9B;AACA3J,WAAOL,sBAAsB6J,IAAI;AACjC,QAAIxJ,QAAQ,SAASA,KAAK2J,aAAaH,QAAQxJ,KAAKC,YAAYuJ,OAAO;AACrExH,cAAQhC,KAAK2J,QAAQ,IAAI3J,KAAKwH,MAAMR,IAAI,KAAK7E;IAC/C;AACAnC,WAAOE,kBAAkBsJ,IAAI;AAC7B,QAAIxJ,QAAQ,SAASA,KAAK2J,aAAaH,QAAQxJ,KAAKC,YAAYuJ,OAAO;AACrExJ,aAAOE,kBAAkBsJ,IAAI;AAC7BxH,cAAQhC,KAAK2J,QAAQ,IAAI3J,KAAKwH,MAAMR,IAAI,KAAK7E;IAC/C;EACF,CAAC;AAEH,SAAOyH,OAAOC,QAAQ7H,OAAO,EAAElC,OAC7B,CAAC4H,UAAQoC,UAAA;AAAA,QAAE,CAACN,MAAMhC,KAAK,IAACsC;AAAA,WAAKxC,YAAYI,UAAU8B,MAAMhC,OAAO1D,MAAM;EAAC,GACvEtB,KACF;AACF;AAEA,SAAStD,UAAU8H,MAAYxE,OAAcsB,QAAoB;AAC/D,QAAMmE,SAAQnE,OAAO2D,MAAMT,IAAI;AAC/B,MAAIiB,UAAS;AAAM,WAAOzF;AAE1B,MAAIyF,OAAMC,qBAAqBC,aAAW;AACxC,UAAM4B,QAAQ,CAAC;AAEf,UAAMvC,QAAQS,OAAMT,MAAMR,IAAI;AAC9B,QAAIQ,SAAS,MAAM;AAEjBuC,YAAM9B,OAAM5F,QAAQ,IAAImF;AAExB,aAAO,IAAIlF,oBAAAA,QAAM,EAAEC,OAAOwH,OAAO9B,OAAMjG,QAAQgF,MAAMlD,MAAM,CAAC;IAC9D;EACF,OAAO;AAEL,QAAImE,OAAMC,qBAAqB8B,eAAa,CAACtH,cAAcF,OAAO,IAAI,GAAG;AACvEA,YAAMD,OAAO,IAAI;IACnB;AACA,QACE,cAAc0F,UACd,aAAaA,UACb,OAAOA,OAAMjG,YAAY,YACzB;AACA,aAAOsF,YACL9E,OACAyF,OAAM5F,UACN4F,OAAMjG,QAAQgF,MAAMlD,MAAM,GAC1BA,MACF;IACF;EACF;AACA,SAAOtB;AACT;AAEA,SAASxD,WAAWgI,MAAYxE,OAAc;AAC5C,MAAI,CAACE,cAAcF,OAAO,IAAI,GAAG;AAC/BA,UAAMD,OAAO,IAAI;EACnB;AACA,SAAOC;AACT;AAEA,SAASjD,eAAeyH,MAAYxE,OAAcsB,QAAoB;AACpE,QAAMmE,SAAQnE,OAAO2D,MAAM,YAAY;AACvC,QAAMwC,WACJhC,UAAS,aAAaA,UAAS,OAAOA,OAAMjG,YAAY,aACpDiG,OAAMjG,QAAQgF,MAAMlD,MAAM,IAC1B;AACN,SAAOwD,YAAY9E,OAAO,cAAcyH,UAAUnG,MAAM;AAC1D;AAEA,SAASpE,cAAc;AACrB,SAAO,IAAI4C,oBAAAA,QAAM;AACnB;AAEA,SAASjD,YAAY2H,MAAYxE,OAAcsB,QAAoB;AACjE,QAAMmE,SAAQnE,OAAO2D,MAAMT,IAAI;AAC/B,MACEiB,UAAS;EAETA,OAAM5F,aAAa,UACnB,CAACK,cAAcF,OAAO,IAAI,GAC1B;AACA,WAAOA;EACT;AACA,MAAI0H,SAAS;AACb,MAAIC,SAASnD,KAAK2B;AAClB,SAAOwB,UAAU,MAAM;AAErB,QAAI,CAAC,MAAM,IAAI,EAAE/B,SAAS+B,OAAO/D,OAAO,GAAG;AACzC8D,gBAAU;IACZ;AACAC,aAASA,OAAOxB;EAClB;AACA,MAAIuB,UAAU;AAAG,WAAO1H;AACxB,SAAOA,MAAM1C,OAAO,CAACsK,UAAUzC,OAAO;AACpC,QAAI,CAACA,GAAGpF;AAAQ,aAAO6H;AACvB,QAAIzC,GAAG/E,cAAc,OAAO+E,GAAG/E,WAAWsH,WAAW,UAAU;AAC7D,aAAOE,SAASzI,KAAKgG,EAAE;IACzB;AACA,WAAOyC,SAAS7H,OAAOoF,GAAGpF,QAAQ;MAAE2H;MAAQ,GAAIvC,GAAG/E,cAAc,CAAC;IAAG,CAAC;EACxE,GAAG,IAAIN,oBAAAA,QAAM,CAAC;AAChB;AAEA,SAAShD,UAAU0H,MAAYxE,OAAcsB,QAAoB;AAC/D,QAAMuG,UAAUrD;AAChB,MAAIsD,OAAOD,QAAQjE,YAAY,OAAO,YAAY;AAElD,QAAMmE,cAAcF,QAAQG,aAAa,cAAc;AACvD,MAAID,aAAa;AACfD,WAAOC,gBAAgB,SAAS,YAAY;EAC9C;AAEA,SAAOjD,YAAY9E,OAAO,QAAQ8H,MAAMxG,MAAM;AAChD;AAEA,SAAS/E,aAAaiI,MAAYxE,OAAcsB,QAAoB;AAClE,MAAI,CAACpB,cAAcF,OAAO,IAAI,GAAG;AAC/B,QACEuF,QAAOf,MAAMlD,MAAM,MAClBkD,KAAK6B,WAAW3G,SAAS,KAAK8E,gBAAgByD,uBAC/C;AACA,aAAOjI,MAAMD,OAAO,IAAI;IAC1B;AACA,QAAIC,MAAMN,OAAO,IAAI,KAAK8E,KAAK0D,aAAa;AAC1C,UAAIA,cAA2B1D,KAAK0D;AACpC,aAAOA,eAAe,MAAM;AAC1B,YAAI3C,QAAO2C,aAAa5G,MAAM,GAAG;AAC/B,iBAAOtB,MAAMD,OAAO,IAAI;QAC1B;AACA,cAAM0F,SAAQnE,OAAO2D,MAAMiD,WAAW;AAEtC,YAAIzC,UAASA,OAAMC,qBAAqByC,YAAY;AAClD,iBAAOnI,MAAMD,OAAO,IAAI;QAC1B;AACAmI,sBAAcA,YAAYE;MAC5B;IACF;EACF;AACA,SAAOpI;AACT;AAEA,SAASpD,YAAY4H,MAAmBxE,OAAcsB,QAAoB;AAjkB1E;AAkkBE,QAAM9B,UAAmC,CAAC;AAC1C,QAAM6I,QAAsC7D,KAAK6D,SAAS,CAAC;AAC3D,MAAIA,MAAMC,cAAc,UAAU;AAChC9I,YAAQ+I,SAAS;EACnB;AACA,MAAIF,MAAMG,mBAAmB,aAAa;AACxChJ,YAAQiJ,YAAY;EACtB;AACA,MAAIJ,MAAMG,mBAAmB,gBAAgB;AAC3ChJ,YAAQkJ,SAAS;EACnB;AACA,QACEL,WAAMM,eAANN,mBAAkBO,WAAW;EAE7BC,SAASR,MAAMM,YAAY,EAAE,KAAK,KAClC;AACAnJ,YAAQsJ,OAAO;EACjB;AACA9I,UAAQoH,OAAOC,QAAQ7H,OAAO,EAAElC,OAC9B,CAAC4H,UAAQ6D,UAAA;AAAA,QAAE,CAAC/B,MAAMhC,KAAK,IAAC+D;AAAA,WAAKjE,YAAYI,UAAU8B,MAAMhC,OAAO1D,MAAM;EAAC,GACvEtB,KACF;AAEA,MAAIgJ,WAAWX,MAAMY,cAAc,CAAC,IAAI,GAAG;AAEzC,WAAO,IAAInJ,oBAAAA,QAAM,EAAEC,OAAO,GAAI,EAAElB,OAAOmB,KAAK;EAC9C;AACA,SAAOA;AACT;AAEA,SAAShD,WACPwH,MACAxE,OACAsB,QACA;AApmBF;AAqmBE,QAAMjB,UACJmE,UAAK0E,kBAAL1E,mBAAoBZ,aAAY,UAC5BY,KAAK0E,iBACL1E,UAAK0E,kBAAL1E,mBAAoB0E;AAC1B,MAAI7I,SAAS,MAAM;AACjB,UAAM8I,OAAO7F,MAAMC,KAAKlD,MAAMkE,iBAAiB,IAAI,CAAC;AACpD,UAAM6E,MAAMD,KAAKE,QAAQ7E,IAAI,IAAI;AACjC,WAAOM,YAAY9E,OAAO,SAASoJ,KAAK9H,MAAM;EAChD;AACA,SAAOtB;AACT;AAEA,SAAS1D,UAAUkI,MAAmBxE,OAAcsB,QAAoB;AAjnBxE;AAmnBE,MAAI/B,OAAOiF,KAAK8E;AAEhB,QAAI9E,UAAK0E,kBAAL1E,mBAAoBZ,aAAY,OAAO;AACzC,WAAO5D,MAAMD,OAAOR,KAAKgK,KAAK,CAAC;EACjC;AACA,MAAI,CAACrD,MAAM1B,IAAI,GAAG;AAChB,QACEjF,KAAKgK,KAAK,EAAE7J,WAAW,KACvBH,KAAKqG,SAAS,IAAI,KAClB,CAACE,wBAAwBtB,MAAMlD,MAAM,GACrC;AACA,aAAOtB;IACT;AACA,UAAMwJ,WAAWA,CAACC,UAAmBhE,WAAkB;AACrD,YAAMiE,WAAWjE,OAAMkE,QAAQ,cAAc,EAAE;AAC/C,aAAOD,SAAShK,SAAS,KAAK+J,WAAW,MAAMC;IACjD;AACAnK,WAAOA,KAAKoK,QAAQ,SAAS,GAAG,EAAEA,QAAQ,OAAO,GAAG;AACpDpK,WAAOA,KAAKoK,QAAQ,UAAUH,SAAS7K,KAAK6K,UAAU,IAAI,CAAC;AAC3D,QACGhF,KAAKoF,mBAAmB,QACvBpF,KAAK0E,iBAAiB,QACtB3D,QAAOf,KAAK0E,eAAe5H,MAAM,KAClCkD,KAAKoF,2BAA2BpE,WAC/BD,QAAOf,KAAKoF,iBAAiBtI,MAAM,GACrC;AACA/B,aAAOA,KAAKoK,QAAQ,QAAQH,SAAS7K,KAAK6K,UAAU,KAAK,CAAC;IAC5D;AACA,QACGhF,KAAK0D,eAAe,QACnB1D,KAAK0E,iBAAiB,QACtB3D,QAAOf,KAAK0E,eAAe5H,MAAM,KAClCkD,KAAK0D,uBAAuB1C,WAAWD,QAAOf,KAAK0D,aAAa5G,MAAM,GACvE;AACA/B,aAAOA,KAAKoK,QAAQ,QAAQH,SAAS7K,KAAK6K,UAAU,KAAK,CAAC;IAC5D;EACF;AACA,SAAOxJ,MAAMD,OAAOR,IAAI;AAC1B;;;AYnoBA,IAAMsK,UAAN,cAAsBC,eAAuB;EAY3CC,YAAYC,OAAcC,SAAkC;AAC1D,UAAMD,OAAOC,OAAO;AANtBC,wCAAe;AACfC,wCAAe;AACfC,iCAAe;MAAEC,MAAM,CAAA;MAAIC,MAAM,CAAA;IAAG;AACpCC,wCAA6B;AAI3B,SAAKP,MAAMQ,GACTC,MAAMC,OAAOC,eACb,CAACC,WAAWC,OAAOC,UAAUC,WAAW;AACtC,UAAIH,cAAcH,MAAMC,OAAOM,kBAAkB;AAC/C,YAAIH,SAASE,WAAWN,MAAMQ,QAAQC,QAAQ;AAC5C,eAAKX,eAAeM;QACtB;MACF,WAAWD,cAAcH,MAAMC,OAAOS,aAAa;AACjD,YAAI,CAAC,KAAKhB,cAAc;AACtB,cAAI,CAAC,KAAKF,QAAQmB,YAAYL,WAAWN,MAAMQ,QAAQI,MAAM;AAC3D,iBAAKC,OAAOT,OAAOC,QAAQ;UAC7B,OAAO;AACL,iBAAKS,UAAUV,KAAK;UACtB;QACF;AAEA,aAAKN,eAAeiB,eAAe,KAAKjB,cAAcM,KAAK;MAC7D;IACF,CACF;AAEA,SAAKb,MAAMyB,SAASC,WAClB;MAAEC,KAAK;MAAKC,UAAU;IAAK,GAC3B,KAAKvB,KAAKwB,KAAK,IAAI,CACrB;AACA,SAAK7B,MAAMyB,SAASC,WAClB;MAAEC,KAAK,CAAC,KAAK,GAAG;MAAGC,UAAU;MAAME,UAAU;IAAK,GAClD,KAAKxB,KAAKuB,KAAK,IAAI,CACrB;AACA,QAAI,OAAOE,KAAKC,UAAUC,QAAQ,GAAG;AACnC,WAAKjC,MAAMyB,SAASC,WAClB;QAAEC,KAAK;QAAKC,UAAU;MAAK,GAC3B,KAAKtB,KAAKuB,KAAK,IAAI,CACrB;IACF;AAEA,SAAK7B,MAAMkC,KAAKC,iBAAiB,eAAgBC,WAAU;AACzD,UAAIA,MAAMC,cAAc,eAAe;AACrC,aAAKhC,KAAK;AACV+B,cAAME,eAAe;MACvB,WAAWF,MAAMC,cAAc,eAAe;AAC5C,aAAK/B,KAAK;AACV8B,cAAME,eAAe;MACvB;IACF,CAAC;EACH;EAEAC,OAAOxB,QAAyByB,MAAuB;AACrD,QAAI,KAAKpC,MAAMW,MAAM,EAAE0B,WAAW;AAAG;AACrC,UAAMC,OAAO,KAAKtC,MAAMW,MAAM,EAAE4B,IAAI;AACpC,QAAI,CAACD;AAAM;AACX,UAAME,OAAO,KAAK5C,MAAM6C,YAAY;AACpC,UAAMC,eAAeJ,KAAKK,MAAMC,OAAOJ,IAAI;AAC3C,SAAKxC,MAAMoC,IAAI,EAAES,KAAK;MACpBF,OAAOD;MACPI,OAAO1B,eAAekB,KAAKQ,OAAOJ,YAAY;IAChD,CAAC;AACD,SAAK5C,eAAe;AACpB,SAAKC,eAAe;AACpB,SAAKH,MAAMmD,eAAeT,KAAKK,OAAOtC,MAAMQ,QAAQI,IAAI;AACxD,SAAKlB,eAAe;AAEpB,SAAKiD,iBAAiBV,IAAI;EAC5B;EAEAW,QAAQ;AACN,SAAKjD,QAAQ;MAAEC,MAAM,CAAA;MAAIC,MAAM,CAAA;IAAG;EACpC;EAEAgD,SAAS;AACP,SAAKpD,eAAe;EACtB;EAEAoB,OAAOiC,aAAoBC,UAAiB;AAC1C,QAAID,YAAYE,IAAIhB,WAAW;AAAG;AAClC,SAAKrC,MAAME,OAAO,CAAA;AAClB,QAAIoD,YAAYH,YAAYP,OAAOQ,QAAQ;AAC3C,QAAIG,YAAY,KAAKpD;AACrB,UAAMqD,YAAYC,KAAKC,IAAI;AAC3B;;MAEE,KAAK5D,eAAe,KAAKD,QAAQ8D,QAAQH,aACzC,KAAKxD,MAAMC,KAAKoC,SAAS;MACzB;AACA,YAAMC,OAAO,KAAKtC,MAAMC,KAAKsC,IAAI;AACjC,UAAID,MAAM;AACRgB,oBAAYA,UAAUM,QAAQtB,KAAKK,KAAK;AACxCY,oBAAYjB,KAAKQ;MACnB;IACF,OAAO;AACL,WAAKhD,eAAe0D;IACtB;AACA,QAAIF,UAAUjB,OAAO,MAAM;AAAG;AAC9B,SAAKrC,MAAMC,KAAK4C,KAAK;MAAEF,OAAOW;MAAWR,OAAOS;IAAU,CAAC;AAE3D,QAAI,KAAKvD,MAAMC,KAAKoC,SAAS,KAAKxC,QAAQgE,UAAU;AAClD,WAAK7D,MAAMC,KAAK6D,MAAM;IACxB;EACF;EAEA5D,OAAO;AACL,SAAKiC,OAAO,QAAQ,MAAM;EAC5B;EAEAhB,UAAUwB,OAAc;AACtBoB,mBAAe,KAAK/D,MAAMC,MAAM0C,KAAK;AACrCoB,mBAAe,KAAK/D,MAAME,MAAMyC,KAAK;EACvC;EAEA1C,OAAO;AACL,SAAKkC,OAAO,QAAQ,MAAM;EAC5B;EAEUa,iBAAiBgB,WAAsB;AAC/C,QAAIA,UAAUlB,OAAO;AACnB,WAAKlD,MAAMqE,aAAaD,UAAUlB,OAAOzC,MAAMQ,QAAQI,IAAI;IAC7D,OAAO;AACL,YAAMiD,QAAQC,mBAAmB,KAAKvE,MAAMwE,QAAQJ,UAAUrB,KAAK;AACnE,WAAK/C,MAAMqE,aAAaC,OAAO7D,MAAMQ,QAAQI,IAAI;IACnD;EACF;AACF;AAtIE,cADIxB,SACG4E,YAA2B;EAChCV,OAAO;EACPE,UAAU;EACV7C,UAAU;AACZ;AAoIF,SAAS+C,eAAe/D,OAAoB2C,OAAc;AACxD,MAAI2B,cAAc3B;AAClB,WAAS4B,IAAIvE,MAAMqC,SAAS,GAAGkC,KAAK,GAAGA,KAAK,GAAG;AAC7C,UAAMC,UAAUxE,MAAMuE,CAAC;AACvBvE,UAAMuE,CAAC,IAAI;MACT5B,OAAO2B,YAAYnD,UAAUqD,QAAQ7B,OAAO,IAAI;MAChDG,OAAO0B,QAAQ1B,SAAS1B,eAAeoD,QAAQ1B,OAAOwB,WAAW;IACnE;AACAA,kBAAcE,QAAQ7B,MAAMxB,UAAUmD,WAAW;AACjD,QAAItE,MAAMuE,CAAC,EAAE5B,MAAMN,OAAO,MAAM,GAAG;AACjCrC,YAAMyE,OAAOF,GAAG,CAAC;IACnB;EACF;AACF;AAEA,SAASG,sBAAsBN,QAAgBzB,OAAc;AAC3D,QAAMgC,SAAShC,MAAMU,IAAIV,MAAMU,IAAIhB,SAAS,CAAC;AAC7C,MAAIsC,UAAU;AAAM,WAAO;AAC3B,MAAIA,OAAOC,UAAU,MAAM;AACzB,WAAO,OAAOD,OAAOC,WAAW,YAAYD,OAAOC,OAAOC,SAAS,IAAI;EACzE;AACA,MAAIF,OAAOG,cAAc,MAAM;AAC7B,WAAOC,OAAOC,KAAKL,OAAOG,UAAU,EAAEG,KAAMC,UAAS;AACnD,aAAOd,OAAOe,MAAMD,MAAME,MAAMC,KAAK,KAAK;IAC5C,CAAC;EACH;AACA,SAAO;AACT;AAEA,SAASlB,mBAAmBC,QAAgBzB,OAAc;AACxD,QAAM2C,eAAe3C,MAAM4C,OAAO,CAAClD,QAAQmD,OAAO;AAChD,WAAOnD,UAAUmD,GAAGC,UAAU;EAChC,GAAG,CAAC;AACJ,MAAIC,cAAc/C,MAAMN,OAAO,IAAIiD;AACnC,MAAIZ,sBAAsBN,QAAQzB,KAAK,GAAG;AACxC+C,mBAAe;EACjB;AACA,SAAOA;AACT;AAEA,SAAStE,eAAe0B,OAAqBH,OAAc;AACzD,MAAI,CAACG;AAAO,WAAOA;AACnB,QAAM6C,QAAQhD,MAAMiD,kBAAkB9C,MAAMoB,KAAK;AACjD,QAAM2B,MAAMlD,MAAMiD,kBAAkB9C,MAAMoB,QAAQpB,MAAMT,MAAM;AAC9D,SAAO;IAAE6B,OAAOyB;IAAOtD,QAAQwD,MAAMF;EAAM;AAC7C;;;AC7MA,IAAAG,sBAAkB;AAWlB,IAAMC,WAAN,cAAuBC,eAAwB;EAG7CC,YAAYC,OAAcC,SAAmC;AAC3D,UAAMD,OAAOC,OAAO;AACpBD,UAAME,KAAKC,iBAAiB,QAASC,OAAM;AAhB/C;AAiBMA,QAAEC,eAAe;AACjB,UAAIC,SAAyD;AAC7D,UAAIC,SAASC,qBAAqB;AAChCF,iBAASC,SAASC,oBAAoBJ,EAAEK,SAASL,EAAEM,OAAO;MAE5D,WAAWH,SAASI,wBAAwB;AAE1C,cAAMC,WAAWL,SAASI,uBAAuBP,EAAEK,SAASL,EAAEM,OAAO;AACrEJ,iBAASC,SAASM,YAAY;AAC9BP,eAAOQ,SAASF,SAASG,YAAYH,SAASI,MAAM;AACpDV,eAAOW,OAAOL,SAASG,YAAYH,SAASI,MAAM;MACpD;AAEA,YAAME,aAAaZ,UAAUN,MAAMmB,UAAUC,gBAAgBd,MAAM;AACnE,UAAIY,YAAY;AACd,cAAMG,QAAQrB,MAAMmB,UAAUG,kBAAkBJ,UAAU;AAC1D,aAAId,OAAEmB,iBAAFnB,mBAAgBoB,OAAO;AACzB,eAAKC,OAAOJ,OAAOjB,EAAEmB,aAAaC,KAAK;QACzC;MACF;IACF,CAAC;EACH;EAEAC,OAAOJ,OAAcG,OAA0B;AAC7C,UAAME,UAAkB,CAAA;AACxBC,UAAMC,KAAKJ,KAAK,EAAEK,QAASC,UAAS;AA1CxC;AA2CM,UAAIA,UAAQ,UAAK7B,QAAQ8B,cAAb,mBAAwBC,SAASF,KAAKG,QAAO;AACvDP,gBAAQQ,KAAKJ,IAAI;MACnB;IACF,CAAC;AACD,QAAIJ,QAAQS,SAAS,GAAG;AAEtB,WAAKlC,QAAQmC,QAAQC,KAAK,MAAMhB,OAAOK,OAAO;IAChD;EACF;AACF;AAEA7B,SAASyC,WAAW;EAClBP,WAAW,CAAC,aAAa,YAAY;EACrCK,QAAQf,OAAcG,OAAe;AACnC,QAAI,CAAC,KAAKxB,MAAMuC,OAAOC,MAAM,OAAO,GAAG;AACrC;IACF;AACA,UAAMC,WAAWjB,MAAMkB,IAAsBZ,UAAS;AACpD,aAAO,IAAIa,QAASC,aAAY;AAC9B,cAAMC,SAAS,IAAIC,WAAW;AAC9BD,eAAOE,SAAS,MAAM;AACpBH,kBAAQC,OAAOG,MAAgB;QACjC;AACAH,eAAOI,cAAcnB,IAAI;MAC3B,CAAC;IACH,CAAC;AACDa,YAAQO,IAAIT,QAAQ,EAAEU,KAAMC,YAAW;AACrC,YAAMC,SAASD,OAAOE,OAAO,CAACC,OAAcC,UAAU;AACpD,eAAOD,MAAME,OAAO;UAAED;QAAM,CAAC;MAC/B,GAAG,IAAIE,oBAAAA,QAAM,EAAEC,OAAOtC,MAAMuC,KAAK,EAAEC,OAAOxC,MAAMc,MAAM,CAAC;AACvD,WAAKnC,MAAM8D,eAAeT,QAAQU,gBAAQC,QAAQC,IAAI;AACtD,WAAKjE,MAAMkE,aACT7C,MAAMuC,QAAQR,OAAOjB,QACrB4B,gBAAQC,QAAQG,MAClB;IACF,CAAC;EACH;AACF;AAEA,IAAA,mBAAetE;;;AC5Df,IAAAuE,sBAAoD;;;ACtBpD,IAAAC,sBAAkB;AAMlB,IAAMC,eAAe,CAAC,cAAc,uBAAuB;AAE3D,IAAMC,QAAN,cAAoBC,eAAO;EACzBC,YAAYC,OAAcC,SAAgC;AACxD,UAAMD,OAAOC,OAAO;AAEpBD,UAAME,KAAKC,iBAAiB,eAAgBC,WAAU;AACpD,WAAKC,kBAAkBD,KAAK;IAC9B,CAAC;AAID,QAAI,CAAC,WAAWE,KAAKC,UAAUC,SAAS,GAAG;AACzCR,YAAMS,GAAGC,MAAMC,OAAOC,0BAA0B,MAAM;AACpD,aAAKC,uBAAuB;MAC9B,CAAC;IACH;EACF;EAEQC,YAAYC,OAAc;AAChCD,gBAAY;MAAEC;MAAOf,OAAO,KAAKA;IAAM,CAAC;EAC1C;EAEQgB,YAAYD,OAAyB;AAAA,QAAXE,OAAIC,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG;AACvC,QAAIH,MAAMI,WAAW;AAAG,aAAO;AAE/B,QAAIF,MAAM;AAER,YAAMI,UAAU,KAAKrB,MAAMsB,UAAUP,MAAMQ,OAAO,CAAC;AACnD,WAAKT,YAAYC,KAAK;AACtB,WAAKf,MAAMwB,eACT,IAAIC,oBAAAA,QAAM,EAAEC,OAAOX,MAAMQ,KAAK,EAAEI,OAAOV,MAAMI,OAAO,GACpDX,MAAMkB,QAAQC,IAChB;IACF,OAAO;AACL,WAAKf,YAAYC,KAAK;IACxB;AAEA,SAAKf,MAAM8B,aAAaf,MAAMQ,QAAQN,KAAKE,QAAQ,GAAGT,MAAMkB,QAAQG,MAAM;AAC1E,WAAO;EACT;EAEQ1B,kBAAkBD,OAAmB;AAC3C,QACE,KAAKJ,MAAMgC,YAAYC,eACvB7B,MAAM8B,oBACN,CAACtC,aAAauC,SAAS/B,MAAMgC,SAAS,GACtC;AACA;IACF;AAEA,UAAMC,cAAcjC,MAAMkC,kBACtBlC,MAAMkC,gBAAgB,EAAE,CAAC,IACzB;AACJ,QAAI,CAACD,eAAeA,YAAYE,cAAc,MAAM;AAClD;IACF;AAEA,UAAMtB,OAAOuB,2BAA2BpC,KAAK;AAC7C,QAAIa,QAAQ,MAAM;AAChB;IACF;AACA,UAAMwB,aAAa,KAAKzC,MAAM0C,UAAUC,gBAAgBN,WAAW;AACnE,UAAMtB,QAAQ0B,aACV,KAAKzC,MAAM0C,UAAUE,kBAAkBH,UAAU,IACjD;AACJ,QAAI1B,SAAS,KAAKC,YAAYD,OAAOE,IAAI,GAAG;AAC1Cb,YAAMyC,eAAe;IACvB;EACF;EAEQhC,yBAAyB;AAC/B,UAAME,QAAQ,KAAKf,MAAM8C,aAAa;AACtC,QAAI/B,OAAO;AACT,WAAKC,YAAYD,KAAK;IACxB;EACF;AACF;AAEA,SAASyB,2BAA2BpC,OAAmB;AArFvD;AA6FE,MAAI,OAAOA,MAAM2C,SAAS,UAAU;AAClC,WAAO3C,MAAM2C;EACf;AACA,OAAI3C,WAAM4C,iBAAN5C,mBAAoB6C,MAAMd,SAAS,eAAe;AACpD,WAAO/B,MAAM4C,aAAaE,QAAQ,YAAY;EAChD;AACA,SAAO;AACT;AAEA,IAAA,gBAAerD;;;AClGf,IAAMsD,QAAQ,OAAOC,KAAKC,UAAUC,QAAQ;AAGrC,IAAMC,iCAAiC;AAI9C,IAAMC,2BAA4BC,WAAyB;AACzD,MACEA,MAAMC,QAAQ,eACdD,MAAMC,QAAQ;EACdD,MAAMC,QAAQ,aACdD,MAAMC,QAAQ,eACdD,MAAMC,QAAQ,QACd;AACA,WAAO;EACT;AAEA,MAAIP,SAASM,MAAMC,QAAQ,OAAOD,MAAME,YAAY,MAAM;AACxD,WAAO;EACT;AAEA,SAAO;AACT;AAEA,IAAMC,SAAN,cAAqBC,eAAO;EAI1BC,YAAYC,OAAcC,SAAgC;AACxD,UAAMD,OAAOC,OAAO;AAJtBC,uCAAc;AACdC,mDAA0B;AAKxB,SAAKC,gBAAgB;AACrB,SAAKC,0BAA0B;EACjC;EAEQD,kBAAkB;AACxB,SAAKJ,MAAMM,SAASC,WAAW;MAC7BZ,KAAK,CAAC,aAAa,YAAY;MAC/Ba,QAAQ;MACRC,UAAU;MACVC,QAAQC,OAAKC,MAAmB;AAAA,YAAjB;UAAEC;UAAMnB;QAAM,IAACkB;AAC5B,YAAI,EAAEC,gBAAgBC,iBAAe,CAACD,KAAKE,QAAQ;AACjD,iBAAO;QACT;AAEA,cAAMC,QAAQC,iBAAiBJ,KAAKK,OAAO,EAAE,WAAW,MAAM;AAC9D,YACGF,SAAStB,MAAMC,QAAQ,gBACvB,CAACqB,SAAStB,MAAMC,QAAQ,aACzB;AACA,iBAAO;QACT;AAEA,aAAKK,MAAMmB,aACTR,MAAMS,QAAQ,GACdT,MAAMU,UAAU3B,MAAMe,WAAW,IAAI,IACrCa,MAAMC,QAAQC,IAChB;AACA,eAAO;MACT;IACF,CAAC;EACH;EAEQnB,4BAA4B;AAClC,SAAKL,MAAMyB,KAAKC,iBAAiB,WAAYhC,WAAU;AACrD,UAAI,CAACA,MAAMiC,oBAAoBlC,yBAAyBC,KAAK,GAAG;AAC9D,aAAKkC,iCAAiC;MACxC;IACF,CAAC;EACH;;;;;;;EAQQA,mCAAmC;AACzC,SAAKzB,0BAA0B0B,KAAKC,IAAI,IAAItC;AAE5C,QAAI,KAAKU;AAAa;AACtB,SAAKA,cAAc;AAEnB,UAAM6B,WAAWA,MAAM;AACrB,WAAK7B,cAAc;AAEnB,UAAI2B,KAAKC,IAAI,KAAK,KAAK3B,yBAAyB;AAC9C,aAAK6B,sBAAsB;MAC7B;IACF;AAEAC,aAASP,iBAAiB,mBAAmBK,UAAU;MACrDG,MAAM;IACR,CAAC;EACH;EAEQF,wBAAwB;AAC9B,UAAMG,YAAYF,SAASG,aAAa;AACxC,QAAI,CAACD;AAAW;AAChB,UAAMxB,QAAQwB,UAAUE,WAAW,CAAC;AACpC,QAAI1B,MAAM2B,cAAc,QAAQ3B,MAAM4B,gBAAgB;AAAG;AAEzD,UAAM1B,OAAO,KAAKb,MAAMwC,OAAOC,KAAK9B,MAAM+B,cAAc;AACxD,QAAI,EAAE7B,gBAAgBC,iBAAe,CAACD,KAAKE;AAAQ;AAEnD,UAAM4B,WAAWV,SAASW,YAAY;AACtCD,aAASE,cAAchC,KAAKE,MAAM;AAClC4B,aAASG,YAAYjC,KAAKE,MAAM;AAChCoB,cAAUY,gBAAgB;AAC1BZ,cAAUa,SAASL,QAAQ;EAC7B;AACF;AAEA,IAAA,iBAAe9C;;;AFlFfoD,MAAMC,SAAS;EACb,eAAeC;EACf,qBAAqBC;EACrB,eAAeC;EACf,mBAAmBC;EACnB,gBAAgBC;EAChB,eAAeC;EACf,gBAAgBC;EAChB,gBAAgBC;EAChB,cAAcC;EAEd,qBAAqBC;EACrB,mBAAmBC;EACnB,oBAAoBC;EACpB,oBAAoBC;EACpB,iBAAiBC;EACjB,kBAAkBC;AACpB,CAAC;AAED,IAAA,eAAehB;;;AGrDf,IAAMiB,mBAAN,cAA+BC,kBAAgB;EAC7CC,IAAIC,MAAmBC,OAAwB;AAC7C,QAAIC,kBAAkB;AACtB,QAAID,UAAU,QAAQA,UAAU,MAAM;AACpC,YAAME,SAAS,KAAKF,MAAMD,IAAI,KAAK;AACnCE,wBAAkBD,UAAU,OAAOE,SAAS,IAAIA,SAAS;IAC3D,WAAW,OAAOF,UAAU,UAAU;AACpCC,wBAAkBD;IACpB;AACA,QAAIC,oBAAoB,GAAG;AACzB,WAAKE,OAAOJ,IAAI;AAChB,aAAO;IACT;AACA,WAAO,MAAMD,IAAIC,MAAME,gBAAgBG,SAAS,CAAC;EACnD;EAEAC,OAAON,MAAmBC,OAAe;AACvC,WAAO,MAAMK,OAAON,MAAMC,KAAK,KAAK,MAAMK,OAAON,MAAMO,SAASN,OAAO,EAAE,CAAC;EAC5E;EAEAA,MAAMD,MAAmB;AACvB,WAAOO,SAAS,MAAMN,MAAMD,IAAI,GAAG,EAAE,KAAKQ;EAC5C;AACF;AAEA,IAAMC,cAAc,IAAIZ,iBAAiB,UAAU,aAAa;EAC9Da,OAAOC,MAAMC;;EAEbC,WAAW,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACpC,CAAC;AAED,IAAA,iBAAeJ;;;AC/Bf,IAAMK,aAAN,cAAyBC,MAAM;AAG/B;AAFE,cADID,YACGE,YAAW;AAClB,cAFIF,YAEGG,WAAU;AAGnB,IAAA,qBAAeH;;;ACLf,IAAMI,SAAN,cAAqBC,MAAM;EAIzB,OAAOC,QAAQC,SAAkB;AAC/B,WAAO,KAAKC,QAAQC,QAAQF,QAAQC,OAAO,IAAI;EACjD;AACF;AANE,cADIJ,QACGM,YAAW;AAClB,cAFIN,QAEGI,WAAU,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AAOtD,IAAA,iBAAeJ;;;ACNf,IAAMO,gBAAN,cAA4BC,kBAAU;AAAA;AACtCD,cAAcE,WAAW;AACzBF,cAAcG,UAAU;AAExB,IAAMC,WAAN,cAAuBC,MAAM;EAC3B,OAAOC,OAAOC,OAAe;AAC3B,UAAMC,OAAO,MAAMF,OAAO;AAC1BE,SAAKC,aAAa,aAAaF,KAAK;AACpC,WAAOC;EACT;EAEA,OAAOE,QAAQC,SAAsB;AACnC,WAAOA,QAAQC,aAAa,WAAW,KAAKC;EAC9C;EAEA,OAAOC,WAAW;AAChBC,UAAMD,SAASd,aAAa;EAC9B;EAEAgB,YAAYC,QAAgBN,SAAsB;AAChD,UAAMM,QAAQN,OAAO;AACrB,UAAMO,KAAKP,QAAQQ,cAAcC,cAAc,MAAM;AACrD,UAAMC,mBAAoBC,OAAa;AACrC,UAAI,CAACL,OAAOM,UAAU;AAAG;AACzB,YAAMC,SAAS,KAAKC,QAAQf,QAAQC,SAASM,MAAM;AACnD,UAAIO,WAAW,WAAW;AACxB,aAAKA,OAAO,QAAQ,WAAW;AAC/BF,UAAEI,eAAe;MACnB,WAAWF,WAAW,aAAa;AACjC,aAAKA,OAAO,QAAQ,SAAS;AAC7BF,UAAEI,eAAe;MACnB;IACF;AACAR,OAAGS,iBAAiB,aAAaN,gBAAgB;AACjDH,OAAGS,iBAAiB,cAAcN,gBAAgB;AAClD,SAAKO,SAASV,EAAE;EAClB;EAEAM,OAAOK,MAActB,OAAe;AAClC,QAAIsB,SAAS,KAAKJ,QAAQvB,YAAYK,OAAO;AAC3C,WAAKI,QAAQF,aAAa,aAAaF,KAAK;IAC9C,OAAO;AACL,YAAMiB,OAAOK,MAAMtB,KAAK;IAC1B;EACF;AACF;AACAH,SAASF,WAAW;AACpBE,SAASD,UAAU;AAEnBH,cAAc8B,kBAAkB,CAAC1B,QAAQ;AACzCA,SAAS2B,oBAAoB/B;;;ACrD7B,IAAMgC,OAAN,cAAmBC,eAAO;EAIxB,OAAOC,SAAS;AACd,WAAO,MAAMA,OAAO;EACtB;EAEA,OAAOC,UAAU;AACf,WAAO;EACT;EAEAC,SAASC,SAAiC;AACxC,UAAMD,SAASC,OAAO;AACtB,QAAI,KAAKC,QAAQC,YAAY,KAAKC,QAAQD,QAAQ,CAAC,GAAG;AACpD,WAAKE,YAAY,KAAKD,QAAQE,QAAQ;IACxC;EACF;AACF;AAjBE,cADIV,MACGU,YAAW;AAClB,cAFIV,MAEGO,WAAU,CAAC,UAAU,GAAG;AAkBjC,IAAA,eAAeP;;;ACpBf,IAAMW,SAAN,cAAqBC,aAAK;AAG1B;AAFE,cADID,QACGE,YAAW;AAClB,cAFIF,QAEGG,WAAU,CAAC,MAAM,GAAG;AAG7B,IAAA,iBAAeH;;;ACLf,IAAMI,OAAN,cAAmBC,eAAO;EAMxB,OAAOC,OAAOC,OAAe;AAC3B,UAAMC,OAAO,MAAMF,OAAOC,KAAK;AAC/BC,SAAKC,aAAa,QAAQ,KAAKC,SAASH,KAAK,CAAC;AAC9CC,SAAKC,aAAa,OAAO,qBAAqB;AAC9CD,SAAKC,aAAa,UAAU,QAAQ;AACpC,WAAOD;EACT;EAEA,OAAOG,QAAQC,SAAsB;AACnC,WAAOA,QAAQC,aAAa,MAAM;EACpC;EAEA,OAAOH,SAASI,KAAa;AAC3B,WAAOJ,SAASI,KAAK,KAAKC,kBAAkB,IAAID,MAAM,KAAKE;EAC7D;EAEAC,OAAOC,MAAcX,OAAgB;AACnC,QAAIW,SAAS,KAAKC,QAAQC,YAAY,CAACb,OAAO;AAC5C,YAAMU,OAAOC,MAAMX,KAAK;IAC1B,OAAO;AAEL,WAAKK,QAAQH,aAAa,QAAQ,KAAKY,YAAYX,SAASH,KAAK,CAAC;IACpE;EACF;AACF;AA7BE,cADIH,MACGgB,YAAW;AAClB,cAFIhB,MAEGkB,WAAU;AACjB,cAHIlB,MAGGY,iBAAgB;AACvB,cAJIZ,MAIGW,sBAAqB,CAAC,QAAQ,SAAS,UAAU,OAAO,KAAK;AA4BtE,SAASL,SAASI,KAAaS,WAAqB;AAClD,QAAMC,SAASC,SAASC,cAAc,GAAG;AACzCF,SAAOG,OAAOb;AACd,QAAMc,WAAWJ,OAAOG,KAAKE,MAAM,GAAGL,OAAOG,KAAKG,QAAQ,GAAG,CAAC;AAC9D,SAAOP,UAAUO,QAAQF,QAAQ,IAAI;AACvC;;;ACrCA,IAAMG,SAAN,cAAqBC,eAAO;EAI1B,OAAOC,OAAOC,OAAwC;AACpD,QAAIA,UAAU,SAAS;AACrB,aAAOC,SAASC,cAAc,KAAK;IACrC;AACA,QAAIF,UAAU,OAAO;AACnB,aAAOC,SAASC,cAAc,KAAK;IACrC;AACA,WAAO,MAAMH,OAAOC,KAAK;EAC3B;EAEA,OAAOG,QAAQC,SAAsB;AACnC,QAAIA,QAAQC,YAAY;AAAO,aAAO;AACtC,QAAID,QAAQC,YAAY;AAAO,aAAO;AACtC,WAAOC;EACT;AACF;AAlBE,cADIT,QACGU,YAAW;AAClB,cAFIV,QAEGQ,WAAU,CAAC,OAAO,KAAK;AAmBhC,IAAA,iBAAeR;;;ACrBf,IAAMW,SAAN,cAAqBC,aAAK;AAG1B;AAFE,cADID,QACGE,YAAW;AAClB,cAFIF,QAEGG,WAAU,CAAC,KAAK,QAAQ;AAGjC,IAAA,iBAAeH;;;ACLf,IAAMI,YAAN,cAAwBC,eAAO;AAG/B;AAFE,cADID,WACGE,YAAW;AAClB,cAFIF,WAEGG,WAAU;AAGnB,IAAA,oBAAeH;;;ACLf,IAAMI,UAAN,cAAsBC,cAAM;EAK1B,OAAOC,OAAOC,OAAe;AAE3B,QAAIC,OAAOC,SAAS,MAAM;AACxB,YAAM,IAAIC,MAAM,gCAAgC;IAClD;AACA,UAAMC,OAAO,MAAML,OAAOC,KAAK;AAC/B,QAAI,OAAOA,UAAU,UAAU;AAE7BC,aAAOC,MAAMG,OAAOL,OAAOI,MAAM;QAC/BE,cAAc;QACdC,YAAY;MACd,CAAC;AACDH,WAAKI,aAAa,cAAcR,KAAK;IACvC;AACA,WAAOI;EACT;EAEA,OAAOJ,MAAMS,SAAkB;AAC7B,WAAOA,QAAQC,aAAa,YAAY;EAC1C;EAEAC,OAAO;AACL,UAAM;MAAEC;IAAQ,IAAI,KAAKZ,MAAM;AAC/B,WAAQ,SAAQY,OAAQ;EAC1B;AACF;AA7BE,cADIf,SACGgB,YAAW;AAClB,cAFIhB,SAEGiB,aAAY;AACnB,cAHIjB,SAGGkB,WAAU;AA6BnB,IAAA,kBAAelB;;;AC/Bf,IAAMmB,aAAa,CAAC,OAAO,UAAU,OAAO;AAE5C,IAAMC,QAAN,cAAoBC,YAAU;EAI5B,OAAOC,OAAOC,OAAe;AAC3B,UAAMC,OAAO,MAAMF,OAAOC,KAAK;AAC/B,QAAI,OAAOA,UAAU,UAAU;AAC7BC,WAAKC,aAAa,OAAO,KAAKC,SAASH,KAAK,CAAC;IAC/C;AACA,WAAOC;EACT;EAEA,OAAOG,QAAQC,SAAkB;AAC/B,WAAOT,WAAWU,OAChB,CAACF,SAAwCG,cAAc;AACrD,UAAIF,QAAQG,aAAaD,SAAS,GAAG;AACnCH,gBAAQG,SAAS,IAAIF,QAAQI,aAAaF,SAAS;MACrD;AACA,aAAOH;IACT,GACA,CAAC,CACH;EACF;EAEA,OAAOM,MAAMC,KAAa;AACxB,WAAO,qBAAqBC,KAAKD,GAAG,KAAK,yBAAyBC,KAAKD,GAAG;EAC5E;EAEA,OAAOR,SAASQ,KAAa;AAC3B,WAAOR,SAASQ,KAAK,CAAC,QAAQ,SAAS,MAAM,CAAC,IAAIA,MAAM;EAC1D;EAEA,OAAOX,MAAMK,SAAkB;AAC7B,WAAOA,QAAQI,aAAa,KAAK;EACnC;EAIAI,OAAOC,MAAcd,OAAe;AAClC,QAAIJ,WAAWmB,QAAQD,IAAI,IAAI,IAAI;AACjC,UAAId,OAAO;AACT,aAAKK,QAAQH,aAAaY,MAAMd,KAAK;MACvC,OAAO;AACL,aAAKK,QAAQW,gBAAgBF,IAAI;MACnC;IACF,OAAO;AACL,YAAMD,OAAOC,MAAMd,KAAK;IAC1B;EACF;AACF;AAhDE,cADIH,OACGoB,YAAW;AAClB,cAFIpB,OAEGqB,WAAU;AAiDnB,IAAA,gBAAerB;;;ACrDf,IAAMsB,cAAa,CAAC,UAAU,OAAO;AAErC,IAAMC,QAAN,cAAoBC,WAAW;EAK7B,OAAOC,OAAOC,OAAe;AAC3B,UAAMC,OAAO,MAAMF,OAAOC,KAAK;AAC/BC,SAAKC,aAAa,eAAe,GAAG;AACpCD,SAAKC,aAAa,mBAAmB,MAAM;AAC3CD,SAAKC,aAAa,OAAO,KAAKC,SAASH,KAAK,CAAC;AAC7C,WAAOC;EACT;EAEA,OAAOG,QAAQC,SAAkB;AAC/B,WAAOT,YAAWU,OAChB,CAACF,SAAwCG,cAAc;AACrD,UAAIF,QAAQG,aAAaD,SAAS,GAAG;AACnCH,gBAAQG,SAAS,IAAIF,QAAQI,aAAaF,SAAS;MACrD;AACA,aAAOH;IACT,GACA,CAAC,CACH;EACF;EAEA,OAAOD,SAASO,KAAa;AAC3B,WAAOC,KAAKR,SAASO,GAAG;EAC1B;EAEA,OAAOV,MAAMK,SAAkB;AAC7B,WAAOA,QAAQI,aAAa,KAAK;EACnC;EAIAG,OAAOC,MAAcb,OAAe;AAClC,QAAIJ,YAAWkB,QAAQD,IAAI,IAAI,IAAI;AACjC,UAAIb,OAAO;AACT,aAAKK,QAAQH,aAAaW,MAAMb,KAAK;MACvC,OAAO;AACL,aAAKK,QAAQU,gBAAgBF,IAAI;MACnC;IACF,OAAO;AACL,YAAMD,OAAOC,MAAMb,KAAK;IAC1B;EACF;EAEAgB,OAAO;AACL,UAAM;MAAEC;IAAM,IAAI,KAAKjB,MAAM;AAC7B,WAAQ,YAAWiB,KAAM,KAAIA,KAAM;EACrC;AACF;AAlDE,cADIpB,OACGqB,YAAW;AAClB,cAFIrB,OAEGsB,aAAY;AACnB,cAHItB,OAGGuB,WAAU;AAkDnB,IAAA,gBAAevB;;;AC1Df,IAAAwB,uBAAkB;AAalB,IAAMC,kBAAkB,IAAIC,kBAAgB,cAAc,QAAQ;EAChEC,OAAOC,MAAMC;AACf,CAAC;AACD,IAAMC,YAAN,MAAMA,mBAAkBC,eAAO;EAC7B,OAAOC,QAAQC,MAAeC,QAAoB;AAChD,WAAOD,QAAQ,QAAQA,SAASC,OAAOC,SAAS;AAC9C,UAAIF,KAAKG,aAAaH,KAAKG,UAAUC,SAASC,UAAUC,SAAS,GAAG;AAElE,eAAO,MAAMP,QAAQC,MAAMC,MAAM;MACnC;AAEAD,aAAOA,KAAKO;IACd;AACA,WAAOC;EACT;EAEAC,YAAYR,QAAoBC,SAAeQ,OAAgB;AAE7D,UAAMT,QAAQC,SAASQ,KAAK;AAC5BlB,oBAAgBmB,IAAI,KAAKT,SAASQ,KAAK;EACzC;EAEAE,OAAOA,QAAgBF,OAAgB;AACrC,QAAIE,WAAWf,WAAUgB,UAAU;AACjC,YAAMD,OAAOA,QAAQF,KAAK;IAC5B,WAAWA,OAAO;AAChBlB,sBAAgBmB,IAAI,KAAKT,SAASQ,KAAK;IACzC,OAAO;AACLlB,sBAAgBsB,OAAO,KAAKZ,OAAO;AACnC,WAAKA,QAAQC,UAAUW,OAAO,KAAKC,QAAQT,SAAS;IACtD;EACF;EAEAU,WAA6B;AAE3B,UAAMA,SAAS,GAAAC,SAAO;AACtB,QAAI,CAACzB,gBAAgBkB,MAAM,KAAKR,OAAO,GAAG;AACxC,WAAKgB,OAAO;IACd;EACF;AACF;AACArB,UAAUgB,WAAW;AACrBhB,UAAUS,YAAY;AAEtB,IAAMa,kBAAN,cAA8Bd,UAAU;EACtC,OAAOe,OAAOV,OAAgB;AAC5B,UAAMR,UAAU,MAAMkB,OAAOV,KAAK;AAClC,QAAI,OAAOA,UAAU,UAAU;AAC7BR,cAAQmB,aAAa,iBAAiBX,KAAK;IAC7C;AACA,WAAOR;EACT;EAEA,OAAOH,QAAQG,SAAe;AAE5B,WAAOA,QAAQoB,aAAa,eAAe,KAAK;EAClD;EAEA,OAAOC,WAAW;EAAC;;EAEnBX,OAAOY,MAAcd,OAAgB;AACnC,QAAIc,SAAS,KAAKT,QAAQF,YAAYH,OAAO;AAE3C,WAAKR,QAAQmB,aAAa,iBAAiBX,KAAK;IAClD,OAAO;AACL,YAAME,OAAOY,MAAMd,KAAK;IAC1B;EACF;EAEAe,YAAYD,MAAqBd,OAAa;AAC5C,SAAKgB,SAAS,GAAG,KAAKC,OAAO,GAAG9B,UAAUgB,UAAU,KAAK;AACzD,WAAO,MAAMY,YAAYD,MAAMd,KAAK;EACtC;AACF;AAEA,IAAMkB,2BAAN,cAAuCC,mBAAmB;EAIxDC,SAAS;AACP,UAAMA,OAAO;AACb,SAAKC,YAAY;AAEjB,SAAK9B,OAAO+B,UAAU,IAAI;EAC5B;EAEApB,OAAOY,MAAcd,OAAgB;AACnC,QAAIc,SAASL,gBAAgBN,UAAU;AACrC,WAAKkB,YAAY;AACjB,WAAKE,SAASC,QAASC,WAAU;AAE/BA,cAAMvB,OAAOY,MAAMd,KAAK;MAC1B,CAAC;IACH;EACF;EAEAgB,SAASU,OAAeT,QAAgBH,MAAcd,OAAgB;AACpE,QAAIc,SAASL,gBAAgBN,UAAU;AACrC,WAAKkB,YAAY;IACnB;AACA,UAAML,SAASU,OAAOT,QAAQH,MAAMd,KAAK;EAC3C;EAEA2B,UACEA,YAEA;AAAA,QADAC,SAAMrB,UAAAU,SAAA,KAAAV,UAAA,CAAA,MAAAT,SAAAS,UAAA,CAAA,IAAG;AAET,QAAI,KAAKgB,SAASM,QAAQ;AAAM;AAChC,UAAMC,QAAQC,MAAMC,KAAK,KAAKxC,QAAQyC,UAAU,EAAEC,OAC/C5C,UAASA,SAAS,KAAK6C,MAC1B;AACA,UAAMC,OAAQ,GAAEN,MAAMO,IAAK/C,UAASA,KAAKgD,WAAW,EAAEC,KAAK,IAAI,CAAE;;AACjE,UAAMC,WAAW/B,gBAAgBpB,QAAQ,KAAKkC,SAASM,KAAKrC,OAAO;AACnE,QAAIoC,UAAU,KAAKP,aAAa,KAAKoB,eAAeL,MAAM;AACxD,UAAIA,KAAKM,KAAK,EAAEzB,SAAS,KAAK,KAAKwB,cAAc,MAAM;AACrD,cAAME,WAAW,KAAKpB,SAASqB,OAAO,CAACC,QAAOpB,UAAU;AAEtD,iBAAOoB,OAAMC,OAAOC,WAAWtB,OAAO,KAAK,CAAC;QAC9C,GAAG,IAAIuB,qBAAAA,QAAM,CAAC;AACd,cAAMH,QAAQlB,WAAUS,MAAMI,QAAQ;AACtCG,iBAASM,KAAKJ,KAAK,EAAED,OAAO,CAAClB,OAAKwB,SAA6B;AAAA,cAA3B;YAAEC;YAAQC;UAAW,IAACF;AAExD,cAAI,CAACC;AAAQ,mBAAOzB;AACpB,cAAI0B,YAAY;AACdC,mBAAOC,KAAKF,UAAU,EAAE5B,QAAStB,YAAW;AAC1C,kBACE,CAACO,gBAAgBN,UAAUhB,UAAUgB,QAAQ,EAAEoD,SAASrD,MAAM,GAC9D;AAEA,qBAAKc,SAASU,OAAOyB,QAAQjD,QAAQkD,WAAWlD,MAAM,CAAC;cACzD;YACF,CAAC;UACH;AAEA,iBAAOwB,QAAQyB;QACjB,GAAG,CAAC;MACN;AACA,WAAKV,aAAaL;AAClB,WAAKf,YAAY;IACnB;EACF;EAEAmC,KAAK9B,OAAeT,QAAgB;AAClC,UAAM,CAACwC,SAAS,IAAI,KAAKlC,SAASmC,KAAKhC,KAAK;AAC5C,UAAMc,WAAWiB,YACbhD,gBAAgBpB,QAAQoE,UAAUjE,OAAO,IACzC;AAEJ,WAAQ,uBAAsBgD,QAAS;EAAMmB,WAC3C,KAAKC,KAAKlC,OAAOT,MAAM,CACzB,CAAE;;EACJ;EAEAX,SAASuD,SAA8B;AACrC,UAAMvD,SAASuD,OAAO;AACtB,QACE,KAAKC,UAAU,QACf,KAAKvC,SAASM,QAAQ,QACtB,KAAKM,UAAU,MACf;AACA,YAAMK,WAAW/B,gBAAgBpB,QAAQ,KAAKkC,SAASM,KAAKrC,OAAO;AAEnE,UAAIgD,aAAa,KAAKL,OAAOnC,OAAO;AAElC,aAAKmC,OAAOnC,QAAQwC;MACtB;IACF;EACF;AACF;AAEAtB,yBAAyB6C,kBAAkB,CAACtD,eAAe;AAC3DA,gBAAgBuD,oBAAoB9C;AACpCT,gBAAgBsD,kBAAkB,CAAC5E,WAAW8E,gBAAYC,OAAUC,aAAS;AAQ7E,IAAMxC,YAAYA,CAACyC,KAAU5B,UAAkBJ,SAAiB;AAC9D,MAAI,OAAOgC,IAAIC,kBAAkB,UAAU;AACzC,UAAMC,eAAeF,IAAIC,cAAcE,MAAM,GAAG,EAAE,CAAC;AACnD,QAAIC,SAASF,cAAc,EAAE,KAAK,IAAI;AACpC,aAAOF,IAAIzC,UAAUS,MAAM;QAAEI;MAAS,CAAC,EAAExC;IAC3C;EACF;AACA,SAAOoE,IAAIzC,UAAUa,UAAUJ,IAAI,EAAEpC;AACvC;AAEA,IAAMyE,SAAN,cAAqBC,eAAsB;EAGzC,OAAO7D,WAAW;AAChB8D,UAAM9D,SAAS1B,WAAW,IAAI;AAC9BwF,UAAM9D,SAASJ,iBAAiB,IAAI;AACpCkE,UAAM9D,SAASK,0BAA0B,IAAI;EAC/C;EAIAnB,YAAY6E,OAAcC,SAAiC;AACzD,UAAMD,OAAOC,OAAO;AACpB,QAAI,KAAKA,QAAQC,QAAQ,MAAM;AAC7B,YAAM,IAAIC,MACR,2FACF;IACF;AAEA,SAAKC,YAAY,KAAKH,QAAQG,UAAUpC,OACtC,CAACqC,MAA6BC,UAAc;AAAA,UAAZ;QAAEC;MAAI,IAACD;AACrCD,WAAKE,GAAG,IAAI;AACZ,aAAOF;IACT,GACA,CAAC,CACH;AACA,SAAKG,gBAAgB,KAAKA,cAAcC,KAAK,IAAI;AACjD,SAAKC,aAAa;AAClB,SAAKC,UAAU;EACjB;EAEAD,eAAe;AACb,SAAKV,MAAMY,GAAGb,MAAMc,OAAOC,mBAAoBC,UAAe;AAC5D,UAAI,EAAEA,gBAAgBzE;AAA2B;AACjD,YAAM0E,SAAS,KAAKhB,MAAMiB,KAAKC,cAAcC,cAAc,QAAQ;AAEnE,WAAKlB,QAAQG,UAAUxD,QAAQwE,WAAoB;AAAA,YAAnB;UAAEb;UAAKc;QAAM,IAACD;AAC5C,cAAME,SAASN,OAAOE,cAAcC,cAAc,QAAQ;AAC1DG,eAAO5D,cAAc2D;AACrBC,eAAOvF,aAAa,SAASwE,GAAG;AAChCS,eAAOO,YAAYD,MAAM;MAC3B,CAAC;AACDN,aAAOQ,iBAAiB,UAAU,MAAM;AACtCT,aAAKzF,OAAOO,gBAAgBN,UAAUyF,OAAO5F,KAAK;AAClD,aAAK4E,MAAMiB,KAAKQ,MAAM;AACtB,aAAK1E,UAAUgE,MAAM,IAAI;MAC3B,CAAC;AACD,UAAIA,KAAKxD,UAAU,MAAM;AACvBwD,aAAKW,SAASV,MAAM;AACpB,YAAID,KAAKpE,SAASM,MAAM;AACtB+D,iBAAO5F,QAAQS,gBAAgBpB,QAAQsG,KAAKpE,SAASM,KAAKrC,OAAO;QACnE;MACF;IACF,CAAC;EACH;EAEA+F,YAAY;AACV,QAAIgB,QAA8C;AAClD,SAAK3B,MAAMY,GAAGb,MAAMc,OAAOe,iBAAiB,MAAM;AAChD,UAAID,OAAO;AACTE,qBAAaF,KAAK;MACpB;AACAA,cAAQG,WAAW,MAAM;AACvB,aAAK/E,UAAU;AACf4E,gBAAQ;MACV,GAAG,KAAK1B,QAAQ8B,QAAQ;IAC1B,CAAC;EACH;EAEAhF,YAAuE;AAAA,QAA7DgE,OAAqCpF,UAAAU,SAAA,KAAAV,UAAA,CAAA,MAAAT,SAAAS,UAAA,CAAA,IAAG;AAAI,QAAEqG,QAAKrG,UAAAU,SAAA,KAAAV,UAAA,CAAA,MAAAT,SAAAS,UAAA,CAAA,IAAG;AAC9D,QAAI,KAAKqE,MAAMiC,UAAUC;AAAW;AACpC,SAAKlC,MAAMmC,OAAOpC,MAAMqC,QAAQC,IAAI;AACpC,UAAMC,QAAQ,KAAKtC,MAAMuC,aAAa;AACtC,UAAMC,QACJzB,QAAQ,OACJ,KAAKf,MAAMrF,OAAO8H,YAAYnG,wBAAwB,IACtD,CAACyE,IAAI;AACXyB,UAAM5F,QAAS8F,eAAc;AAC3BA,gBAAU3F,UAAU,KAAKyD,eAAewB,KAAK;IAC/C,CAAC;AACD,SAAKhC,MAAMmC,OAAOpC,MAAMqC,QAAQO,MAAM;AACtC,QAAIL,SAAS,MAAM;AACjB,WAAKtC,MAAM4C,aAAaN,OAAOvC,MAAMqC,QAAQO,MAAM;IACrD;EACF;EAEAnC,cAAchD,MAAkC;AAAA,QAApBI,WAAQjC,UAAAU,SAAA,KAAAV,UAAA,CAAA,MAAAT,SAAAS,UAAA,CAAA,IAAG;AACrCiC,eAAW,KAAKwC,UAAUxC,QAAQ,IAAIA,WAAW;AACjD,QAAIA,aAAa,SAAS;AACxB,aAAOmB,WAAWvB,IAAI,EACnBmC,MAAM,IAAI,EACV3B,OAAO,CAACC,OAAO4E,MAAMC,MAAM;AAC1B,YAAIA,MAAM,GAAG;AACX7E,gBAAM8E,OAAO,MAAM;YAAE,CAAChI,UAAUQ,QAAQ,GAAGqC;UAAS,CAAC;QACvD;AACA,eAAOK,MAAM8E,OAAOF,IAAI;MAC1B,GAAG,IAAIzE,qBAAAA,QAAM,CAAC;IAClB;AACA,UAAMsE,YAAY,KAAK1C,MAAMiB,KAAKC,cAAcC,cAAc,KAAK;AACnEuB,cAAU7H,UAAUQ,IAAIN,UAAUC,SAAS;AAC3C0H,cAAUM,YAAYjG,UAAU,KAAKkD,QAAQC,MAAMtC,UAAUJ,IAAI;AACjE,WAAOyF,SACL,KAAKjD,MAAMrF,QACX+H,WACA,CACE,CAAChI,MAAMuD,UAAU;AAEf,YAAM7C,QAAQlB,gBAAgBkB,MAAMV,IAAI;AACxC,UAAIU,OAAO;AACT,eAAO6C,MAAMiF,QACX,IAAI9E,qBAAAA,QAAM,EAAEG,OAAON,MAAM5B,OAAO,GAAG;UACjC,CAAC9B,UAAUgB,QAAQ,GAAGH;QACxB,CAAC,CACH;MACF;AACA,aAAO6C;IACT,CAAC,GAEH,CACE,CAACvD,MAAMuD,UAAU;AAEf,aAAOvD,KAAKyI,KAAKxD,MAAM,IAAI,EAAE3B,OAAO,CAACqC,MAAM+C,UAAUN,MAAM;AACzD,YAAIA,MAAM;AAAGzC,eAAK0C,OAAO,MAAM;YAAE,CAAChI,UAAUQ,QAAQ,GAAGqC;UAAS,CAAC;AACjE,eAAOyC,KAAK0C,OAAOK,QAAQ;MAC7B,GAAGnF,KAAK;IACV,CAAC,GAEH,oBAAIoF,QAAQ,CACd;EACF;AACF;AACAxD,OAAOyD,WAAW;EAChBpD,OAAO,MAAM;AACX,WAAOqD,OAAOrD;EAChB,GAAG;EACH6B,UAAU;EACV3B,WAAW,CACT;IAAEG,KAAK;IAASc,OAAO;EAAQ,GAC/B;IAAEd,KAAK;IAAQc,OAAO;EAAO,GAC7B;IAAEd,KAAK;IAAOc,OAAO;EAAM,GAC3B;IAAEd,KAAK;IAAMc,OAAO;EAAK,GACzB;IAAEd,KAAK;IAAOc,OAAO;EAAM,GAC3B;IAAEd,KAAK;IAAQc,OAAO;EAAO,GAC7B;IAAEd,KAAK;IAAOc,OAAO;EAAW,GAChC;IAAEd,KAAK;IAAQc,OAAO;EAAO,GAC7B;IAAEd,KAAK;IAAcc,OAAO;EAAa,GACzC;IAAEd,KAAK;IAAYc,OAAO;EAAW,GACrC;IAAEd,KAAK;IAAOc,OAAO;EAAM,GAC3B;IAAEd,KAAK;IAAUc,OAAO;EAAS,GACjC;IAAEd,KAAK;IAAQc,OAAO;EAAO,GAC7B;IAAEd,KAAK;IAAOc,OAAO;EAAM,CAAC;AAEhC;;;ACnWA,IAAAmC,uBAAkB;;;ACIlB,IAAMC,aAAN,MAAMA,mBAAkBC,MAAM;EAI5B,OAAOC,OAAOC,OAAe;AAC3B,UAAMC,OAAO,MAAMF,OAAO;AAC1B,QAAIC,OAAO;AACTC,WAAKC,aAAa,YAAYF,KAAK;IACrC,OAAO;AACLC,WAAKC,aAAa,YAAYC,QAAQ,CAAC;IACzC;AACA,WAAOF;EACT;EAEA,OAAOG,QAAQC,SAAsB;AACnC,QAAIA,QAAQC,aAAa,UAAU,GAAG;AACpC,aAAOD,QAAQE,aAAa,UAAU;IACxC;AACA,WAAOC;EACT;EAIAC,aAAa;AACX,QAAI,KAAKC,QAAQ;AACf,aAAO,KAAKA,OAAOC,SAASC,QAAQ,IAAI;IAC1C;AACA,WAAO;EACT;EAEAC,OAAOC,MAAcd,OAAe;AAClC,QAAIc,SAASjB,WAAUkB,YAAYf,OAAO;AACxC,WAAKK,QAAQH,aAAa,YAAYF,KAAK;IAC7C,OAAO;AACL,YAAMa,OAAOC,MAAMd,KAAK;IAC1B;EACF;EAEAgB,MAAgB;AACd,WAAO,KAAKN;EACd;EAEAO,YAAY;AACV,QAAI,KAAKD,IAAI,GAAG;AACd,aAAO,KAAKA,IAAI,EAAEC,UAAU;IAC9B;AACA,WAAO;EACT;EAEAC,QAAQ;AACN,WAAO,KAAKF,IAAI,KAAK,KAAKA,IAAI,EAAEE,MAAM;EACxC;AACF;AAnDE,cADIrB,YACGkB,YAAW;AAClB,cAFIlB,YAEGsB,WAAU;AAFnB,IAAMtB,YAAN;AAsDA,IAAMuB,WAAN,cAAuBC,kBAAU;EAO/BC,aAAa;AAEX,QAAI,MAAMA,WAAW,KAAK,KAAKC,KAAKZ,SAASa,QAAQ,MAAM;AAEzD,YAAMC,WAAW,KAAKd,SAASa,KAAKpB,QAAQ;AAE5C,YAAMsB,WAAW,KAAKf,SAASgB,KAAKvB,QAAQ;AAE5C,YAAMwB,WAAW,KAAKL,KAAKZ,SAASa,KAAKpB,QAAQ;AAEjD,YAAMyB,WAAW,KAAKN,KAAKZ,SAASgB,KAAKvB,QAAQ;AACjD,aACEqB,SAASP,UAAUQ,SAASR,SAC5BO,SAASP,UAAUU,SAASV,SAC5BO,SAASP,UAAUW,SAASX;IAEhC;AACA,WAAO;EACT;EAEAY,SAASC,SAAiC;AACxC,UAAMD,SAASC,OAAO;AACtB,SAAKpB,SAASqB,QAASC,WAAU;AAC/B,UAAIA,MAAMV,QAAQ;AAAM;AACxB,YAAMW,eAAeD,MAAM7B,QAAQ;AACnC,YAAM+B,cAAcF,MAAMV,KAAKnB,QAAQ;AACvC,UAAI8B,aAAahB,UAAUiB,YAAYjB,OAAO;AAC5C,cAAMK,OAAO,KAAKa,WAAWH,KAAK;AAClC,YAAIV,MAAM;AAERA,eAAKO,SAAS;QAChB;AAEA,YAAI,KAAKO,MAAM;AAEb,eAAKA,KAAKP,SAAS;QACrB;MACF;IACF,CAAC;EACH;EAEAb,YAAY;AACV,QAAI,KAAKP,QAAQ;AACf,aAAO,KAAKA,OAAOC,SAASC,QAAQ,IAAI;IAC1C;AACA,WAAO;EACT;EAEAM,QAAQ;AACN,WAAO,KAAKR,UAAU,KAAKA,OAAOA;EACpC;AACF;AAzDE,cADIU,UACGL,YAAW;AAClB,cAFIK,UAEGD,WAAU;AA0DnB,IAAMmB,YAAN,cAAwBjB,kBAAU;AAKlC;AAJE,cADIiB,WACGvB,YAAW;AAClB,cAFIuB,WAEGnB,WAAU;AAKnB,IAAMoB,iBAAN,cAA6BlB,kBAAU;EAMrCmB,eAAe;AACb,UAAMC,OAAO,KAAKC,YAAYtB,QAAQ;AACtC,UAAMuB,aAAaF,KAAKG,OAAO,CAACC,KAAK7B,QAAQ;AAC3C,aAAO8B,KAAKD,IAAI7B,IAAIL,SAASoC,QAAQF,GAAG;IAC1C,GAAG,CAAC;AACJJ,SAAKT,QAAShB,SAAQ;AACpB,UAAIgC,MAAML,aAAa3B,IAAIL,SAASoC,MAAM,EAAEE,KAAK,CAAC,EAAEjB,QAAQ,MAAM;AAChE,YAAIhC;AACJ,YAAIgB,IAAIL,SAASa,QAAQ,MAAM;AAC7BxB,kBAAQH,UAAUO,QAAQY,IAAIL,SAASa,KAAKnB,OAAO;QACrD;AACA,cAAM6C,OAAO,KAAKC,OAAOpD,OAAOF,UAAUkB,UAAUf,KAAK;AACzDgB,YAAIoC,YAAYF,IAAI;AAEpBA,aAAKpB,SAAS;MAChB,CAAC;IACH,CAAC;EACH;EAEAuB,MAAMC,QAAgB;AACpB,WAAO,KAAKb,KAAK,EAAEc,IAAKvC,SAAQA,IAAIL,SAAS6C,GAAGF,MAAM,CAAC;EACzD;EAEAG,aAAaC,OAAe;AAE1B,UAAM,CAACC,IAAI,IAAI,KAAKC,WAAWtB,SAAS;AACxC,QAAIqB,QAAQ,QAAQA,KAAKhD,SAASa,QAAQ;AAAM;AAChDmC,SAAKhD,SAASqB,QAAShB,SAAQ;AAC7B,YAAM6C,OAAO7C,IAAIL,SAAS6C,GAAGE,KAAK;AAClC,UAAIG,QAAQ,MAAM;AAChBA,aAAKC,OAAO;MACd;IACF,CAAC;EACH;EAEAC,aAAaL,OAAe;AAE1B,UAAM,CAACC,IAAI,IAAI,KAAKC,WAAWtB,SAAS;AACxC,QAAIqB,QAAQ,QAAQA,KAAKhD,SAASa,QAAQ;AAAM;AAChDmC,SAAKhD,SAASqB,QAAShB,SAAQ;AAC7B,YAAMgD,MAAMhD,IAAIL,SAAS6C,GAAGE,KAAK;AAEjC,YAAM1D,QAAQH,UAAUO,QAAQY,IAAIL,SAASa,KAAKnB,OAAO;AACzD,YAAMwD,OAAO,KAAKV,OAAOpD,OAAOF,UAAUkB,UAAUf,KAAK;AACzDgB,UAAIiD,aAAaJ,MAAMG,GAAG;IAC5B,CAAC;EACH;EAEAE,UAAUR,OAAe;AAEvB,UAAM,CAACC,IAAI,IAAI,KAAKC,WAAWtB,SAAS;AACxC,QAAIqB,QAAQ,QAAQA,KAAKhD,SAASa,QAAQ;AAAM;AAChD,UAAM2C,KAAKhE,QAAQ;AACnB,UAAMa,MAAM,KAAKmC,OAAOpD,OAAOqB,SAASL,QAAQ;AAChD4C,SAAKhD,SAASa,KAAKb,SAASqB,QAAQ,MAAM;AACxC,YAAM6B,OAAO,KAAKV,OAAOpD,OAAOF,UAAUkB,UAAUoD,EAAE;AACtDnD,UAAIoC,YAAYS,IAAI;IACtB,CAAC;AACD,UAAMG,MAAML,KAAKhD,SAAS6C,GAAGE,KAAK;AAClCC,SAAKM,aAAajD,KAAKgD,GAAG;EAC5B;EAEAvB,OAAO;AACL,UAAMkB,OAAO,KAAKhD,SAASa;AAC3B,QAAImC,QAAQ;AAAM,aAAO,CAAA;AACzB,WAAOA,KAAKhD,SAAS4C,IAAKvC,SAAQA,GAAG;EACvC;AACF;AAxEE,cADIuB,gBACGxB,YAAW;AAClB,cAFIwB,gBAEGpB,WAAU;AAyEnBoB,eAAe6B,kBAAkB,CAAC9B,SAAS;AAC3CA,UAAU+B,oBAAoB9B;AAE9BD,UAAU8B,kBAAkB,CAAChD,QAAQ;AACrCA,SAASiD,oBAAoB/B;AAE7BlB,SAASgD,kBAAkB,CAACvE,SAAS;AACrCA,UAAUwE,oBAAoBjD;AAE9B,SAASjB,UAAU;AACjB,QAAMgE,KAAKrB,KAAKwB,OAAO,EAAEC,SAAS,EAAE,EAAEC,MAAM,GAAG,CAAC;AAChD,SAAQ,OAAML,EAAG;AACnB;;;ADzMA,IAAMM,QAAN,cAAoBC,eAAO;EACzB,OAAOC,WAAW;AAChBC,UAAMD,SAASE,SAAS;AACxBD,UAAMD,SAASG,QAAQ;AACvBF,UAAMD,SAASI,SAAS;AACxBH,UAAMD,SAASK,cAAc;EAC/B;EAEAC,cAA2D;AACzD,UAAM,GAAAC,SAAO;AACb,SAAKC,mBAAmB;EAC1B;EAEAC,gBAAgB;AACd,SAAKC,MAAMC,OAAOC,YAAYP,cAAc,EAAEQ,QAASC,WAAU;AAC/DA,YAAMC,aAAa;IACrB,CAAC;EACH;EAEAC,eAAe;AACb,UAAM,CAACF,OAAK,EAAIG,IAAI,IAAI,KAAKC,SAAS;AACtC,QAAID,QAAQ;AAAM;AAElBH,UAAME,aAAaC,KAAKE,WAAW,CAAC;AACpC,SAAKT,MAAMU,OAAOnB,MAAMoB,QAAQC,IAAI;EACtC;EAEAC,YAAY;AACV,UAAM,CAAA,EAAGC,GAAG,IAAI,KAAKN,SAAS;AAC9B,QAAIM,OAAO;AAAM;AACjBA,QAAIC,OAAO;AACX,SAAKf,MAAMU,OAAOnB,MAAMoB,QAAQC,IAAI;EACtC;EAEAI,cAAc;AACZ,UAAM,CAACZ,KAAK,IAAI,KAAKI,SAAS;AAC9B,QAAIJ,SAAS;AAAM;AAEnB,UAAMa,SAASb,MAAMa,OAAO;AAE5Bb,UAAMW,OAAO;AACb,SAAKf,MAAMU,OAAOnB,MAAMoB,QAAQC,IAAI;AACpC,SAAKZ,MAAMkB,aAAaD,QAAQ1B,MAAMoB,QAAQQ,MAAM;EACtD;EAEAX,WAEiE;AAAA,QAD/DY,QAAKvB,UAAAwB,SAAA,KAAAxB,UAAA,CAAA,MAAAyB,SAAAzB,UAAA,CAAA,IAAG,KAAKG,MAAMuB,aAAa;AAEhC,QAAIH,SAAS;AAAM,aAAO,CAAC,MAAM,MAAM,MAAM,EAAE;AAC/C,UAAM,CAACb,MAAMU,MAAM,IAAI,KAAKjB,MAAMwB,QAAQJ,MAAMK,KAAK;AACrD,QAAIlB,QAAQ,QAAQA,KAAKmB,QAAQC,aAAanC,UAAUmC,UAAU;AAChE,aAAO,CAAC,MAAM,MAAM,MAAM,EAAE;IAC9B;AACA,UAAMb,MAAMP,KAAKqB;AACjB,UAAMxB,QAAQU,IAAIc,OAAOA;AAEzB,WAAO,CAACxB,OAAOU,KAAKP,MAAMU,MAAM;EAClC;EAEAY,aAAaZ,QAAgB;AAC3B,UAAMG,QAAQ,KAAKpB,MAAMuB,aAAa;AACtC,QAAI,CAACH;AAAO;AACZ,UAAM,CAAChB,OAAOU,KAAKP,IAAI,IAAI,KAAKC,SAASY,KAAK;AAC9C,QAAIb,QAAQ;AAAM;AAClB,UAAMuB,SAASvB,KAAKE,WAAW;AAC/BL,UAAMyB,aAAaC,SAASb,MAAM;AAClC,SAAKjB,MAAMU,OAAOnB,MAAMoB,QAAQC,IAAI;AACpC,QAAImB,QAAQjB,IAAIkB,UAAU;AAC1B,QAAIf,WAAW,GAAG;AAChBc,eAAS;IACX;AACA,SAAK/B,MAAMkB,aACTE,MAAMK,QAAQM,OACdX,MAAMC,QACN9B,MAAMoB,QAAQQ,MAChB;EACF;EAEAc,mBAAmB;AACjB,SAAKJ,aAAa,CAAC;EACrB;EAEAK,oBAAoB;AAClB,SAAKL,aAAa,CAAC;EACrB;EAEAM,UAAUlB,QAAgB;AACxB,UAAMG,QAAQ,KAAKpB,MAAMuB,aAAa;AACtC,QAAI,CAACH;AAAO;AACZ,UAAM,CAAChB,OAAOU,KAAKP,IAAI,IAAI,KAAKC,SAASY,KAAK;AAC9C,QAAIb,QAAQ;AAAM;AAClB,UAAMkB,QAAQX,IAAIkB,UAAU;AAC5B5B,UAAM+B,UAAUV,QAAQR,MAAM;AAC9B,SAAKjB,MAAMU,OAAOnB,MAAMoB,QAAQC,IAAI;AACpC,QAAIK,SAAS,GAAG;AACd,WAAKjB,MAAMkB,aAAaE,OAAO7B,MAAMoB,QAAQQ,MAAM;IACrD,OAAO;AACL,WAAKnB,MAAMkB,aACTE,MAAMK,QAAQX,IAAIsB,SAASf,QAC3BD,MAAMC,QACN9B,MAAMoB,QAAQQ,MAChB;IACF;EACF;EAEAkB,iBAAiB;AACf,SAAKF,UAAU,CAAC;EAClB;EAEAG,iBAAiB;AACf,SAAKH,UAAU,CAAC;EAClB;EAEAI,YAAYC,MAAcC,SAAiB;AACzC,UAAMrB,QAAQ,KAAKpB,MAAMuB,aAAa;AACtC,QAAIH,SAAS;AAAM;AACnB,UAAMsB,QAAQ,IAAIC,MAAMH,IAAI,EAAEI,KAAK,CAAC,EAAEC,OAAQC,UAAS;AACrD,YAAMC,OAAO,IAAIJ,MAAMF,OAAO,EAAEG,KAAK,IAAI,EAAEI,KAAK,EAAE;AAClD,aAAOF,KAAKG,OAAOF,MAAM;QAAE3C,OAAO8C,QAAQ;MAAE,CAAC;IAC/C,GAAG,IAAIC,qBAAAA,QAAM,EAAEC,OAAOhC,MAAMK,KAAK,CAAC;AAClC,SAAKzB,MAAMqD,eAAeX,OAAOnD,MAAMoB,QAAQC,IAAI;AACnD,SAAKZ,MAAMkB,aAAaE,MAAMK,OAAOlC,MAAMoB,QAAQQ,MAAM;AACzD,SAAKpB,cAAc;EACrB;EAEAD,qBAAqB;AACnB,SAAKE,MAAMsD,GACT/D,MAAMgE,OAAOC,iBACZC,eAAgC;AAC/BA,gBAAUC,KAAMC,cAAa;AAC3B,YACE,CAAC,MAAM,MAAM,SAAS,OAAO,EAAEC,SAC5BD,SAASE,OAAuBC,OACnC,GACA;AACA,eAAK9D,MAAM+D,KAAKxE,MAAMgE,OAAOS,aAAa,CAACtB,OAAOuB,KAAKC,WAAW;AAChE,gBAAIA,WAAW3E,MAAMoB,QAAQC;AAAM;AACnC,iBAAKb,cAAc;UACrB,CAAC;AACD,iBAAO;QACT;AACA,eAAO;MACT,CAAC;IACH,CACF;EACF;AACF;AAEA,IAAA,gBAAeX;;;AE/Jf,IAAA+E,uBAAkB;AAOlB,IAAMC,SAAQC,eAAO,eAAe;AAepC,IAAMC,UAAN,cAAsBC,eAAqB;EAOzCC,YAAYC,OAAcC,SAAgC;AA7B5D;AA8BI,UAAMD,OAAOC,OAAO;AACpB,QAAIC,MAAMC,QAAQ,KAAKF,QAAQG,SAAS,GAAG;AACzC,YAAMA,YAAYC,SAASC,cAAc,KAAK;AAC9CF,gBAAUG,aAAa,QAAQ,SAAS;AACxCC,kBAAYJ,WAAW,KAAKH,QAAQG,SAAS;AAC7CJ,wBAAMI,cAANJ,mBAAiBS,eAAjBT,mBAA6BU,aAAaN,WAAWJ,MAAMI;AAC3D,WAAKA,YAAYA;IACnB,WAAW,OAAO,KAAKH,QAAQG,cAAc,UAAU;AACrD,WAAKA,YAAYC,SAASM,cAAc,KAAKV,QAAQG,SAAS;IAChE,OAAO;AACL,WAAKA,YAAY,KAAKH,QAAQG;IAChC;AACA,QAAI,EAAE,KAAKA,qBAAqBQ,cAAc;AAC5CjB,MAAAA,OAAMkB,MAAM,kCAAkC,KAAKZ,OAAO;AAC1D;IACF;AACA,SAAKG,UAAUU,UAAUC,IAAI,YAAY;AACzC,SAAKC,WAAW,CAAA;AAChB,SAAKC,WAAW,CAAC;AACjB,QAAI,KAAKhB,QAAQgB,UAAU;AACzBC,aAAOC,KAAK,KAAKlB,QAAQgB,QAAQ,EAAEG,QAASC,YAAW;AAlD7D,YAAAC;AAmDQ,cAAMC,WAAUD,MAAA,KAAKrB,QAAQgB,aAAb,gBAAAK,IAAwBD;AACxC,YAAIE,SAAS;AACX,eAAKC,WAAWH,QAAQE,OAAO;QACjC;MACF,CAAC;IACH;AACArB,UAAMuB,KAAK,KAAKrB,UAAUsB,iBAAiB,gBAAgB,CAAC,EAAEN,QAC3DO,WAAU;AAET,WAAKC,OAAOD,KAAK;IACnB,CACF;AACA,SAAK3B,MAAM6B,GAAGC,MAAMC,OAAOC,eAAe,MAAM;AAC9C,YAAM,CAACC,KAAK,IAAI,KAAKjC,MAAMkC,UAAUC,SAAS;AAC9C,WAAKC,OAAOH,KAAK;IACnB,CAAC;EACH;EAEAT,WAAWH,QAAgBE,SAAkB;AAC3C,SAAKN,SAASI,MAAM,IAAIE;EAC1B;EAEAK,OAAOD,OAAoB;AACzB,QAAIN,SAASnB,MAAMuB,KAAKE,MAAMb,SAAS,EAAEuB,KAAMC,eAAc;AAC3D,aAAOA,UAAUC,QAAQ,KAAK,MAAM;IACtC,CAAC;AACD,QAAI,CAAClB;AAAQ;AACbA,aAASA,OAAOmB,MAAM,MAAMC,MAAM;AAClC,QAAId,MAAMe,YAAY,UAAU;AAC9Bf,YAAMpB,aAAa,QAAQ,QAAQ;IACrC;AACA,QACE,KAAKU,SAASI,MAAM,KAAK,QACzB,KAAKrB,MAAM2C,OAAOC,MAAMvB,MAAM,KAAK,MACnC;AACA1B,MAAAA,OAAMkD,KAAK,4CAA4CxB,QAAQM,KAAK;AACpE;IACF;AACA,UAAMmB,YAAYnB,MAAMe,YAAY,WAAW,WAAW;AAC1Df,UAAMoB,iBAAiBD,WAAYE,OAAM;AACvC,UAAIC;AACJ,UAAItB,MAAMe,YAAY,UAAU;AAE9B,YAAIf,MAAMuB,gBAAgB;AAAG;AAE7B,cAAMC,WAAWxB,MAAM1B,QAAQ0B,MAAMuB,aAAa;AAClD,YAAIC,SAASC,aAAa,UAAU,GAAG;AACrCH,kBAAQ;QACV,OAAO;AACLA,kBAAQE,SAASF,SAAS;QAC5B;MACF,OAAO;AACL,YAAItB,MAAMb,UAAUuC,SAAS,WAAW,GAAG;AACzCJ,kBAAQ;QACV,OAAO;AAELA,kBAAQtB,MAAMsB,SAAS,CAACtB,MAAMyB,aAAa,OAAO;QACpD;AACAJ,UAAEM,eAAe;MACnB;AACA,WAAKtD,MAAMuD,MAAM;AACjB,YAAM,CAACtB,KAAK,IAAI,KAAKjC,MAAMkC,UAAUC,SAAS;AAC9C,UAAI,KAAKlB,SAASI,MAAM,KAAK,MAAM;AACjC,aAAKJ,SAASI,MAAM,EAAEmC,KAAK,MAAMP,KAAK;MACxC;;QAEE,KAAKjD,MAAM2C,OAAOC,MAAMvB,MAAM,EAAEoC,qBAAqBC;QACrD;AACAT,gBAAQU,OAAQ,SAAQtC,MAAO,EAAC;AAChC,YAAI,CAAC4B;AAAO;AACZ,aAAKjD,MAAM4D,eACT,IAAIC,qBAAAA,QAAM,EAEPC,OAAO7B,MAAM8B,KAAK,EAElBC,OAAO/B,MAAMQ,MAAM,EACnBwB,OAAO;UAAE,CAAC5C,MAAM,GAAG4B;QAAM,CAAC,GAC7BnB,MAAMoC,QAAQC,IAChB;MACF,OAAO;AACL,aAAKnE,MAAMqB,OAAOA,QAAQ4B,OAAOnB,MAAMoC,QAAQC,IAAI;MACrD;AACA,WAAK/B,OAAOH,KAAK;IACnB,CAAC;AACD,SAAKjB,SAASoD,KAAK,CAAC/C,QAAQM,KAAK,CAAC;EACpC;EAEAS,OAAOH,OAAqB;AAC1B,UAAMoC,UAAUpC,SAAS,OAAO,CAAC,IAAI,KAAKjC,MAAMsE,UAAUrC,KAAK;AAC/D,SAAKjB,SAASI,QAASmD,UAAS;AAC9B,YAAM,CAAClD,QAAQM,KAAK,IAAI4C;AACxB,UAAI5C,MAAMe,YAAY,UAAU;AAC9B,YAAI8B,SAAmC;AACvC,YAAIvC,SAAS,MAAM;AACjBuC,mBAAS;QACX,WAAWH,QAAQhD,MAAM,KAAK,MAAM;AAClCmD,mBAAS7C,MAAMhB,cAAc,kBAAkB;QACjD,WAAW,CAACT,MAAMC,QAAQkE,QAAQhD,MAAM,CAAC,GAAG;AAC1C,cAAI4B,QAAQoB,QAAQhD,MAAM;AAC1B,cAAI,OAAO4B,UAAU,UAAU;AAC7BA,oBAAQA,MAAMwB,QAAQ,MAAM,KAAK;UACnC;AACAD,mBAAS7C,MAAMhB,cAAe,iBAAgBsC,KAAM,IAAG;QACzD;AACA,YAAIuB,UAAU,MAAM;AAElB7C,gBAAMsB,QAAQ;AAEdtB,gBAAMuB,gBAAgB;QACxB,OAAO;AACLsB,iBAAOrB,WAAW;QACpB;MACF,WAAWlB,SAAS,MAAM;AACxBN,cAAMb,UAAU4D,OAAO,WAAW;AAClC/C,cAAMpB,aAAa,gBAAgB,OAAO;MAC5C,WAAWoB,MAAMyB,aAAa,OAAO,GAAG;AAGtC,cAAMH,QAAQoB,QAAQhD,MAAM;AAC5B,cAAMsD,WACJ1B,UAAUtB,MAAMiD,aAAa,OAAO,KACnC3B,SAAS,QAAQA,MAAM4B,SAAS,MAAMlD,MAAMiD,aAAa,OAAO,KAChE3B,SAAS,QAAQ,CAACtB,MAAMiD,aAAa,OAAO;AAC/CjD,cAAMb,UAAUgE,OAAO,aAAaH,QAAQ;AAC5ChD,cAAMpB,aAAa,gBAAgBoE,SAASE,SAAS,CAAC;MACxD,OAAO;AACL,cAAMF,WAAWN,QAAQhD,MAAM,KAAK;AACpCM,cAAMb,UAAUgE,OAAO,aAAaH,QAAQ;AAC5ChD,cAAMpB,aAAa,gBAAgBoE,SAASE,SAAS,CAAC;MACxD;IACF,CAAC;EACH;AACF;AACAhF,QAAQkF,WAAW,CAAC;AAEpB,SAASC,UAAU5E,WAAwBiB,QAAgB4B,OAAgB;AACzE,QAAMtB,QAAQtB,SAASC,cAAc,QAAQ;AAC7CqB,QAAMpB,aAAa,QAAQ,QAAQ;AACnCoB,QAAMb,UAAUC,IAAK,MAAKM,MAAO,EAAC;AAClCM,QAAMpB,aAAa,gBAAgB,OAAO;AAC1C,MAAI0C,SAAS,MAAM;AACjBtB,UAAMsB,QAAQA;AACdtB,UAAMpB,aAAa,cAAe,GAAEc,MAAO,KAAI4B,KAAM,EAAC;EACxD,OAAO;AACLtB,UAAMpB,aAAa,cAAcc,MAAM;EACzC;AACAjB,YAAU6E,YAAYtD,KAAK;AAC7B;AAEA,SAASnB,YACPJ,WACA8E,QAGA;AACA,MAAI,CAAChF,MAAMC,QAAQ+E,OAAO,CAAC,CAAC,GAAG;AAE7BA,aAAS,CAACA,MAAM;EAClB;AACAA,SAAO9D,QAASJ,cAAkB;AAChC,UAAMmE,QAAQ9E,SAASC,cAAc,MAAM;AAC3C6E,UAAMrE,UAAUC,IAAI,YAAY;AAChCC,aAASI,QAASgE,aAAiB;AACjC,UAAI,OAAOA,YAAY,UAAU;AAC/BJ,kBAAUG,OAAOC,OAAO;MAC1B,OAAO;AACL,cAAM/D,SAASH,OAAOC,KAAKiE,OAAO,EAAE,CAAC;AACrC,cAAMnC,QAAQmC,QAAQ/D,MAAM;AAC5B,YAAInB,MAAMC,QAAQ8C,KAAK,GAAG;AACxBoC,oBAAUF,OAAO9D,QAAQ4B,KAAK;QAChC,OAAO;AACL+B,oBAAUG,OAAO9D,QAAQ4B,KAAK;QAChC;MACF;IACF,CAAC;AACD7C,cAAU6E,YAAYE,KAAK;EAC7B,CAAC;AACH;AAEA,SAASE,UACPjF,WACAiB,QACAiE,QACA;AACA,QAAM3D,QAAQtB,SAASC,cAAc,QAAQ;AAC7CqB,QAAMb,UAAUC,IAAK,MAAKM,MAAO,EAAC;AAClCiE,SAAOlE,QAAS6B,WAAU;AACxB,UAAMuB,SAASnE,SAASC,cAAc,QAAQ;AAC9C,QAAI2C,UAAU,OAAO;AACnBuB,aAAOjE,aAAa,SAASgF,OAAOtC,KAAK,CAAC;IAC5C,OAAO;AACLuB,aAAOjE,aAAa,YAAY,UAAU;IAC5C;AACAoB,UAAMsD,YAAYT,MAAM;EAC1B,CAAC;AACDpE,YAAU6E,YAAYtD,KAAK;AAC7B;AAEA9B,QAAQkF,WAAW;EACjB3E,WAAW;EACXa,UAAU;IACRuE,QAAQ;AACN,YAAMvD,QAAQ,KAAKjC,MAAMyF,aAAa;AACtC,UAAIxD,SAAS;AAAM;AACnB,UAAIA,MAAMQ,WAAW,GAAG;AACtB,cAAM4B,UAAU,KAAKrE,MAAMsE,UAAU;AACrCpD,eAAOC,KAAKkD,OAAO,EAAEjD,QAASsE,UAAS;AAErC,cAAI,KAAK1F,MAAM2C,OAAOC,MAAM8C,MAAMC,MAAMC,MAAM,KAAK,MAAM;AACvD,iBAAK5F,MAAMqB,OAAOqE,MAAM,OAAO5D,MAAMoC,QAAQC,IAAI;UACnD;QACF,CAAC;MACH,OAAO;AACL,aAAKnE,MAAM6F,aAAa5D,MAAM8B,OAAO9B,MAAMQ,QAAQX,MAAMoC,QAAQC,IAAI;MACvE;IACF;IACA2B,UAAU7C,OAAO;AACf,YAAM;QAAE8C;MAAM,IAAI,KAAK/F,MAAMsE,UAAU;AACvC,UAAIrB,UAAU,SAAS8C,SAAS,MAAM;AACpC,aAAK/F,MAAMqB,OAAO,SAAS,SAASS,MAAMoC,QAAQC,IAAI;MACxD,WAAW,CAAClB,SAAS8C,UAAU,SAAS;AACtC,aAAK/F,MAAMqB,OAAO,SAAS,OAAOS,MAAMoC,QAAQC,IAAI;MACtD;AACA,WAAKnE,MAAMqB,OAAO,aAAa4B,OAAOnB,MAAMoC,QAAQC,IAAI;IAC1D;IACA6B,OAAO/C,OAAO;AACZ,YAAMhB,QAAQ,KAAKjC,MAAMyF,aAAa;AAEtC,YAAMpB,UAAU,KAAKrE,MAAMsE,UAAUrC,KAAK;AAE1C,YAAM+D,SAASC,SAAS5B,QAAQ2B,UAAU,GAAG,EAAE;AAC/C,UAAI/C,UAAU,QAAQA,UAAU,MAAM;AACpC,YAAIiD,WAAWjD,UAAU,OAAO,IAAI;AACpC,YAAIoB,QAAQyB,cAAc;AAAOI,sBAAY;AAC7C,aAAKlG,MAAMqB,OAAO,UAAU2E,SAASE,UAAUpE,MAAMoC,QAAQC,IAAI;MACnE;IACF;IACAgC,KAAKlD,OAAO;AACV,UAAIA,UAAU,MAAM;AAClBA,gBAAQU,OAAO,iBAAiB;MAClC;AACA,WAAK3D,MAAMqB,OAAO,QAAQ4B,OAAOnB,MAAMoC,QAAQC,IAAI;IACrD;IACAiC,KAAKnD,OAAO;AACV,YAAMhB,QAAQ,KAAKjC,MAAMyF,aAAa;AAEtC,YAAMpB,UAAU,KAAKrE,MAAMsE,UAAUrC,KAAK;AAC1C,UAAIgB,UAAU,SAAS;AACrB,YAAIoB,QAAQ+B,SAAS,aAAa/B,QAAQ+B,SAAS,aAAa;AAC9D,eAAKpG,MAAMqB,OAAO,QAAQ,OAAOS,MAAMoC,QAAQC,IAAI;QACrD,OAAO;AACL,eAAKnE,MAAMqB,OAAO,QAAQ,aAAaS,MAAMoC,QAAQC,IAAI;QAC3D;MACF,OAAO;AACL,aAAKnE,MAAMqB,OAAO,QAAQ4B,OAAOnB,MAAMoC,QAAQC,IAAI;MACrD;IACF;EACF;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnRA,IAAA,gBAAe;EACbkC,OAAO;IACL,IAAIC;IACJC,QAAQC;IACRC,OAAOC;IACPC,SAASC;EACX;EACAC,YAAYC;EACZC,YAAYC;EACZC,MAAMC;EACNC,OAAOC;EACPC,MAAMC;EACN,cAAcA;EACdC,OAAOC;EACPC,WAAW;IACT,IAAIC;IACJC,KAAKC;EACP;EACAC,SAASC;EACTC,QAAQ;IACN,KAAKC;IACL,KAAKC;IACL,KAAKC;IACL,KAAKC;IACL,KAAKC;IACL,KAAKC;EACP;EACAC,QAAQC;EACRC,OAAOC;EACPC,QAAQ;IACN,MAAMC;IACN,MAAMC;EACR;EACAC,MAAMC;EACNC,MAAM;IACJC,QAAQC;IACRC,OAAOC;IACPC,SAASC;EACX;EACAC,QAAQ;IACNC,KAAKC;IACLC,OAAOC;EACT;EACAC,QAAQC;EACRC,OAAOC;EACPC,WAAWC;EACXC,OAAOC;AACT;;;;AC/EA,IAAIC,iBAAiB;AAErB,SAASC,oBAAoBC,SAAsBC,WAAmB;AACpED,UAAQE,aACND,WACC,GAAE,EAAED,QAAQG,aAAaF,SAAS,MAAM,OAAQ,EACnD;AACF;AAEA,IAAMG,SAAN,MAAa;EAKXC,YAAYC,QAA2B;AACrC,SAAKA,SAASA;AACd,SAAKC,YAAYC,SAASC,cAAc,MAAM;AAC9C,SAAKC,YAAY;AACjB,SAAKJ,OAAOK,MAAMC,UAAU;AAE5B,SAAKN,OAAOO,WAAWC,aAAa,KAAKP,WAAW,KAAKD,MAAM;AAE/D,SAAKS,MAAMC,iBAAiB,aAAa,MAAM;AAC7C,WAAKC,aAAa;IACpB,CAAC;AACD,SAAKF,MAAMC,iBAAiB,WAAYE,WAAU;AAChD,cAAQA,MAAMC,KAAG;QACf,KAAK;AACH,eAAKF,aAAa;AAClB;QACF,KAAK;AACH,eAAKG,OAAO;AACZF,gBAAMG,eAAe;AACrB;QACF;MACF;IACF,CAAC;AACD,SAAKf,OAAOU,iBAAiB,UAAU,KAAKM,OAAOC,KAAK,IAAI,CAAC;EAC/D;EAEAN,eAAe;AACb,SAAKV,UAAUiB,UAAUC,OAAO,aAAa;AAE7C1B,wBAAoB,KAAKgB,OAAO,eAAe;AAE/ChB,wBAAoB,KAAK2B,SAAS,aAAa;EACjD;EAEAC,UAAUC,QAA2B;AACnC,UAAMC,OAAOrB,SAASC,cAAc,MAAM;AAE1CoB,SAAKC,WAAW;AAChBD,SAAK3B,aAAa,QAAQ,QAAQ;AAClC2B,SAAKL,UAAUO,IAAI,gBAAgB;AACnC,UAAMC,QAAQJ,OAAOzB,aAAa,OAAO;AACzC,QAAI6B,OAAO;AACTH,WAAK3B,aAAa,cAAc8B,KAAK;IACvC;AACA,QAAIJ,OAAOK,aAAa;AACtBJ,WAAK3B,aAAa,cAAc0B,OAAOK,WAAW;IACpD;AACAJ,SAAKb,iBAAiB,SAAS,MAAM;AACnC,WAAKkB,WAAWL,MAAM,IAAI;IAC5B,CAAC;AACDA,SAAKb,iBAAiB,WAAYE,WAAU;AAC1C,cAAQA,MAAMC,KAAG;QACf,KAAK;AACH,eAAKe,WAAWL,MAAM,IAAI;AAC1BX,gBAAMG,eAAe;AACrB;QACF,KAAK;AACH,eAAKD,OAAO;AACZF,gBAAMG,eAAe;AACrB;QACF;MACF;IACF,CAAC;AAED,WAAOQ;EACT;EAEAM,aAAa;AACX,UAAMpB,QAAQP,SAASC,cAAc,MAAM;AAC3CM,UAAMS,UAAUO,IAAI,iBAAiB;AACrChB,UAAMqB,YAAYC;AAElBtB,UAAMe,WAAW;AACjBf,UAAMb,aAAa,QAAQ,QAAQ;AACnCa,UAAMb,aAAa,iBAAiB,OAAO;AAC3C,SAAKK,UAAU+B,YAAYvB,KAAK;AAChC,WAAOA;EACT;EAEAwB,eAAe;AACb,UAAMb,UAAUlB,SAASC,cAAc,MAAM;AAC7CiB,YAAQF,UAAUO,IAAI,mBAAmB;AAGzCL,YAAQxB,aAAa,eAAe,MAAM;AAE1CwB,YAAQI,WAAW;AAGnBJ,YAAQc,KAAM,qBAAoB1C,cAAe;AACjDA,sBAAkB;AAClB,SAAKiB,MAAMb,aAAa,iBAAiBwB,QAAQc,EAAE;AAGnD,SAAKd,UAAUA;AAEfe,UAAMC,KAAK,KAAKpC,OAAOoB,OAAO,EAAEiB,QAASf,YAAW;AAClD,YAAMC,OAAO,KAAKF,UAAUC,MAAM;AAClCF,cAAQY,YAAYT,IAAI;AACxB,UAAID,OAAOgB,aAAa,MAAM;AAC5B,aAAKV,WAAWL,IAAI;MACtB;IACF,CAAC;AACD,SAAKtB,UAAU+B,YAAYZ,OAAO;EACpC;EAEAhB,cAAc;AACZ+B,UAAMC,KAAK,KAAKpC,OAAOuC,UAAU,EAAEF,QAASd,UAAS;AACnD,WAAKtB,UAAUL,aAAa2B,KAAKiB,MAAMjB,KAAKG,KAAK;IACnD,CAAC;AACD,SAAKzB,UAAUiB,UAAUO,IAAI,WAAW;AACxC,SAAKhB,QAAQ,KAAKoB,WAAW;AAC7B,SAAKI,aAAa;EACpB;EAEAnB,SAAS;AAEP,SAAK2B,MAAM;AAGXC,eAAW,MAAM,KAAKjC,MAAMkC,MAAM,GAAG,CAAC;EACxC;EAEAF,QAAQ;AACN,SAAKxC,UAAUiB,UAAU0B,OAAO,aAAa;AAC7C,SAAKnC,MAAMb,aAAa,iBAAiB,OAAO;AAEhD,SAAKwB,QAAQxB,aAAa,eAAe,MAAM;EACjD;EAEAgC,WAAWL,MAA2C;AAAA,QAAjBsB,UAAOC,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG;AAC7C,UAAMR,WAAW,KAAKrC,UAAUgD,cAAc,cAAc;AAC5D,QAAI1B,SAASe;AAAU;AACvB,QAAIA,YAAY,MAAM;AACpBA,eAASpB,UAAU0B,OAAO,aAAa;IACzC;AACA,QAAIrB,QAAQ;AAAM;AAClBA,SAAKL,UAAUO,IAAI,aAAa;AAEhC,SAAKzB,OAAOkD,gBAAgBf,MAAMC,KAAKb,KAAKhB,WAAW4C,QAAQ,EAAEC,QAC/D7B,IACF;AACA,QAAIA,KAAK8B,aAAa,YAAY,GAAG;AAEnC,WAAK5C,MAAMb,aAAa,cAAc2B,KAAK1B,aAAa,YAAY,CAAC;IACvE,OAAO;AACL,WAAKY,MAAM6C,gBAAgB,YAAY;IACzC;AACA,QAAI/B,KAAK8B,aAAa,YAAY,GAAG;AAEnC,WAAK5C,MAAMb,aAAa,cAAc2B,KAAK1B,aAAa,YAAY,CAAC;IACvE,OAAO;AACL,WAAKY,MAAM6C,gBAAgB,YAAY;IACzC;AACA,QAAIT,SAAS;AACX,WAAK7C,OAAOuD,cAAc,IAAIC,MAAM,QAAQ,CAAC;AAC7C,WAAKf,MAAM;IACb;EACF;EAEAzB,SAAS;AACP,QAAIM;AACJ,QAAI,KAAKtB,OAAOkD,gBAAgB,IAAI;AAClC,YAAM3B;;QAEJ,KAAKtB,UAAUgD,cAAc,oBAAoB,EAAEE,SACjD,KAAKnD,OAAOkD,aAAa;;AAE7B5B,eAAS,KAAKtB,OAAOoB,QAAQ,KAAKpB,OAAOkD,aAAa;AAEtD,WAAKtB,WAAWL,IAAI;IACtB,OAAO;AACL,WAAKK,WAAW,IAAI;IACtB;AACA,UAAM6B,WACJnC,UAAU,QACVA,WAAW,KAAKtB,OAAOiD,cAAc,kBAAkB;AACzD,SAAKxC,MAAMS,UAAUC,OAAO,aAAasC,QAAQ;EACnD;AACF;AAEA,IAAA,iBAAe3D;;;ACnMf,IAAM4D,cAAN,cAA0BC,eAAO;EAC/BC,YAAYC,QAA2BC,OAAe;AACpD,UAAMD,MAAM;AACZ,SAAKC,MAAMC,YAAYD;AACvB,SAAKE,UAAUC,UAAUC,IAAI,iBAAiB;AAC9CC,UAAMC,KAAK,KAAKJ,UAAUK,iBAAiB,iBAAiB,CAAC,EAC1DC,MAAM,GAAG,CAAC,EACVC,QAASC,UAAS;AACjBA,WAAKP,UAAUC,IAAI,YAAY;IACjC,CAAC;EACL;EAEAO,UAAUC,QAA2B;AACnC,UAAMF,OAAO,MAAMC,UAAUC,MAAM;AACnCF,SAAKG,MAAMC,kBAAkBF,OAAOG,aAAa,OAAO,KAAK;AAC7D,WAAOL;EACT;EAEAM,WAAWN,MAA0BO,SAAmB;AACtD,UAAMD,WAAWN,MAAMO,OAAO;AAC9B,UAAMC,aAAa,KAAKlB,MAAMmB,cAA2B,iBAAiB;AAC1E,UAAMC,QAAQV,OAAOA,KAAKK,aAAa,YAAY,KAAK,KAAK;AAC7D,QAAIG,YAAY;AACd,UAAIA,WAAWG,YAAY,QAAQ;AACjCH,mBAAWL,MAAMS,SAASF;MAC5B,OAAO;AACLF,mBAAWL,MAAMU,OAAOH;MAC1B;IACF;EACF;AACF;AAEA,IAAA,uBAAexB;;;AChCf,IAAM4B,aAAN,cAAyBC,eAAO;EAG9BC,YAAYC,QAA2BC,OAA+B;AACpE,UAAMD,MAAM;AACZ,SAAKE,UAAUC,UAAUC,IAAI,gBAAgB;AAC7CC,UAAMC,KAAK,KAAKJ,UAAUK,iBAAiB,iBAAiB,CAAC,EAAEC,QAC5DC,UAAS;AACRA,WAAKC,YAAYT,MAAMQ,KAAKE,aAAa,YAAY,KAAK,EAAE;IAC9D,CACF;AACA,SAAKC,cAAc,KAAKV,UAAUW,cAAc,cAAc;AAC9D,SAAKC,WAAW,KAAKF,WAAW;EAClC;EAEAE,WAAWC,QAA4BC,SAAmB;AACxD,UAAMF,WAAWC,QAAQC,OAAO;AAChC,UAAMP,OAAOM,UAAU,KAAKH;AAC5B,QAAIH,QAAQ,MAAM;AAChB,UAAI,KAAKQ,MAAMP,cAAcD,KAAKC;AAAW;AAC7C,WAAKO,MAAMP,YAAYD,KAAKC;IAC9B;EACF;AACF;AAEA,IAAA,sBAAeb;;;ACxBf,IAAMqB,eAAgBC,QAAgB;AACpC,QAAM;IAAEC;EAAU,IAAIC,iBAAiBF,IAAI,IAAI;AAC/C,SAAOC,cAAc,aAAaA,cAAc;AAClD;AAEA,IAAME,UAAN,MAAc;EAKZC,YAAYC,OAAcC,iBAA+B;AACvD,SAAKD,QAAQA;AACb,SAAKC,kBAAkBA,mBAAmBC,SAASC;AACnD,SAAKC,OAAOJ,MAAMK,aAAa,YAAY;AAE3C,SAAKD,KAAKE,YAAY,KAAKP,YAAYQ;AACvC,QAAIb,aAAa,KAAKM,MAAMI,IAAI,GAAG;AACjC,WAAKJ,MAAMI,KAAKI,iBAAiB,UAAU,MAAM;AAC/C,aAAKJ,KAAKK,MAAMC,YAAa,GAAE,KAAK,KAAKV,MAAMI,KAAKO,SAAU;MAChE,CAAC;IACH;AACA,SAAKC,KAAK;EACZ;EAEAA,OAAO;AACL,SAAKR,KAAKS,UAAUC,IAAI,WAAW;EACrC;EAEAC,SAASC,WAAmB;AAC1B,UAAMC,OACJD,UAAUC,OAAOD,UAAUE,QAAQ,IAAI,KAAKd,KAAKe,cAAc;AAEjE,UAAMC,MAAMJ,UAAUK,SAAS,KAAKrB,MAAMI,KAAKO;AAC/C,SAAKP,KAAKK,MAAMQ,OAAQ,GAAEA,IAAK;AAC/B,SAAKb,KAAKK,MAAMW,MAAO,GAAEA,GAAI;AAC7B,SAAKhB,KAAKS,UAAUS,OAAO,SAAS;AACpC,UAAMC,kBAAkB,KAAKtB,gBAAgBuB,sBAAsB;AACnE,UAAMC,aAAa,KAAKrB,KAAKoB,sBAAsB;AACnD,QAAIE,QAAQ;AACZ,QAAID,WAAWE,QAAQJ,gBAAgBI,OAAO;AAC5CD,cAAQH,gBAAgBI,QAAQF,WAAWE;AAC3C,WAAKvB,KAAKK,MAAMQ,OAAQ,GAAEA,OAAOS,KAAM;IACzC;AACA,QAAID,WAAWR,OAAOM,gBAAgBN,MAAM;AAC1CS,cAAQH,gBAAgBN,OAAOQ,WAAWR;AAC1C,WAAKb,KAAKK,MAAMQ,OAAQ,GAAEA,OAAOS,KAAM;IACzC;AACA,QAAID,WAAWJ,SAASE,gBAAgBF,QAAQ;AAC9C,YAAMO,SAASH,WAAWJ,SAASI,WAAWL;AAC9C,YAAMS,gBAAgBb,UAAUK,SAASL,UAAUI,MAAMQ;AACzD,WAAKxB,KAAKK,MAAMW,MAAO,GAAEA,MAAMS,aAAc;AAC7C,WAAKzB,KAAKS,UAAUC,IAAI,SAAS;IACnC;AACA,WAAOY;EACT;EAEAI,OAAO;AACL,SAAK1B,KAAKS,UAAUS,OAAO,YAAY;AACvC,SAAKlB,KAAKS,UAAUS,OAAO,WAAW;EACxC;AACF;AAEA,IAAA,kBAAexB;;;ACjDf,IAAMiC,SAAS,CAAC,OAAO,UAAU,SAAS,SAAS;AAEnD,IAAMC,SAAS,CACb,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,SAAS;AAGX,IAAMC,QAAQ,CAAC,OAAO,SAAS,WAAW;AAE1C,IAAMC,UAAU,CAAC,KAAK,KAAK,KAAK,KAAK;AAErC,IAAMC,QAAQ,CAAC,SAAS,OAAO,SAAS,MAAM;AAE9C,IAAMC,YAAN,cAAwBC,cAAM;EAI5BC,YAAYC,OAAcC,SAAuB;AAC/C,UAAMD,OAAOC,OAAO;AACpB,UAAMC,WAAYC,OAAkB;AAClC,UAAI,CAACC,SAASC,KAAKC,SAASN,MAAMO,IAAI,GAAG;AACvCH,iBAASC,KAAKG,oBAAoB,SAASN,QAAQ;AACnD;MACF;AACA,UACE,KAAKO,WAAW;MAEhB,CAAC,KAAKA,QAAQF,KAAKD,SAASH,EAAEO,MAAM;MAEpCN,SAASO,kBAAkB,KAAKF,QAAQG,WACxC,CAAC,KAAKZ,MAAMa,SAAS,GACrB;AACA,aAAKJ,QAAQK,KAAK;MACpB;AACA,UAAI,KAAKC,WAAW,MAAM;AACxB,aAAKA,QAAQC,QAASC,YAAW;AAE/B,cAAI,CAACA,OAAOC,UAAUZ,SAASH,EAAEO,MAAM,GAAG;AACxCO,mBAAOE,MAAM;UACf;QACF,CAAC;MACH;IACF;AACAnB,UAAMoB,QAAQC,UAAU,SAASjB,SAASC,MAAMH,QAAQ;EAC1D;EAQAoB,UAAUC,MAAc;AACtB,UAAMC,SAAS,MAAMF,UAAUC,IAAI;AACnC,QAAIA,SAAS,WAAW;AAEtB,WAAKE,cAAcD,MAAM;IAC3B;AACA,WAAOA;EACT;EAEAE,aACEC,SACAC,OACA;AACAC,UAAMC,KAAKH,OAAO,EAAEX,QAASe,YAAW;AACtC,YAAMC,YAAYD,OAAOE,aAAa,OAAO,KAAK;AAClDD,gBAAUE,MAAM,KAAK,EAAElB,QAASO,UAAS;AACvC,YAAI,CAACA,KAAKY,WAAW,KAAK;AAAG;AAC7BZ,eAAOA,KAAKa,MAAM,MAAMC,MAAM;AAC9B,YAAIT,MAAML,IAAI,KAAK;AAAM;AACzB,YAAIA,SAAS,aAAa;AAExBQ,iBAAOO,YAAYV,MAAML,IAAI,EAAE,EAAE,IAAIK,MAAML,IAAI,EAAEgB;QACnD,WAAW,OAAOX,MAAML,IAAI,MAAM,UAAU;AAE1CQ,iBAAOO,YAAYV,MAAML,IAAI;QAC/B,OAAO;AAEL,gBAAMiB,QAAQT,OAAOS,SAAS;AAE9B,cAAIA,SAAS,QAAQZ,MAAML,IAAI,EAAEiB,KAAK,GAAG;AAEvCT,mBAAOO,YAAYV,MAAML,IAAI,EAAEiB,KAAK;UACtC;QACF;MACF,CAAC;IACH,CAAC;EACH;EAEAC,aACEC,SACAd,OACA;AACA,SAAKb,UAAUc,MAAMC,KAAKY,OAAO,EAAEC,IAAKC,YAAW;AACjD,UAAIA,OAAOC,UAAUvC,SAAS,UAAU,GAAG;AACzC,YAAIsC,OAAOE,cAAc,QAAQ,KAAK,MAAM;AAC1CC,qBAAWH,QAAQpD,MAAM;QAC3B;AACA,YAAI,OAAOoC,MAAMoB,UAAU,UAAU;AACnC,iBAAO,IAAIC,oBAAWL,QAAQhB,MAAMoB,KAAK;QAC3C;MACF;AACA,UACEJ,OAAOC,UAAUvC,SAAS,eAAe,KACzCsC,OAAOC,UAAUvC,SAAS,UAAU,GACpC;AACA,cAAM4C,SAASN,OAAOC,UAAUvC,SAAS,eAAe,IACpD,eACA;AACJ,YAAIsC,OAAOE,cAAc,QAAQ,KAAK,MAAM;AAC1CC,qBACEH,QACAnD,QACAyD,WAAW,eAAe,YAAY,SACxC;QACF;AACA,eAAO,IAAIC,qBAAYP,QAAQhB,MAAMsB,MAAM,CAAW;MACxD;AACA,UAAIN,OAAOE,cAAc,QAAQ,KAAK,MAAM;AAC1C,YAAIF,OAAOC,UAAUvC,SAAS,SAAS,GAAG;AACxCyC,qBAAWH,QAAQlD,KAAK;QAC1B,WAAWkD,OAAOC,UAAUvC,SAAS,WAAW,GAAG;AACjDyC,qBAAWH,QAAQjD,OAAO;QAC5B,WAAWiD,OAAOC,UAAUvC,SAAS,SAAS,GAAG;AAC/CyC,qBAAWH,QAAQhD,KAAK;QAC1B;MACF;AACA,aAAO,IAAIwD,eAAOR,MAAM;IAC1B,CAAC;AACD,UAAMS,SAASA,MAAM;AACnB,WAAKtC,QAAQC,QAASC,YAAW;AAC/BA,eAAOoC,OAAO;MAChB,CAAC;IACH;AACA,SAAKrD,MAAMsD,GAAGC,gBAAQC,OAAOC,eAAeJ,MAAM;EACpD;AACF;AACAxD,UAAU6D,WAAWC,cAAM,CAAC,GAAG7D,cAAM4D,UAAU;EAC7CE,SAAS;IACPC,SAAS;MACPC,UAAU;QACRC,UAAU;AACR,eAAK/D,MAAMgE,MAAMvD,QAAQwD,KAAK,SAAS;QACzC;QACAC,QAAQ;AACN,cAAIC,YAAY,KAAKjD,UAAU4B,cAC7B,2BACF;AACA,cAAIqB,aAAa,MAAM;AACrBA,wBAAY/D,SAASgE,cAAc,OAAO;AAC1CD,sBAAUE,aAAa,QAAQ,MAAM;AACrCF,sBAAUE,aACR,UACA,KAAKrE,MAAMsE,SAASrE,QAAQsE,UAAUC,KAAK,IAAI,CACjD;AACAL,sBAAUtB,UAAU4B,IAAI,UAAU;AAClCN,sBAAUO,iBAAiB,UAAU,MAAM;AACzC,oBAAMC,QAAQ,KAAK3E,MAAM4E,aAAa,IAAI;AAC1C,mBAAK5E,MAAMsE,SAASO,OAAOF,OAAOR,UAAUW,KAAK;AACjDX,wBAAU3B,QAAQ;YACpB,CAAC;AACD,iBAAKtB,UAAU6D,YAAYZ,SAAS;UACtC;AACAA,oBAAUa,MAAM;QAClB;QACAC,QAAQ;AACN,eAAKjF,MAAMgE,MAAMvD,QAAQwD,KAAK,OAAO;QACvC;MACF;IACF;EACF;AACF,CAAC;AAED,IAAMiB,cAAN,cAA0BC,gBAAQ;EAIhCpF,YAAYC,OAAcoF,iBAA+B;AACvD,UAAMpF,OAAOoF,eAAe;AAC5B,SAAKxE,UAAU,KAAKL,KAAKuC,cAAc,oBAAoB;AAC3D,SAAKuC,OAAO;EACd;EAEAA,SAAS;AAEP,SAAKzE,QAAQ8D,iBAAiB,WAAYY,WAAU;AAClD,UAAIA,MAAMC,QAAQ,SAAS;AACzB,aAAKC,KAAK;AACVF,cAAMG,eAAe;MACvB,WAAWH,MAAMC,QAAQ,UAAU;AACjC,aAAKG,OAAO;AACZJ,cAAMG,eAAe;MACvB;IACF,CAAC;EACH;EAEAC,SAAS;AACP,SAAK5E,KAAK;AACV,SAAK6E,aAAa;EACpB;EAEA1B,OAAmD;AAAA,QAA9C2B,OAAIC,UAAAxD,SAAA,KAAAwD,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG;AAAM,QAAEE,UAAsBF,UAAAxD,SAAA,KAAAwD,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG;AAC3C,SAAKtF,KAAKsC,UAAUmD,OAAO,WAAW;AACtC,SAAKzF,KAAKsC,UAAU4B,IAAI,YAAY;AACpC,QAAI,KAAK7D,WAAW;AAAM;AAE1B,QAAImF,WAAW,MAAM;AACnB,WAAKnF,QAAQ4B,QAAQuD;IACvB,WAAWH,SAAS,KAAKrF,KAAK0B,aAAa,WAAW,GAAG;AACvD,WAAKrB,QAAQ4B,QAAQ;IACvB;AACA,UAAMyD,SAAS,KAAKjG,MAAMkG,UAAU,KAAKlG,MAAMmG,UAAUC,UAAU;AACnE,QAAIH,UAAU,MAAM;AAClB,WAAKI,SAASJ,MAAM;IACtB;AACA,SAAKrF,QAAQgC,OAAO;AACpB,SAAKhC,QAAQyD,aACX,eACA,KAAKzD,QAAQqB,aAAc,QAAO2D,IAAK,EAAC,KAAK,EAC/C;AACA,SAAKrF,KAAK8D,aAAa,aAAauB,IAAI;EAC1C;EAEAD,eAAe;AACb,SAAK3F,MAAMsG,MAAM;MAAEC,eAAe;IAAK,CAAC;EAC1C;EAEAf,OAAO;AAEL,QAAI;MAAEhD;IAAM,IAAI,KAAK5B;AACrB,YAAQ,KAAKL,KAAK0B,aAAa,WAAW,GAAC;MACzC,KAAK,QAAQ;AACX,cAAM;UAAEuE;QAAU,IAAI,KAAKxG,MAAMO;AACjC,YAAI,KAAKkG,WAAW;AAClB,eAAKzG,MAAM0G,WACT,KAAKD,WACL,QACAjE,OACAe,gBAAQoD,QAAQC,IAClB;AACA,iBAAO,KAAKH;QACd,OAAO;AACL,eAAKd,aAAa;AAClB,eAAK3F,MAAMkD,OAAO,QAAQV,OAAOe,gBAAQoD,QAAQC,IAAI;QACvD;AACA,aAAK5G,MAAMO,KAAKiG,YAAYA;AAC5B;MACF;MACA,KAAK,SAAS;AACZhE,gBAAQqE,gBAAgBrE,KAAK;MAC/B;MACA,KAAK,WAAW;AACd,YAAI,CAACA;AAAO;AACZ,cAAMmC,QAAQ,KAAK3E,MAAM4E,aAAa,IAAI;AAC1C,YAAID,SAAS,MAAM;AACjB,gBAAMmC,QAAQnC,MAAMmC,QAAQnC,MAAMtC;AAClC,eAAKrC,MAAM+G;YACTD;;YAEA,KAAKvG,KAAK0B,aAAa,WAAW;YAClCO;YACAe,gBAAQoD,QAAQC;UAClB;AACA,cAAI,KAAKrG,KAAK0B,aAAa,WAAW,MAAM,WAAW;AACrD,iBAAKjC,MAAMgH,WAAWF,QAAQ,GAAG,KAAKvD,gBAAQoD,QAAQC,IAAI;UAC5D;AACA,eAAK5G,MAAMiH,aAAaH,QAAQ,GAAGvD,gBAAQoD,QAAQC,IAAI;QACzD;AACA;MACF;MACA;IACF;AAEA,SAAKhG,QAAQ4B,QAAQ;AACrB,SAAK1B,KAAK;EACZ;AACF;AAEA,SAAS+F,gBAAgBK,KAAa;AACpC,MAAIC,SACFD,IAAIC,MACF,4EACF,KACAD,IAAIC,MAAM,gEAAgE;AAC5E,MAAIA,QAAO;AACT,WAAQ,GAAEA,OAAM,CAAC,KAAK,OAAQ,4BAC5BA,OAAM,CAAC,CACR;EACH;AAEA,MAAKA,SAAQD,IAAIC,MAAM,gDAAgD,GAAI;AACzE,WAAQ,GAAEA,OAAM,CAAC,KAAK,OAAQ,6BAA4BA,OAAM,CAAC,CAAE;EACrE;AACA,SAAOD;AACT;AAEA,SAASnE,WACPH,QACAwE,QAEA;AAAA,MADAC,eAAqBxB,UAAAxD,SAAA,KAAAwD,UAAA,CAAA,MAAAC,SAAAD,UAAA,CAAA,IAAG;AAExBuB,SAAOpG,QAASwB,WAAU;AACxB,UAAM8E,SAASlH,SAASgE,cAAc,QAAQ;AAC9C,QAAI5B,UAAU6E,cAAc;AAC1BC,aAAOjD,aAAa,YAAY,UAAU;IAC5C,OAAO;AACLiD,aAAOjD,aAAa,SAASkD,OAAO/E,KAAK,CAAC;IAC5C;AACAI,WAAOmC,YAAYuC,MAAM;EAC3B,CAAC;AACH;;;AC7VA,IAAME,iBAAgC,CACpC,CAAC,QAAQ,UAAU,MAAM,GACzB,CAAC;EAAEC,QAAQ;AAAE,GAAG;EAAEA,QAAQ;AAAE,GAAG,YAAY,CAAC;AAG9C,IAAMC,gBAAN,cAA4BC,YAAY;EAStCC,YAAYC,OAAcC,QAAsB;AAC9C,UAAMD,OAAOC,MAAM;AACnB,SAAKD,MAAME,GACTC,gBAAQC,OAAOC,eACf,CAACC,MAAMC,OAAOC,UAAUC,WAAW;AACjC,UAAIH,SAASH,gBAAQC,OAAOM;AAAkB;AAC9C,UACEH,SAAS,QACTA,MAAMI,SAAS,KACfF,WAAWN,gBAAQS,QAAQC,MAC3B;AACA,aAAKC,KAAK;AAEV,aAAKC,KAAKC,MAAMC,OAAO;AACvB,aAAKF,KAAKC,MAAME,QAAQ;AACxB,aAAKH,KAAKC,MAAME,QAAS,GAAE,KAAKH,KAAKI,WAAY;AACjD,cAAMC,QAAQ,KAAKpB,MAAMqB,SAASd,MAAMe,OAAOf,MAAMI,MAAM;AAC3D,YAAIS,MAAMT,WAAW,GAAG;AACtB,gBAAMV,UAAS,KAAKD,MAAMuB,UAAUhB,KAAK;AACzC,cAAIN,WAAU,MAAM;AAClB,iBAAKuB,SAASvB,OAAM;UACtB;QACF,OAAO;AACL,gBAAMwB,WAAWL,MAAMA,MAAMT,SAAS,CAAC;AACvC,gBAAMW,QAAQ,KAAKtB,MAAM0B,SAASD,QAAQ;AAC1C,gBAAMd,SAASgB,KAAKC,IAClBH,SAASd,OAAO,IAAI,GACpBJ,MAAMe,QAAQf,MAAMI,SAASW,KAC/B;AACA,gBAAMO,cAAc,KAAK7B,MAAMuB,UAAU,IAAIO,MAAMR,OAAOX,MAAM,CAAC;AACjE,cAAIkB,eAAe,MAAM;AACvB,iBAAKL,SAASK,WAAW;UAC3B;QACF;MACF,WACEE,SAASC,kBAAkB,KAAKC,WAChC,KAAKjC,MAAMkC,SAAS,GACpB;AACA,aAAKC,KAAK;MACZ;IACF,CACF;EACF;EAEAC,SAAS;AACP,UAAMA,OAAO;AAEb,SAAKrB,KAAKsB,cAAc,WAAW,EAAEC,iBAAiB,SAAS,MAAM;AACnE,WAAKvB,KAAKwB,UAAUC,OAAO,YAAY;IACzC,CAAC;AACD,SAAKxC,MAAME,GAAGC,gBAAQC,OAAOqC,iBAAiB,MAAM;AAElDC,iBAAW,MAAM;AACf,YAAI,KAAK3B,KAAKwB,UAAUI,SAAS,WAAW;AAAG;AAC/C,cAAMpC,QAAQ,KAAKP,MAAM4C,aAAa;AACtC,YAAIrC,SAAS,MAAM;AACjB,gBAAMN,SAAS,KAAKD,MAAMuB,UAAUhB,KAAK;AACzC,cAAIN,UAAU,MAAM;AAClB,iBAAKuB,SAASvB,MAAM;UACtB;QACF;MACF,GAAG,CAAC;IACN,CAAC;EACH;EAEA4C,SAAS;AACP,SAAK/B,KAAK;EACZ;EAEAU,SAASsB,WAAmB;AAC1B,UAAMC,QAAQ,MAAMvB,SAASsB,SAAS;AACtC,UAAME,QAAQ,KAAKjC,KAAKsB,cAAc,mBAAmB;AAEzDW,UAAMhC,MAAMiC,aAAa;AACzB,QAAIF,UAAU,GAAG;AAEfC,YAAMhC,MAAMiC,aAAc,GAAE,KAAKF,QAAQC,MAAM7B,cAAc,CAAE;IACjE;AACA,WAAO4B;EACT;AACF;AAxFE,cADIlD,eACGqD,YAAW,CAChB,0CACA,mCACA,oGACA,4BACA,QAAQ,EACRC,KAAK,EAAE;AAoFX,IAAMC,cAAN,cAA0BC,UAAU;EAGlCtD,YAAYC,OAAcsD,SAAuB;AAC/C,QACEA,QAAQC,QAAQC,WAAW,QAC3BF,QAAQC,QAAQC,QAAQC,aAAa,MACrC;AACAH,cAAQC,QAAQC,QAAQC,YAAY9D;IACtC;AACA,UAAMK,OAAOsD,OAAO;AACpB,SAAKtD,MAAMyD,UAAUlB,UAAUmB,IAAI,WAAW;EAChD;EAEAC,cAAcH,SAAkB;AAE9B,SAAKI,UAAU,IAAI/D,cAAc,KAAKG,OAAO,KAAKsD,QAAQrD,MAAM;AAChE,QAAIuD,QAAQC,aAAa,MAAM;AAC7B,WAAKG,QAAQ7C,KAAK8C,YAAyBL,QAAQC,SAAS;AAC5D,WAAKK,aAAaN,QAAQC,UAAUM,iBAAiB,QAAQ,GAAGC,aAAK;AACrE,WAAKC,aAAaT,QAAQC,UAAUM,iBAAiB,QAAQ,GAAGC,aAAK;IACvE;EACF;AACF;AACAZ,YAAYc,WAAWC,cAAM,CAAC,GAAGd,UAAUa,UAAU;EACnDX,SAAS;IACPC,SAAS;MACPY,UAAU;QACRC,KAAKC,OAAe;AAClB,cAAI,CAACA,OAAO;AACV,iBAAKtE,MAAMuE,OAAO,QAAQ,OAAOC,MAAM5D,QAAQC,IAAI;UACrD,OAAO;AAEL,iBAAKb,MAAMyE,MAAMb,QAAQc,KAAK;UAChC;QACF;MACF;IACF;EACF;AACF,CAAwB;;;ACtIxB,IAAMC,kBAAgC,CACpC,CAAC;EAAEC,QAAQ,CAAC,KAAK,KAAK,KAAK,KAAK;AAAE,CAAC,GACnC,CAAC,QAAQ,UAAU,aAAa,MAAM,GACtC,CAAC;EAAEC,MAAM;AAAU,GAAG;EAAEA,MAAM;AAAS,CAAC,GACxC,CAAC,OAAO,CAAC;AAGX,IAAMC,cAAN,cAA0BC,YAAY;EAAtC;;AAQEC,mCAAU,KAAKC,KAAKC,cAAc,cAAc;;EAEhDC,SAAS;AACP,UAAMA,OAAO;AAEb,SAAKF,KACFC,cAAc,aAAa,EAC3BE,iBAAiB,SAAUC,WAAU;AACpC,UAAI,KAAKJ,KAAKK,UAAUC,SAAS,YAAY,GAAG;AAC9C,aAAKC,KAAK;MACZ,OAAO;AAEL,aAAKC,KAAK,QAAQ,KAAKT,QAAQU,WAAW;MAC5C;AACAL,YAAMM,eAAe;IACvB,CAAC;AAEH,SAAKV,KACFC,cAAc,aAAa,EAC3BE,iBAAiB,SAAUC,WAAU;AACpC,UAAI,KAAKO,aAAa,MAAM;AAC1B,cAAMC,QAAQ,KAAKD;AACnB,aAAKE,aAAa;AAClB,aAAKC,MAAMC,WAAWH,OAAO,QAAQ,OAAOI,gBAAQC,QAAQC,IAAI;AAChE,eAAO,KAAKP;MACd;AACAP,YAAMM,eAAe;AACrB,WAAKS,KAAK;IACZ,CAAC;AACH,SAAKL,MAAMM,GACTJ,gBAAQK,OAAOC,kBACf,CAACV,OAAOW,UAAUC,WAAW;AAC3B,UAAIZ,SAAS;AAAM;AACnB,UAAIA,MAAMa,WAAW,KAAKD,WAAWR,gBAAQC,QAAQC,MAAM;AACzD,cAAM,CAACQ,MAAMC,MAAM,IAAI,KAAKb,MAAMc,OAAOC,WACvCC,MACAlB,MAAMmB,KACR;AACA,YAAIL,QAAQ,MAAM;AAChB,eAAKf,YAAY,IAAIqB,MAAMpB,MAAMmB,QAAQJ,QAAQD,KAAKD,OAAO,CAAC;AAC9D,gBAAM1B,UAAU+B,KAASG,QAAQP,KAAKQ,OAAO;AAE7C,eAAKnC,QAAQU,cAAcV;AAE3B,eAAKA,QAAQoC,aAAa,QAAQpC,OAAO;AACzC,eAAKqC,KAAK;AACV,gBAAMC,SAAS,KAAKvB,MAAMwB,UAAU,KAAK3B,SAAS;AAClD,cAAI0B,UAAU,MAAM;AAClB,iBAAKE,SAASF,MAAM;UACtB;AACA;QACF;MACF,OAAO;AACL,eAAO,KAAK1B;MACd;AACA,WAAKQ,KAAK;IACZ,CACF;EACF;EAEAiB,OAAO;AACL,UAAMA,KAAK;AACX,SAAKpC,KAAKwC,gBAAgB,WAAW;EACvC;AACF;AAvEE,cADI3C,aACG4C,YAAW,CAChB,2FACA,oGACA,6BACA,2BAA2B,EAC3BC,KAAK,EAAE;AAoEX,IAAMC,YAAN,cAAwBC,UAAU;EAChCC,YAAY/B,OAAcgC,SAAuB;AAC/C,QACEA,QAAQC,QAAQC,WAAW,QAC3BF,QAAQC,QAAQC,QAAQC,aAAa,MACrC;AACAH,cAAQC,QAAQC,QAAQC,YAAYvD;IACtC;AACA,UAAMoB,OAAOgC,OAAO;AACpB,SAAKhC,MAAMmC,UAAU5C,UAAU6C,IAAI,SAAS;EAC9C;EAEAC,cAAcH,SAAkB;AAC9B,QAAIA,QAAQC,aAAa,MAAM;AAC7BD,cAAQC,UAAU5C,UAAU6C,IAAI,SAAS;AACzC,WAAKE,aAAaJ,QAAQC,UAAUI,iBAAiB,QAAQ,GAAGC,aAAK;AACrE,WAAKC,aAAaP,QAAQC,UAAUI,iBAAiB,QAAQ,GAAGC,aAAK;AAErE,WAAKE,UAAU,IAAI3D,YAAY,KAAKiB,OAAO,KAAKgC,QAAQT,MAAM;AAC9D,UAAIW,QAAQC,UAAUhD,cAAc,UAAU,GAAG;AAC/C,aAAKa,MAAM2C,SAASC,WAClB;UAAEC,KAAK;UAAKC,UAAU;QAAK,GAC3B,CAACC,QAAeC,YAAqB;AACnCd,kBAAQe,SAASrC,KAAKsC,KAAKhB,SAAS,CAACc,QAAQG,OAAOvC,IAAI;QAC1D,CACF;MACF;IACF;EACF;AACF;AACAiB,UAAUuB,WAAWC,cAAM,CAAC,GAAGvB,UAAUsB,UAAU;EACjDnB,SAAS;IACPC,SAAS;MACPe,UAAU;QACRrC,KAAK0C,OAAe;AAClB,cAAIA,OAAO;AACT,kBAAMxD,QAAQ,KAAKE,MAAMuD,aAAa;AACtC,gBAAIzD,SAAS,QAAQA,MAAMa,WAAW;AAAG;AACzC,gBAAI1B,UAAU,KAAKe,MAAMwD,QAAQ1D,KAAK;AACtC,gBACE,iBAAiB2D,KAAKxE,OAAO,KAC7BA,QAAQyE,QAAQ,SAAS,MAAM,GAC/B;AACAzE,wBAAW,UAASA,OAAQ;YAC9B;AAEA,kBAAM;cAAEyD;YAAQ,IAAI,KAAK1C,MAAM2D;AAC/BjB,oBAAQhD,KAAK,QAAQT,OAAO;UAC9B,OAAO;AACL,iBAAKe,MAAMmD,OAAO,QAAQ,OAAOS,MAAMzD,QAAQC,IAAI;UACrD;QACF;MACF;IACF;EACF;AACF,CAAwB;AAExB,IAAA,eAAeyB;;;AClGfgC,aAAMC,SACJ;EACE,mCAAmCC;EAEnC,2BAA2BC;EAC3B,gCAAgCC;EAChC,2BAA2BC;EAC3B,+BAA+BC;EAC/B,0BAA0BC;EAC1B,0BAA0BC;EAE1B,2BAA2BC;EAC3B,gCAAgCC;EAChC,2BAA2BC;EAC3B,+BAA+BC;EAC/B,0BAA0BC;EAC1B,0BAA0BC;AAC5B,GACA,IACF;AAEAd,aAAMC,SACJ;EACE,iBAAiBE;EACjB,qBAAqBG;EACrB,kBAAkBS;EAElB,sBAAsBL;EACtB,iBAAiBC;EACjB,gBAAgBJ;EAChB,gBAAgBC;EAEhB,sBAAsBQ;EACtB,sBAAsBC;EACtB,kBAAkBC;EAClB,gBAAgBC;EAEhB,gBAAgBC;EAChB,gBAAgBC;EAChB,kBAAkBC;EAClB,gBAAgBC;EAChB,kBAAkBC;EAClB,kBAAkBC;EAClB,qBAAqBC;EAErB,mBAAmBC;EACnB,iBAAiBC;EACjB,iBAAiBC;EAEjB,kBAAkBC;EAClB,iBAAiBC;EACjB,mBAAmBC;EAEnB,iBAAiBC;EACjB,eAAeC;EAEf,YAAYC;EACZ,aAAaC;EACb,kBAAkBC;EAClB,mBAAmBC;EACnB,cAAcC;AAChB,GACA,IACF;AAYA,IAAA,gBAAeC;",
  "names": ["longtext", "shorttext", "Promise", "WeakMap", "key", "require_lodash", "Promise", "WeakMap", "othValue", "isEqual", "isEqual", "AttributeMap", "Op", "isEqual", "Delta", "EventEmitter", "Scope", "_Registry", "match", "ClassAttributor", "StyleAttributor", "_ShadowBlot", "_LeafBlot", "_ParentBlot", "_InlineBlot", "ParentBlot", "AttributorStore", "LeafBlot", "_BlockBlot", "InlineBlot", "_ContainerBlot", "_ScrollBlot", "BlockBlot", "ContainerBlot", "_TextBlot", "import_quill_delta", "import_quill_delta", "Break", "EmbedBlot", "value", "undefined", "optimize", "prev", "next", "remove", "length", "blotName", "tagName", "Text", "TextBlot", "escapeText", "text", "replace", "s", "entityMap", "Inline", "InlineBlot", "compare", "self", "other", "selfIndex", "order", "indexOf", "otherIndex", "formatAt", "index", "length", "name", "value", "statics", "blotName", "scroll", "query", "Scope", "BLOT", "blot", "isolate", "wrap", "optimize", "context", "parent", "offset", "moveChildren", "allowedChildren", "Break", "EmbedBlot", "Text", "NEWLINE_LENGTH", "Block", "BlockBlot", "cache", "delta", "blockDelta", "deleteAt", "index", "length", "formatAt", "name", "value", "scroll", "query", "Scope", "BLOCK", "format", "Math", "min", "insertAt", "def", "lines", "split", "text", "shift", "children", "tail", "block", "reduce", "lineIndex", "line", "insertBefore", "blot", "ref", "head", "Break", "remove", "moveChildren", "target", "optimize", "context", "path", "removeChild", "child", "force", "arguments", "undefined", "clone", "parent", "next", "blotName", "tagName", "defaultChild", "allowedChildren", "Inline", "EmbedBlot", "TextBlot", "BlockEmbed", "attach", "attributes", "AttributorStore", "domNode", "Delta", "insert", "formats", "values", "attribute", "BLOCK_ATTRIBUTE", "pop", "blocks", "map", "create", "forEach", "scope", "BLOCK_BLOT", "filter", "descendants", "LeafBlot", "leaf", "bubbleFormats", "statics", "Cursor", "EmbedBlot", "value", "undefined", "constructor", "scroll", "domNode", "selection", "textNode", "document", "createTextNode", "CONTENTS", "appendChild", "savedLength", "detach", "parent", "removeChild", "format", "name", "target", "index", "statics", "scope", "Scope", "BLOCK_BLOT", "offset", "length", "optimize", "formatAt", "node", "position", "data", "remove", "restore", "composing", "range", "getNativeRange", "lastChild", "parentNode", "insertBefore", "prevTextBlot", "prev", "TextBlot", "prevTextLength", "nextTextBlot", "next", "nextText", "text", "newText", "split", "join", "mergedTextBlot", "insertAt", "newTextNode", "create", "remapOffset", "start", "end", "startNode", "startOffset", "endNode", "endOffset", "update", "mutations", "context", "some", "mutation", "type", "tagName", "isolate", "unwrap", "blotName", "className", "WeakMap", "levels", "level", "debug", "method", "indexOf", "_len", "arguments", "length", "args", "Array", "_key", "console", "namespace", "ns", "reduce", "logger", "bind", "newLevel", "debug", "logger", "EVENTS", "forEach", "eventName", "document", "addEventListener", "_len", "arguments", "length", "args", "Array", "_key", "from", "querySelectorAll", "node", "quill", "instances", "get", "emitter", "handleDOM", "Emitter", "EventEmitter", "constructor", "domListeners", "on", "error", "emit", "_len2", "_key2", "log", "call", "event", "_len3", "_key3", "type", "_ref", "handler", "target", "contains", "listenDOM", "push", "events", "EDITOR_CHANGE", "SCROLL_BEFORE_UPDATE", "SCROLL_BLOT_MOUNT", "SCROLL_BLOT_UNMOUNT", "SCROLL_OPTIMIZE", "SCROLL_UPDATE", "SCROLL_EMBED_UPDATE", "SELECTION_CHANGE", "TEXT_CHANGE", "COMPOSITION_BEFORE_START", "COMPOSITION_START", "COMPOSITION_BEFORE_END", "COMPOSITION_END", "sources", "API", "SILENT", "USER", "debug", "logger", "Range", "constructor", "index", "length", "arguments", "undefined", "Selection", "scroll", "emitter", "composing", "mouseDown", "root", "domNode", "cursor", "create", "savedRange", "lastRange", "lastNative", "handleComposition", "handleDragging", "listenDOM", "document", "setTimeout", "update", "bind", "Emitter", "sources", "USER", "on", "events", "SCROLL_BEFORE_UPDATE", "hasFocus", "native", "getNativeRange", "start", "node", "textNode", "once", "SCROLL_UPDATE", "source", "mutations", "contains", "end", "setNativeRange", "offset", "triggeredByTyping", "some", "mutation", "type", "target", "SILENT", "ignored", "SCROLL_OPTIMIZE", "context", "range", "startNode", "startOffset", "endNode", "endOffset", "COMPOSITION_BEFORE_START", "COMPOSITION_END", "parent", "restore", "body", "focus", "preventScroll", "setRange", "format", "value", "nativeRange", "collapsed", "query", "Scope", "BLOCK", "blot", "find", "LeafBlot", "after", "split", "insertBefore", "attach", "optimize", "data", "getBounds", "scrollLength", "Math", "min", "leaf", "next", "line", "nextLine", "position", "createRange", "setStart", "setEnd", "getBoundingClientRect", "side", "rect", "Text", "Element", "bottom", "top", "height", "left", "right", "width", "selection", "getSelection", "rangeCount", "getRangeAt", "normalizeNative", "info", "getRange", "isConnected", "normalized", "normalizedToRange", "activeElement", "positions", "push", "indexes", "map", "max", "startContainer", "endContainer", "forEach", "childNodes", "lastChild", "rangeToNative", "getPosition", "inclusive", "leafOffset", "force", "parentNode", "tagName", "Array", "from", "indexOf", "removeAllRanges", "addRange", "blur", "API", "args", "oldRange", "isEqual", "SELECTION_CHANGE", "cloneDeep", "emit", "EDITOR_CHANGE", "descendant", "e", "ASCII", "Editor", "constructor", "scroll", "delta", "getDelta", "applyDelta", "update", "scrollLength", "length", "batchStart", "normalizedDelta", "normalizeDelta", "deleteDelta", "Delta", "normalizedOps", "splitOpLines", "ops", "slice", "reduce", "index", "op", "Op", "attributes", "isImplicitNewlinePrepended", "isImplicitNewlineAppended", "insert", "retain", "text", "endsWith", "descendant", "BlockEmbed", "insertAt", "line", "offset", "formats", "merge", "bubbleFormats", "Block", "leaf", "LeafBlot", "AttributeMap", "diff", "key", "Object", "keys", "isInlineEmbed", "query", "Scope", "INLINE", "TextBlot", "value", "EmbedBlot", "statics", "scope", "INLINE_BLOT", "push", "updateEmbedAt", "forEach", "name", "formatAt", "prependedLength", "addedLength", "delete", "deleteAt", "batchEnd", "optimize", "deleteText", "formatLine", "arguments", "undefined", "format", "lines", "Math", "max", "cloneDeep", "formatText", "getContents", "concat", "getFormat", "leaves", "path", "blot", "descendants", "lineFormats", "leafFormats", "map", "blots", "shift", "combineFormats", "getHTML", "lineOffset", "lineLength", "isWithinLine", "convertHTML", "getText", "filter", "join", "insertContents", "contents", "change", "insertEmbed", "embed", "insertText", "replace", "isBlank", "children", "head", "blotName", "block", "Break", "removeFormat", "suffixLength", "suffix", "mutations", "selectionInfo", "oldDelta", "type", "target", "data", "match", "find", "textBlot", "oldValue", "CursorBlot", "CONTENTS", "oldText", "newText", "relativeSelectionInfo", "oldRange", "shiftRange", "newRange", "diffDelta", "compose", "isEqual", "convertListHTML", "items", "lastIndent", "types", "endTag", "getListType", "pop", "child", "indent", "rest", "tag", "attribute", "previousType", "isRoot", "html", "escapeText", "ParentBlot", "forEachAt", "childLength", "list", "parts", "outerHTML", "innerHTML", "domNode", "start", "end", "split", "Element", "combined", "merged", "combinedValue", "Array", "isArray", "indexOf", "_ref", "amount", "Range", "Module", "constructor", "quill", "options", "arguments", "length", "undefined", "DEFAULTS", "GUARD_TEXT", "Embed", "EmbedBlot", "constructor", "scroll", "node", "contentNode", "document", "createElement", "setAttribute", "Array", "from", "domNode", "childNodes", "forEach", "childNode", "appendChild", "leftGuard", "createTextNode", "rightGuard", "index", "offset", "restore", "range", "textNode", "text", "data", "split", "join", "prev", "TextBlot", "prevLength", "length", "insertAt", "startNode", "startOffset", "parent", "insertBefore", "create", "next", "update", "mutations", "context", "mutation", "type", "target", "Composition", "constructor", "scroll", "emitter", "isComposing", "setupListeners", "domNode", "addEventListener", "event", "handleCompositionStart", "queueMicrotask", "handleCompositionEnd", "blot", "target", "Node", "find", "Embed", "emit", "Emitter", "events", "COMPOSITION_BEFORE_START", "batchStart", "COMPOSITION_START", "COMPOSITION_BEFORE_END", "batchEnd", "COMPOSITION_END", "Theme", "constructor", "quill", "options", "modules", "init", "Object", "keys", "forEach", "name", "addModule", "ModuleClass", "import", "DEFAULTS", "themes", "default", "getParentElement", "element", "parentElement", "getRootNode", "host", "getElementRect", "rect", "getBoundingClientRect", "scaleX", "Math", "abs", "width", "offsetWidth", "scaleY", "height", "offsetHeight", "top", "right", "left", "clientWidth", "bottom", "clientHeight", "paddingValueToInt", "value", "number", "parseInt", "Number", "isNaN", "getScrollDistance", "targetStart", "targetEnd", "scrollStart", "scrollEnd", "scrollPaddingStart", "scrollPaddingEnd", "scrollRectIntoView", "root", "targetRect", "document", "ownerDocument", "current", "isDocumentBody", "body", "bounding", "window", "visualViewport", "documentElement", "style", "getComputedStyle", "scrollDistanceX", "scrollPaddingLeft", "scrollPaddingRight", "scrollDistanceY", "scrollPaddingTop", "scrollPaddingBottom", "defaultView", "scrollBy", "scrollLeft", "scrollTop", "scrolledLeft", "scrolledTop", "position", "MAX_REGISTER_ITERATIONS", "CORE_FORMATS", "createRegistryWithFormats", "formats", "sourceRegistry", "debug", "registry", "Registry", "forEach", "name", "coreBlot", "query", "register", "format", "error", "iterations", "requiredContainer", "debug", "logger", "globalRegistry", "Registry", "ParentBlot", "uiClass", "Quill", "limit", "level", "find", "node", "bubble", "arguments", "length", "undefined", "instances", "get", "import", "name", "imports", "error", "register", "target", "overwrite", "attrName", "blotName", "Object", "keys", "forEach", "key", "path", "warn", "startsWith", "constructor", "container", "options", "expandConfig", "html", "innerHTML", "trim", "classList", "add", "set", "root", "addContainer", "emitter", "Emitter", "scrollBlotName", "ScrollBlot", "registry", "query", "Error", "scroll", "editor", "Editor", "selection", "Selection", "composition", "Composition", "theme", "keyboard", "addModule", "clipboard", "history", "uploader", "init", "on", "events", "EDITOR_CHANGE", "type", "TEXT_CHANGE", "toggle", "isBlank", "SCROLL_UPDATE", "source", "mutations", "oldRange", "lastRange", "newRange", "getRange", "selectionInfo", "modify", "call", "update", "SCROLL_EMBED_UPDATE", "blot", "delta", "change", "Delta", "retain", "offset", "statics", "sources", "USER", "contents", "convert", "text", "setContents", "clear", "placeholder", "setAttribute", "readOnly", "disable", "allowReadOnlyEdits", "refNode", "className", "document", "createElement", "insertBefore", "blur", "setRange", "deleteText", "index", "overload", "enable", "editReadOnly", "modifier", "value", "enabled", "focus", "preventScroll", "scrollSelectionIntoView", "format", "API", "range", "getSelection", "Scope", "BLOCK", "formatLine", "formatText", "setSelection", "SILENT", "formats", "getBounds", "bounds", "containerBounds", "getBoundingClientRect", "bottom", "top", "height", "left", "right", "width", "getContents", "getLength", "getFormat", "getIndex", "getLeaf", "leaf", "getLine", "line", "getLines", "Number", "MAX_VALUE", "lines", "getModule", "modules", "getSemanticHTML", "getHTML", "getText", "hasFocus", "insertEmbed", "embed", "insertText", "isEnabled", "off", "once", "removeFormat", "scrollRectIntoView", "rect", "scrollIntoView", "console", "delete1", "applied", "insertContents", "delete2", "compose", "Range", "Math", "max", "setText", "insert", "updateContents", "applyDelta", "DEFAULTS", "version", "parchment", "Parchment", "Module", "Theme", "resolveSelector", "selector", "querySelector", "expandModuleConfig", "config", "entries", "reduce", "expanded", "_ref", "omitUndefinedValuesFromOptions", "obj", "fromEntries", "filter", "entry", "containerOrSelector", "shouldUseDefaultTheme", "quillModuleDefaults", "quillDefaults", "themeModuleDefaults", "themeDefaults", "userModuleOptions", "toolbar", "merge", "createRegistryWithFormats", "modulesWithDefaults", "_ref2", "moduleClass", "shift", "oldDelta", "shiftRange", "args", "emit", "lengthOrSource", "start", "end", "transformPosition", "map", "pos", "Container", "ContainerBlot", "import_quill_delta", "isLine", "blot", "Block", "BlockEmbed", "isUpdatable", "updateContent", "Scroll", "ScrollBlot", "constructor", "registry", "domNode", "_ref", "emitter", "batch", "optimize", "enable", "addEventListener", "e", "handleDragStart", "batchStart", "Array", "isArray", "batchEnd", "mutations", "update", "emitMount", "emit", "Emitter", "events", "SCROLL_BLOT_MOUNT", "emitUnmount", "SCROLL_BLOT_UNMOUNT", "emitEmbedUpdate", "change", "SCROLL_EMBED_UPDATE", "deleteAt", "index", "length", "first", "offset", "line", "last", "ref", "children", "head", "Break", "moveChildren", "remove", "enabled", "arguments", "undefined", "setAttribute", "formatAt", "format", "value", "insertAt", "def", "scroll", "query", "Scope", "BLOCK", "create", "statics", "defaultChild", "blotName", "appendChild", "endsWith", "slice", "embed", "insertBefore", "scope", "INLINE_BLOT", "wrapper", "insertContents", "delta", "renderBlocks", "deltaToRenderBlocks", "concat", "Delta", "insert", "pop", "shift", "shouldInsertNewlineChar", "type", "descendant", "key", "insertInlineContents", "newlineCharLength", "lineEndIndex", "formats", "bubbleFormats", "attributes", "AttributeMap", "diff", "Object", "keys", "forEach", "name", "refBlot", "refBlotOffset", "find", "split", "renderBlock", "block", "createBlock", "blockEmbed", "isEnabled", "getAttribute", "leaf", "path", "LeafBlot", "lines", "Number", "MAX_VALUE", "getLines", "blotIndex", "blotLength", "lengthLeft", "forEachAt", "child", "childIndex", "childLength", "push", "ContainerBlot", "context", "SCROLL_OPTIMIZE", "source", "sources", "USER", "observer", "takeRecords", "filter", "_ref2", "target", "SCROLL_BEFORE_UPDATE", "SCROLL_UPDATE", "updateEmbedAt", "b", "event", "preventDefault", "currentBlockDelta", "op", "splitted", "text", "INLINE", "entries", "_ref3", "isBlockBlot", "BLOT", "_ref4", "className", "tagName", "allowedChildren", "Container", "parent", "inlineContents", "reduce", "Op", "isInlineEmbed", "import_quill_delta", "config", "scope", "Scope", "BLOCK", "whitelist", "AlignAttribute", "Attributor", "AlignClass", "ClassAttributor", "AlignStyle", "StyleAttributor", "ColorAttributor", "StyleAttributor", "value", "domNode", "startsWith", "replace", "hex", "split", "map", "component", "parseInt", "toString", "slice", "join", "ColorClass", "ClassAttributor", "scope", "Scope", "INLINE", "ColorStyle", "BackgroundClass", "ClassAttributor", "scope", "Scope", "INLINE", "BackgroundStyle", "ColorAttributor", "CodeBlockContainer", "Container", "create", "value", "domNode", "setAttribute", "code", "index", "length", "children", "map", "child", "innerText", "join", "slice", "html", "escapeText", "CodeBlock", "Block", "register", "Quill", "TAB", "Code", "Inline", "blotName", "tagName", "className", "allowedChildren", "TextBlot", "Break", "Cursor", "requiredContainer", "config", "scope", "Scope", "BLOCK", "whitelist", "DirectionAttribute", "Attributor", "DirectionClass", "ClassAttributor", "DirectionStyle", "StyleAttributor", "config", "scope", "Scope", "INLINE", "whitelist", "FontClass", "ClassAttributor", "FontStyleAttributor", "StyleAttributor", "value", "node", "replace", "FontStyle", "SizeClass", "ClassAttributor", "scope", "Scope", "INLINE", "whitelist", "SizeStyle", "StyleAttributor", "import_quill_delta", "debug", "logger", "SHORTKEY", "test", "navigator", "platform", "Keyboard", "Module", "match", "evt", "binding", "some", "key", "which", "constructor", "quill", "options", "bindings", "Object", "keys", "forEach", "name", "addBinding", "shiftKey", "handleEnter", "metaKey", "ctrlKey", "altKey", "userAgent", "collapsed", "handleBackspace", "handleDelete", "prefix", "suffix", "handleDeleteRange", "offset", "listen", "keyBinding", "context", "arguments", "length", "undefined", "handler", "normalize", "warn", "Array", "isArray", "singleBinding", "push", "root", "addEventListener", "defaultPrevented", "isComposing", "keyCode", "concat", "matches", "filter", "blot", "Quill", "find", "target", "scroll", "range", "getSelection", "hasFocus", "line", "getLine", "index", "leafStart", "offsetStart", "getLeaf", "leafEnd", "offsetEnd", "prefixText", "TextBlot", "value", "slice", "suffixText", "curContext", "empty", "format", "getFormat", "event", "prevented", "every", "isEqual", "call", "preventDefault", "getLength", "formats", "delta", "Delta", "retain", "delete", "prev", "isPrevLineEmpty", "statics", "blotName", "curFormats", "prevFormats", "AttributeMap", "diff", "formatDelta", "compose", "updateContents", "sources", "USER", "focus", "next", "nextFormats", "deleteRange", "lineFormats", "reduce", "query", "Scope", "BLOCK", "insert", "setSelection", "SILENT", "defaultOptions", "bold", "makeFormatHandler", "italic", "underline", "indent", "outdent", "list", "makeCodeBlockHandler", "deleteText", "tab", "table", "history", "cutoff", "formatLine", "scrollSelectionIntoView", "header", "module", "getModule", "row", "cell", "getTable", "shift", "tableSide", "blockquote", "trim", "insertText", "numLines", "cur", "makeEmbedArrowHandler", "makeTableArrowHandler", "DEFAULTS", "_ref", "CodeBlock", "TAB", "lines", "getLines", "i", "insertAt", "domNode", "textContent", "startsWith", "deleteAt", "update", "where", "leaf", "EmbedBlot", "shortKey", "up", "targetRow", "parent", "targetCell", "children", "head", "Math", "min", "targetLine", "cloneDeep", "_ref2", "firstFormats", "lastFormats", "_table", "normalWeightRegexp", "blockTagNames", "isBlockElement", "element", "includes", "tagName", "normalizeEmptyLines", "doc", "Array", "from", "querySelectorAll", "filter", "br", "previousElementSibling", "nextElementSibling", "forEach", "parentNode", "removeChild", "normalizeFontWeight", "node", "getAttribute", "match", "fragment", "createDocumentFragment", "append", "childNodes", "replaceChild", "normalize", "querySelector", "ignoreRegexp", "idRegexp", "indentRegexp", "parseListItem", "element", "html", "style", "getAttribute", "idMatch", "match", "id", "Number", "indentMatch", "indent", "typeRegexp", "RegExp", "typeMatch", "type", "normalizeListItem", "doc", "msoList", "Array", "from", "querySelectorAll", "ignored", "others", "forEach", "node", "shouldIgnore", "push", "_a", "parentNode", "removeChild", "documentElement", "innerHTML", "listItems", "map", "filter", "parsed", "length", "childListItems", "current", "shift", "nextElementSibling", "ul", "document", "createElement", "listItem", "li", "setAttribute", "appendChild", "replaceChild", "slice", "_ref", "e", "normalize", "NORMALIZERS", "msWord", "googleDocs", "normalizeExternalHTML", "doc", "documentElement", "forEach", "normalize", "debug", "logger", "CLIPBOARD_CONFIG", "Node", "TEXT_NODE", "matchText", "matchNewline", "matchBreak", "ELEMENT_NODE", "matchBlot", "matchAttributor", "matchStyles", "matchIndent", "matchList", "matchCodeBlock", "matchTable", "createMatchAlias", "matchIgnore", "ATTRIBUTE_ATTRIBUTORS", "AlignAttribute", "DirectionAttribute", "reduce", "memo", "attr", "keyName", "STYLE_ATTRIBUTORS", "AlignStyle", "BackgroundStyle", "ColorStyle", "DirectionStyle", "FontStyle", "SizeStyle", "Clipboard", "Module", "constructor", "quill", "options", "root", "addEventListener", "e", "onCaptureCopy", "onCapturePaste", "bind", "matchers", "concat", "forEach", "_ref", "selector", "matcher", "addMatcher", "push", "convert", "_ref2", "html", "text", "formats", "arguments", "length", "undefined", "CodeBlock", "blotName", "Delta", "insert", "delta", "convertHTML", "deltaEndsWith", "ops", "attributes", "table", "compose", "retain", "delete", "normalizeHTML", "doc", "normalizeExternalHTML", "DOMParser", "parseFromString", "container", "body", "nodeMatches", "WeakMap", "elementMatchers", "textMatchers", "prepareMatching", "traverse", "scroll", "dangerouslyPasteHTML", "index", "source", "Quill", "sources", "API", "setContents", "setSelection", "SILENT", "paste", "updateContents", "isCut", "defaultPrevented", "preventDefault", "range", "selection", "getRange", "onCopy", "clipboardData", "setData", "deleteRange", "normalizeURIList", "urlList", "split", "filter", "url", "join", "isEnabled", "getSelection", "getData", "files", "Array", "from", "uploader", "upload", "childElementCount", "firstElementChild", "tagName", "onPaste", "getText", "getSemanticHTML", "_ref3", "getFormat", "pastedDelta", "log", "USER", "scrollSelectionIntoView", "pair", "querySelectorAll", "node", "has", "matches", "get", "set", "DEFAULTS", "applyFormat", "format", "value", "query", "newDelta", "op", "endText", "i", "slice", "isLine", "Element", "match", "prototype", "EmbedBlot", "includes", "toLowerCase", "isBetweenInlineElements", "previousElementSibling", "nextElementSibling", "preNodes", "isPre", "parentNode", "nodeType", "childNodes", "childNode", "childrenDelta", "reducedDelta", "_node", "Attributor", "keys", "classes", "ClassAttributor", "styles", "StyleAttributor", "name", "Scope", "ATTRIBUTE", "attrName", "Object", "entries", "_ref4", "embed", "BlockBlot", "language", "indent", "parent", "composed", "element", "list", "checkedAttr", "getAttribute", "HTMLParagraphElement", "nextSibling", "BlockEmbed", "firstChild", "style", "fontStyle", "italic", "textDecoration", "underline", "strike", "fontWeight", "startsWith", "parseInt", "bold", "_ref5", "parseFloat", "textIndent", "parentElement", "rows", "row", "indexOf", "data", "trim", "replacer", "collapse", "replaced", "replace", "previousSibling", "History", "Module", "constructor", "quill", "options", "lastRecorded", "ignoreChange", "stack", "undo", "redo", "currentRange", "on", "Quill", "events", "EDITOR_CHANGE", "eventName", "value", "oldValue", "source", "SELECTION_CHANGE", "sources", "SILENT", "TEXT_CHANGE", "userOnly", "USER", "record", "transform", "transformRange", "keyboard", "addBinding", "key", "shortKey", "bind", "shiftKey", "test", "navigator", "platform", "root", "addEventListener", "event", "inputType", "preventDefault", "change", "dest", "length", "item", "pop", "base", "getContents", "inverseDelta", "delta", "invert", "push", "range", "updateContents", "restoreSelection", "clear", "cutoff", "changeDelta", "oldDelta", "ops", "undoDelta", "undoRange", "timestamp", "Date", "now", "delay", "compose", "maxStack", "shift", "transformStack", "stackItem", "setSelection", "index", "getLastChangeIndex", "scroll", "DEFAULTS", "remoteDelta", "i", "oldItem", "splice", "endsWithNewlineChange", "lastOp", "insert", "endsWith", "attributes", "Object", "keys", "some", "attr", "query", "Scope", "BLOCK", "deleteLength", "reduce", "op", "delete", "changeIndex", "start", "transformPosition", "end", "import_quill_delta", "Uploader", "Module", "constructor", "quill", "options", "root", "addEventListener", "e", "preventDefault", "native", "document", "caretRangeFromPoint", "clientX", "clientY", "caretPositionFromPoint", "position", "createRange", "setStart", "offsetNode", "offset", "setEnd", "normalized", "selection", "normalizeNative", "range", "normalizedToRange", "dataTransfer", "files", "upload", "uploads", "Array", "from", "forEach", "file", "mimetypes", "includes", "type", "push", "length", "handler", "call", "DEFAULTS", "scroll", "query", "promises", "map", "Promise", "resolve", "reader", "FileReader", "onload", "result", "readAsDataURL", "all", "then", "images", "update", "reduce", "delta", "image", "insert", "Delta", "retain", "index", "delete", "updateContents", "Emitter", "sources", "USER", "setSelection", "SILENT", "import_quill_delta", "import_quill_delta", "INSERT_TYPES", "Input", "Module", "constructor", "quill", "options", "root", "addEventListener", "event", "handleBeforeInput", "test", "navigator", "userAgent", "on", "Quill", "events", "COMPOSITION_BEFORE_START", "handleCompositionStart", "deleteRange", "range", "replaceText", "text", "arguments", "length", "undefined", "formats", "getFormat", "index", "updateContents", "Delta", "retain", "insert", "sources", "USER", "setSelection", "SILENT", "composition", "isComposing", "defaultPrevented", "includes", "inputType", "staticRange", "getTargetRanges", "collapsed", "getPlainTextFromInputEvent", "normalized", "selection", "normalizeNative", "normalizedToRange", "preventDefault", "getSelection", "data", "dataTransfer", "types", "getData", "isMac", "test", "navigator", "platform", "TTL_FOR_VALID_SELECTION_CHANGE", "canMoveCaretBeforeUINode", "event", "key", "ctrlKey", "UINode", "Module", "constructor", "quill", "options", "isListening", "selectionChangeDeadline", "handleArrowKeys", "handleNavigationShortcuts", "keyboard", "addBinding", "offset", "shiftKey", "handler", "range", "_ref", "line", "ParentBlot", "uiNode", "isRTL", "getComputedStyle", "domNode", "setSelection", "index", "length", "Quill", "sources", "USER", "root", "addEventListener", "defaultPrevented", "ensureListeningToSelectionChange", "Date", "now", "listener", "handleSelectionChange", "document", "once", "selection", "getSelection", "getRangeAt", "collapsed", "startOffset", "scroll", "find", "startContainer", "newRange", "createRange", "setStartAfter", "setEndAfter", "removeAllRanges", "addRange", "Quill", "register", "Block", "BlockEmbed", "Break", "Container", "Cursor", "Embed", "Inline", "Scroll", "TextBlot", "Clipboard", "History", "Keyboard", "Uploader", "Input", "UINode", "IndentAttributor", "ClassAttributor", "add", "node", "value", "normalizedValue", "indent", "remove", "toString", "canAdd", "parseInt", "undefined", "IndentClass", "scope", "Scope", "BLOCK", "whitelist", "Blockquote", "Block", "blotName", "tagName", "Header", "Block", "formats", "domNode", "tagName", "indexOf", "blotName", "ListContainer", "Container", "blotName", "tagName", "ListItem", "Block", "create", "value", "node", "setAttribute", "formats", "domNode", "getAttribute", "undefined", "register", "Quill", "constructor", "scroll", "ui", "ownerDocument", "createElement", "listEventHandler", "e", "isEnabled", "format", "statics", "preventDefault", "addEventListener", "attachUI", "name", "allowedChildren", "requiredContainer", "Bold", "Inline", "create", "formats", "optimize", "context", "domNode", "tagName", "statics", "replaceWith", "blotName", "Italic", "Bold", "blotName", "tagName", "Link", "Inline", "create", "value", "node", "setAttribute", "sanitize", "formats", "domNode", "getAttribute", "url", "PROTOCOL_WHITELIST", "SANITIZED_URL", "format", "name", "statics", "blotName", "constructor", "tagName", "protocols", "anchor", "document", "createElement", "href", "protocol", "slice", "indexOf", "Script", "Inline", "create", "value", "document", "createElement", "formats", "domNode", "tagName", "undefined", "blotName", "Strike", "Bold", "blotName", "tagName", "Underline", "Inline", "blotName", "tagName", "Formula", "Embed", "create", "value", "window", "katex", "Error", "node", "render", "throwOnError", "errorColor", "setAttribute", "domNode", "getAttribute", "html", "formula", "blotName", "className", "tagName", "ATTRIBUTES", "Image", "EmbedBlot", "create", "value", "node", "setAttribute", "sanitize", "formats", "domNode", "reduce", "attribute", "hasAttribute", "getAttribute", "match", "url", "test", "format", "name", "indexOf", "removeAttribute", "blotName", "tagName", "ATTRIBUTES", "Video", "BlockEmbed", "create", "value", "node", "setAttribute", "sanitize", "formats", "domNode", "reduce", "attribute", "hasAttribute", "getAttribute", "url", "Link", "format", "name", "indexOf", "removeAttribute", "html", "video", "blotName", "className", "tagName", "import_quill_delta", "TokenAttributor", "ClassAttributor", "scope", "Scope", "INLINE", "CodeToken", "Inline", "formats", "node", "scroll", "domNode", "classList", "contains", "CodeBlock", "className", "parentNode", "undefined", "constructor", "value", "add", "format", "blotName", "remove", "statics", "optimize", "arguments", "unwrap", "SyntaxCodeBlock", "create", "setAttribute", "getAttribute", "register", "name", "replaceWith", "formatAt", "length", "SyntaxCodeBlockContainer", "CodeBlockContainer", "attach", "forceNext", "emitMount", "children", "forEach", "child", "index", "highlight", "forced", "head", "nodes", "Array", "from", "childNodes", "filter", "uiNode", "text", "map", "textContent", "join", "language", "cachedText", "trim", "oldDelta", "reduce", "delta", "concat", "blockDelta", "Delta", "diff", "_ref", "retain", "attributes", "Object", "keys", "includes", "html", "codeBlock", "find", "escapeText", "code", "context", "parent", "allowedChildren", "requiredContainer", "CursorBlot", "TextBlot", "BreakBlot", "lib", "versionString", "majorVersion", "split", "parseInt", "Syntax", "Module", "Quill", "quill", "options", "hljs", "Error", "languages", "memo", "_ref2", "key", "highlightBlot", "bind", "initListener", "initTimer", "on", "events", "SCROLL_BLOT_MOUNT", "blot", "select", "root", "ownerDocument", "createElement", "_ref3", "label", "option", "appendChild", "addEventListener", "focus", "attachUI", "timer", "SCROLL_OPTIMIZE", "clearTimeout", "setTimeout", "interval", "force", "selection", "composing", "update", "sources", "USER", "range", "getSelection", "blots", "descendants", "container", "SILENT", "setSelection", "line", "i", "insert", "innerHTML", "traverse", "compose", "data", "nodeText", "WeakMap", "DEFAULTS", "window", "import_quill_delta", "TableCell", "Block", "create", "value", "node", "setAttribute", "tableId", "formats", "domNode", "hasAttribute", "getAttribute", "undefined", "cellOffset", "parent", "children", "indexOf", "format", "name", "blotName", "row", "rowOffset", "table", "tagName", "TableRow", "Container", "checkMerge", "next", "head", "thisHead", "thisTail", "tail", "nextHead", "nextTail", "optimize", "context", "forEach", "child", "childFormats", "nextFormats", "splitAfter", "prev", "TableBody", "TableContainer", "balanceCells", "rows", "descendants", "maxColumns", "reduce", "max", "Math", "length", "Array", "fill", "blot", "scroll", "appendChild", "cells", "column", "map", "at", "deleteColumn", "index", "body", "descendant", "cell", "remove", "insertColumn", "ref", "insertBefore", "insertRow", "id", "allowedChildren", "requiredContainer", "random", "toString", "slice", "Table", "Module", "register", "Quill", "TableCell", "TableRow", "TableBody", "TableContainer", "constructor", "arguments", "listenBalanceCells", "balanceTables", "quill", "scroll", "descendants", "forEach", "table", "balanceCells", "deleteColumn", "cell", "getTable", "cellOffset", "update", "sources", "USER", "deleteRow", "row", "remove", "deleteTable", "offset", "setSelection", "SILENT", "range", "length", "undefined", "getSelection", "getLine", "index", "statics", "blotName", "parent", "insertColumn", "column", "shift", "rowOffset", "insertColumnLeft", "insertColumnRight", "insertRow", "children", "insertRowAbove", "insertRowBelow", "insertTable", "rows", "columns", "delta", "Array", "fill", "reduce", "memo", "text", "join", "insert", "tableId", "Delta", "retain", "updateContents", "on", "events", "SCROLL_OPTIMIZE", "mutations", "some", "mutation", "includes", "target", "tagName", "once", "TEXT_CHANGE", "old", "source", "import_quill_delta", "debug", "logger", "Toolbar", "Module", "constructor", "quill", "options", "Array", "isArray", "container", "document", "createElement", "setAttribute", "addControls", "parentNode", "insertBefore", "querySelector", "HTMLElement", "error", "classList", "add", "controls", "handlers", "Object", "keys", "forEach", "format", "_a", "handler", "addHandler", "from", "querySelectorAll", "input", "attach", "on", "Quill", "events", "EDITOR_CHANGE", "range", "selection", "getRange", "update", "find", "className", "indexOf", "slice", "length", "tagName", "scroll", "query", "warn", "eventName", "addEventListener", "e", "value", "selectedIndex", "selected", "hasAttribute", "contains", "preventDefault", "focus", "call", "prototype", "EmbedBlot", "prompt", "updateContents", "Delta", "retain", "index", "delete", "insert", "sources", "USER", "push", "formats", "getFormat", "pair", "option", "replace", "remove", "isActive", "getAttribute", "toString", "toggle", "DEFAULTS", "addButton", "appendChild", "groups", "group", "control", "addSelect", "values", "String", "clean", "getSelection", "name", "Scope", "INLINE", "removeFormat", "direction", "align", "indent", "parseInt", "modifier", "link", "list", "align", "alignLeftIcon", "center", "alignCenterIcon", "right", "alignRightIcon", "justify", "alignJustifyIcon", "background", "backgroundIcon", "blockquote", "blockquoteIcon", "bold", "boldIcon", "clean", "cleanIcon", "code", "codeIcon", "color", "colorIcon", "direction", "directionLeftToRightIcon", "rtl", "directionRightToLeftIcon", "formula", "formulaIcon", "header", "headerIcon", "header2Icon", "header3Icon", "header4Icon", "header5Icon", "header6Icon", "italic", "italicIcon", "image", "imageIcon", "indent", "indentIcon", "outdentIcon", "link", "linkIcon", "list", "bullet", "listBulletIcon", "check", "listCheckIcon", "ordered", "listOrderedIcon", "script", "sub", "subscriptIcon", "super", "superscriptIcon", "strike", "strikeIcon", "table", "tableIcon", "underline", "underlineIcon", "video", "videoIcon", "optionsCounter", "toggleAriaAttribute", "element", "attribute", "setAttribute", "getAttribute", "Picker", "constructor", "select", "container", "document", "createElement", "buildPicker", "style", "display", "parentNode", "insertBefore", "label", "addEventListener", "togglePicker", "event", "key", "escape", "preventDefault", "update", "bind", "classList", "toggle", "options", "buildItem", "option", "item", "tabIndex", "add", "value", "textContent", "selectItem", "buildLabel", "innerHTML", "DropdownIcon", "appendChild", "buildOptions", "id", "Array", "from", "forEach", "selected", "attributes", "name", "close", "setTimeout", "focus", "remove", "trigger", "arguments", "length", "undefined", "querySelector", "selectedIndex", "children", "indexOf", "hasAttribute", "removeAttribute", "dispatchEvent", "Event", "isActive", "ColorPicker", "Picker", "constructor", "select", "label", "innerHTML", "container", "classList", "add", "Array", "from", "querySelectorAll", "slice", "forEach", "item", "buildItem", "option", "style", "backgroundColor", "getAttribute", "selectItem", "trigger", "colorLabel", "querySelector", "value", "tagName", "stroke", "fill", "IconPicker", "Picker", "constructor", "select", "icons", "container", "classList", "add", "Array", "from", "querySelectorAll", "forEach", "item", "innerHTML", "getAttribute", "defaultItem", "querySelector", "selectItem", "target", "trigger", "label", "isScrollable", "el", "overflowY", "getComputedStyle", "Tooltip", "constructor", "quill", "boundsContainer", "document", "body", "root", "addContainer", "innerHTML", "TEMPLATE", "addEventListener", "style", "marginTop", "scrollTop", "hide", "classList", "add", "position", "reference", "left", "width", "offsetWidth", "top", "bottom", "remove", "containerBounds", "getBoundingClientRect", "rootBounds", "shift", "right", "height", "verticalShift", "show", "ALIGNS", "COLORS", "FONTS", "HEADERS", "SIZES", "BaseTheme", "Theme", "constructor", "quill", "options", "listener", "e", "document", "body", "contains", "root", "removeEventListener", "tooltip", "target", "activeElement", "textbox", "hasFocus", "hide", "pickers", "forEach", "picker", "container", "close", "emitter", "listenDOM", "addModule", "name", "module", "extendToolbar", "buildButtons", "buttons", "icons", "Array", "from", "button", "className", "getAttribute", "split", "startsWith", "slice", "length", "innerHTML", "rtl", "value", "buildPickers", "selects", "map", "select", "classList", "querySelector", "fillSelect", "align", "IconPicker", "format", "ColorPicker", "Picker", "update", "on", "Emitter", "events", "EDITOR_CHANGE", "DEFAULTS", "merge", "modules", "toolbar", "handlers", "formula", "theme", "edit", "image", "fileInput", "createElement", "setAttribute", "uploader", "mimetypes", "join", "add", "addEventListener", "range", "getSelection", "upload", "files", "appendChild", "click", "video", "BaseTooltip", "Tooltip", "boundsContainer", "listen", "event", "key", "save", "preventDefault", "cancel", "restoreFocus", "mode", "arguments", "undefined", "preview", "remove", "bounds", "getBounds", "selection", "savedRange", "position", "focus", "preventScroll", "scrollTop", "linkRange", "formatText", "sources", "USER", "extractVideoUrl", "index", "insertEmbed", "insertText", "setSelection", "url", "match", "values", "defaultValue", "option", "String", "TOOLBAR_CONFIG", "header", "BubbleTooltip", "BaseTooltip", "constructor", "quill", "bounds", "on", "Emitter", "events", "EDITOR_CHANGE", "type", "range", "oldRange", "source", "SELECTION_CHANGE", "length", "sources", "USER", "show", "root", "style", "left", "width", "offsetWidth", "lines", "getLines", "index", "getBounds", "position", "lastLine", "getIndex", "Math", "min", "indexBounds", "Range", "document", "activeElement", "textbox", "hasFocus", "hide", "listen", "querySelector", "addEventListener", "classList", "remove", "SCROLL_OPTIMIZE", "setTimeout", "contains", "getSelection", "cancel", "reference", "shift", "arrow", "marginLeft", "TEMPLATE", "join", "BubbleTheme", "BaseTheme", "options", "modules", "toolbar", "container", "add", "extendToolbar", "tooltip", "appendChild", "buildButtons", "querySelectorAll", "icons", "buildPickers", "DEFAULTS", "merge", "handlers", "link", "value", "format", "Quill", "theme", "edit", "TOOLBAR_CONFIG", "header", "list", "SnowTooltip", "BaseTooltip", "preview", "root", "querySelector", "listen", "addEventListener", "event", "classList", "contains", "save", "edit", "textContent", "preventDefault", "linkRange", "range", "restoreFocus", "quill", "formatText", "Emitter", "sources", "USER", "hide", "on", "events", "SELECTION_CHANGE", "oldRange", "source", "length", "link", "offset", "scroll", "descendant", "LinkBlot", "index", "Range", "formats", "domNode", "setAttribute", "show", "bounds", "getBounds", "position", "removeAttribute", "TEMPLATE", "join", "SnowTheme", "BaseTheme", "constructor", "options", "modules", "toolbar", "container", "add", "extendToolbar", "buildButtons", "querySelectorAll", "icons", "buildPickers", "tooltip", "keyboard", "addBinding", "key", "shortKey", "_range", "context", "handlers", "call", "format", "DEFAULTS", "merge", "value", "getSelection", "getText", "test", "indexOf", "theme", "Quill", "Quill", "register", "DirectionAttribute", "AlignClass", "BackgroundClass", "ColorClass", "DirectionClass", "FontClass", "SizeClass", "AlignStyle", "BackgroundStyle", "ColorStyle", "DirectionStyle", "FontStyle", "SizeStyle", "Indent", "Blockquote", "CodeBlock", "Header", "List", "Bold", "InlineCode", "Italic", "Link", "Script", "Strike", "Underline", "Formula", "Image", "Video", "Syntax", "Table", "Toolbar", "BubbleTheme", "SnowTheme", "Icons", "Picker", "IconPicker", "ColorPicker", "Tooltip", "Quill"]
}
